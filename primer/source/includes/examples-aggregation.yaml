collection: "inventory"
options:
  show_title: False
  show_collection: False
content:
  - '{ "_id" : ObjectId("53f768b390a2eb8e072cc4dc"), "item" : "ABC", "category" : "gloves", "details" : { "model" : "14Q2", "color" : "brown" }, "stock" : [ { "size" : "S", "qty" : 25 }, { "size" : "M", "qty" : 50 } ] }'
  - '{ "_id" : ObjectId("53f7694390a2eb8e072cc4dd"), "item" : "DEF", "category" : "gloves", "details" : { "model" : "14Q3", "color" : "red" }, "stock" : [ { "size" : "M", "qty" : 50 } ] }'
  - '{ "_id" : ObjectId("53f7694390a2eb8e072cc4de"), "item" : "IJK", "category" : "hat", "details" : { "model" : "14Q2", "color" : "blue" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 }, { "size" : "L", "qty" : 1 } ] }'
  - '{ "_id" : ObjectId("53f7694390a2eb8e072cc4df"), "item" : "LMN", "category" : "hat", "details" : { "model" : "14Q2", "color" : "brown" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "L", "qty" : 1 } ] }'
  - '{ "_id" : ObjectId("53f7694390a2eb8e072cc4e0"), "item" : "PQR", "category" : "gloves", "details" : { "model" : "14Q3", "color" : "black" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "L", "qty" : 1 } ] }'
edition:
  - shell
  - python
ref: example-collection
---
source:
  file: examples-aggregation-base.yaml
  ref: _group-documents-by-a-field-and-calculate-count
ref: group-documents-by-a-field-and-calculate-count
edition: shell
operation:
  - language: javascript
    code: |
      db.inventory.aggregate(
         [
           { $group: { "_id": "$category", "count": { $sum: 1 } } }
         ]
      );
results:
  - '{ "_id" : "hat", "count" : 2 }'
  - '{ "_id" : "gloves", "count" : 3 }'
---
source:
  file: examples-aggregation-base.yaml
  ref: _group-documents-by-a-field-and-calculate-count
ref: group-documents-by-a-field-and-calculate-count
edition: python
operation:
  - language: python
    code: |
      cursor = db.inventory.aggregate(
         [
           { "$group": { "_id": "$category", "count": { "$sum": 1 } } }
         ],
         cursor={}
      )
  - pre: "Iterate the cursor and print the matching documents."
    language: python
    code: |
      for document in cursor:
          print(document)
results:
  - "{u'count': 2, u'_id': u'hat'}"
  - "{u'count': 3, u'_id': u'gloves'}"
---
source:
  file: examples-aggregation-base.yaml
  ref: _filter-and-group-documents
ref: filter-and-group-documents
edition: shell
operation:
  - language: javascript
    code: |
      db.inventory.aggregate(
         [
           { $match: { "category": "gloves" } },
           { $group: { "_id": "$details.model" , "count": { $sum: 1 } } }
         ]
      );
results:
  - '{ "_id" : "14Q2", "count" : 1 }'
  - '{ "_id" : "14Q3", "count" : 2 }'
---
source:
  file: examples-aggregation-base.yaml
  ref: _filter-and-group-documents
ref: filter-and-group-documents
edition: python
operation:
  - language: python
    code: |
      cursor = db.inventory.aggregate(
         [
           { "$match": { "category": "gloves" } },
           { "$group": { "_id": "$details.model" , "count": { "$sum": 1 } } }
         ],
         cursor={}
      )
  - pre: |
      Iterate the cursor and print the matching documents.
    language: python
    code: |
      for document in cursor:
          print(document)
results:
  - "{u'count': 2, u'_id': u'14Q3'}"
  - "{u'count': 1, u'_id': u'14Q2'}"
---
source:
  file: examples-aggregation-base.yaml
  ref:  _unwind-an-array-and-project
ref: unwind-an-array-and-project
edition: shell
operation:
  - language: javascript
    code: |
      db.inventory.aggregate(
         [
           { $unwind: "$stock" },
           { $project: { "_id": 0, "stock": 1, "item": 1 } }
         ]
      )
results:
  - '{ "item" : "ABC", "stock" : { "size" : "S", "qty" : 25 } }'
  - '{ "item" : "ABC", "stock" : { "size" : "M", "qty" : 50 } }'
  - '{ "item" : "DEF", "stock" : { "size" : "M", "qty" : 50 } }'
  - '{ "item" : "IJK", "stock" : { "size" : "S", "qty" : 5 } }'
  - '{ "item" : "IJK", "stock" : { "size" : "M", "qty" : 5 } }'
  - '{ "item" : "IJK", "stock" : { "size" : "L", "qty" : 1 } }'
  - '{ "item" : "LMN", "stock" : { "size" : "S", "qty" : 5 } }'
  - '{ "item" : "LMN", "stock" : { "size" : "L", "qty" : 1 } }'
  - '{ "item" : "PQR", "stock" : { "size" : "S", "qty" : 5 } }'
  - '{ "item" : "PQR", "stock" : { "size" : "L", "qty" : 1 } }'
---
source:
  file: examples-aggregation-base.yaml
  ref:  _unwind-an-array-and-project
ref: unwind-an-array-and-project
edition: python
operation:
  - language: python
    code: |
      cursor = db.inventory.aggregate(
         [
           { "$unwind": "$stock" },
           { "$project": { "_id": 0, "stock": 1, "item": 1 } }
         ],
         cursor={}
      )
  - pre: |
      Iterate the cursor and print the matching documents.
    language: python
    code: |
      for document in cursor:
          print(document)
results:
  - "{u'item': u'ABC', u'stock': {u'size': u'S', u'qty': 25}}"
  - "{u'item': u'ABC', u'stock': {u'size': u'M', u'qty': 50}}"
  - "{u'item': u'DEF', u'stock': {u'size': u'M', u'qty': 50}}"
  - "{u'item': u'IJK', u'stock': {u'size': u'S', u'qty': 5}}"
  - "{u'item': u'IJK', u'stock': {u'size': u'M', u'qty': 5}}"
  - "{u'item': u'IJK', u'stock': {u'size': u'L', u'qty': 1}}"
  - "{u'item': u'LMN', u'stock': {u'size': u'S', u'qty': 5}}"
  - "{u'item': u'LMN', u'stock': {u'size': u'L', u'qty': 1}}"
  - "{u'item': u'PQR', u'stock': {u'size': u'S', u'qty': 5}}"
  - "{u'item': u'PQR', u'stock': {u'size': u'L', u'qty': 1}}"
...
