collection: "inventory"
options:
  show_title: False
  show_collection: False
content:
  source:
    file: example-query-all.yaml
    ref: 0
edition:
  - shell
  - python
---
source:
  file: examples-insert-base.yaml
  ref: _insert-documents
ref: insert-documents
edition: shell
operation:
  language: javascript
  code: |
      db.inventory.insert(
         {
           item: "ABC",
           category: "gloves",
           details: {
              model: "14Q2",
              color: "brown"
           },
           stock: [ { size: "S", qty: 25 }, { size: "M", qty: 50 } ]
         }
      )
post: |
  The method returns a :method:`WriteResult` object with the
  status of the operation. A successful insert of the document
  returns the following object:
results: |
   WriteResult({ "nInserted" : 1 })
---
source:
  file: examples-insert-base.yaml
  ref: _insert-documents
ref: insert-documents
edition: python
operation:
  language: python
  code: |
      db.inventory.insert(
         {
           "item": "ABC",
           "category": "gloves",
           "details": {
              "model": "14Q2",
              "color": "brown"
           },
           "stock": [ { "size": "S", "qty": 25 }, { "size": "M", "qty": 50 } ]
         }
      )
post: |
  The operation returns the ``_id`` field value for the inserted
  document.
results: |
  ObjectId('53fb68e0e908a14912ef43cc')
---
source:
  file: examples-insert-base.yaml
  ref: _review-inserted-document
ref: review-inserted-document
edition: shell
operation:
  language: javascript
  code: |
       db.inventory.find()
results:
  - '{item: "ABC", category: "gloves", details: { model: "14Q2", color: "brown" }, stock: [ { size: "S", qty: 25 }, { size: "M", qty: 50 } ] }'
replacement:
  insertMethod: :method:`~db.collection.insert()`
---
source:
  file: examples-insert-base.yaml
  ref: _review-inserted-document
ref: review-inserted-document
edition: python
operation:
  # this operation assumes running the example in the python shell.
  language: python
  code: |
    results = db.inventory.find()

    for document in results:
       document
replacement:
  insertMethod: :python:meth:`~pymongo.collection.Collection.insert()`
...
