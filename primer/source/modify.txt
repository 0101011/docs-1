===========
Modify Data
===========

.. default-domain:: mongodb

Overview
--------

MongoDB provides the :method:`~db.collection.update()` method to update
documents of a collection. The method accepts as its parameters:

- an update conditions document to match the documents to update,

- an update operations document to specify the modification to perform,
  and

- an options document.

To specify the update condition, use the same structure and syntax as
the query conditions. See :doc:`/query` for an introduction to query
conditions.

By default, the :method:`~db.collection.update()` method
updates a single document. Use the :ref:`multi` option to update all
documents that match the criteria.

Considerations
--------------

In MongoDB, write operations are atomic on the level of a single
document. If a single update operation modifies multiple documents of a
collection, the operation can interleave with other write operations on
that collection.

You cannot update the ``_id`` field.

.. include:: /includes/fact-id-values-generated.rst

Prerequisite
------------

The examples in this section query the ``inventory`` collection in the
``test`` database. To populate the collection, see
:doc:`/tutorial/prerequisite`.

Procedures
----------

Update Specific Fields
~~~~~~~~~~~~~~~~~~~~~~

To change a field value, MongoDB provides :manual:`update operators
</reference/operator/update>`, such as :update:`$set` to modify values.

Some update operators, such as :update:`$set`, will create the field if
the field does not exist. See the individual :manual:`update operator
</reference/operator/update>` reference.

.. include:: /includes/steps/getting-started-update.rst

Replace the Document
~~~~~~~~~~~~~~~~~~~~

To replace the entire content of a document except for the ``_id``
field, pass an entirely new document as the second argument to
:method:`~db.collection.update()`.

The replacement document can have different fields from the original
document. In the replacement document, you can omit the ``_id`` field
since the ``_id`` field is immutable. If you do include the ``_id``
field, it must be the same value as the existing value.
  
.. include:: /includes/steps/getting-started-update-replace.rst

Upsert Option
~~~~~~~~~~~~~

If no document matches the update condition, the default behavior of
the :method:`~db.collection.update()` method is to modify no document.

By specifying the ``upsert`` option, the
:method:`~db.collection.update()` method either updates the document or
documents that match the update criteria, or adds a new document using
the update specification if no matching document exists.

.. include:: /includes/steps/getting-started-update-upsert.rst

Additional Information
----------------------

See the :method:`~db.collection.update()` reference for additional
examples and features of the method and the :manual:`Update Operators
</reference/operator/update>` reference for complete documentation of
all available update operators.
