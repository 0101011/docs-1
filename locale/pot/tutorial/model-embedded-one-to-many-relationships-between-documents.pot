# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:5
msgid "Model One-to-Many Relationships with Embedded Documents"
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:16
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:18
msgid "This page describes a data model that uses :ref:`embedded <data-modeling-embedding>` documents to describe one-to-many relationships between connected data."
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:23
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:25
msgid "Consider the following example that maps patron and multiple address relationships. The example illustrates the advantage of embedding over referencing if you need to view many data entities in context of another. In this one-to-many relationship between ``patron`` and ``address`` data, the ``patron`` has multiple ``address`` entities."
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:31
msgid "In the normalized data model, the ``address`` documents contain a reference to the ``patron`` document."
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:57
msgid "If your application frequently retrieves the ``address`` data with the ``name`` information, then your application needs to issue multiple queries to resolve the references. A more optimal schema would be to embed the ``address`` data entities in the ``patron`` data, as in the following document:"
msgstr ""

#: ../source/tutorial/model-embedded-one-to-many-relationships-between-documents.txt:84
msgid "With the embedded data model, your application can retrieve the complete patron information with one query."
msgstr ""

