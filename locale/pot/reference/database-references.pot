# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/database-references.txt:8
msgid "Database References"
msgstr ""

#: ../source/reference/database-references.txt:18
msgid "For many use cases in MongoDB, the denormalized data model where related data is stored within a single :term:`document <document>` will be optimal. However, in some cases, it makes sense to store related information in separate documents, typically in different collections or databases."
msgstr ""

#: ../source/reference/database-references.txt:26
msgid "MongoDB 3.2 introduces :pipeline:`$lookup` pipeline stage to perform a left outer join to an unsharded collection in the same database. For more information and examples, see :pipeline:`$lookup`."
msgstr ""

#: ../source/reference/database-references.txt:30
msgid "Starting in MongoDB 3.4, you can also use :pipeline:`$graphLookup` pipeline stage to join an unsharded collection to perform recursive search. For more information and examples, see :pipeline:`$graphLookup`."
msgstr ""

#: ../source/reference/database-references.txt:35
msgid "This page outlines alternative procedures that predate the :pipeline:`$lookup` and :pipeline:`$graphLookup` pipeline stages."
msgstr ""

#: ../source/reference/database-references.txt:38
msgid "MongoDB applications use one of two methods for relating documents:"
msgstr ""

#: ../source/reference/database-references.txt:40
msgid ":ref:`Manual references <document-references>` where you save the ``_id`` field of one document in another document as a reference. Then your application can run a second query to return the related data. These references are simple and sufficient for most use cases."
msgstr ""

#: ../source/reference/database-references.txt:46
msgid ":ref:`DBRefs <dbref-explanation>` are references from one document to another using the value of the first document's ``_id`` field, collection name, and, optionally, its database name. By including these names, DBRefs allow documents located in multiple collections to be more easily linked with documents from a single collection."
msgstr ""

#: ../source/reference/database-references.txt:52
msgid "To resolve DBRefs, your application must perform additional queries to return the referenced documents. Many :ecosystem:`drivers </drivers>` have helper methods that form the query for the DBRef automatically. The drivers [#official-driver]_ do not *automatically* resolve DBRefs into documents."
msgstr ""

#: ../source/reference/database-references.txt:59
msgid "DBRefs provide a common format and type to represent relationships among documents. The DBRef format also provides common semantics for representing links between documents if your database must interact with multiple frameworks and tools."
msgstr ""

#: ../source/reference/database-references.txt:64
msgid "Unless you have a compelling reason to use DBRefs, use manual references instead."
msgstr ""

#: ../source/reference/database-references.txt:67
msgid "Some community supported drivers may have alternate behavior and may resolve a DBRef into a document automatically."
msgstr ""

#: ../source/reference/database-references.txt:74
msgid "Manual References"
msgstr ""

#: ../source/reference/database-references.txt:77
#: ../source/reference/database-references.txt:130
msgid "Background"
msgstr ""

#: ../source/reference/database-references.txt:79
msgid "Using manual references is the practice of including one :term:`document's <document>` ``_id`` field in another document. The application can then issue a second query to resolve the referenced fields as needed."
msgstr ""

#: ../source/reference/database-references.txt:85
msgid "Process"
msgstr ""

#: ../source/reference/database-references.txt:87
msgid "Consider the following operation to insert two documents, using the ``_id`` field of the first document as a reference in the second document:"
msgstr ""

#: ../source/reference/database-references.txt:107
msgid "Then, when a query returns the document from the ``people`` collection you can, if needed, make a second query for the document referenced by the ``places_id`` field in the ``places`` collection."
msgstr ""

#: ../source/reference/database-references.txt:112
#: ../source/reference/database-references.txt:268
msgid "Use"
msgstr ""

#: ../source/reference/database-references.txt:114
msgid "For nearly every case where you want to store a relationship between two documents, use :ref:`manual references <document-references>`. The references are simple to create and your application can resolve references as needed."
msgstr ""

#: ../source/reference/database-references.txt:119
msgid "The only limitation of manual linking is that these references do not convey the database and collection names. If you have documents in a single collection that relate to documents in more than one collection, you may need to consider using DBRefs."
msgstr ""

#: ../source/reference/database-references.txt:127
msgid "DBRefs"
msgstr ""

#: ../source/reference/database-references.txt:132
msgid "DBRefs are a convention for representing a :term:`document`, rather than a specific reference type. They include the name of the collection, and in some cases the database name, in addition to the value from the ``_id`` field."
msgstr ""

#: ../source/reference/database-references.txt:138
msgid "Format"
msgstr ""

#: ../source/reference/database-references.txt:140
msgid "DBRefs have the following fields:"
msgstr ""

#: ../source/reference/database-references.txt:144
msgid "The ``$ref`` field holds the name of the collection where the referenced document resides."
msgstr ""

#: ../source/reference/database-references.txt:149
msgid "The ``$id`` field contains the value of the ``_id`` field in the referenced document."
msgstr ""

#: ../source/reference/database-references.txt:154
msgid "*Optional.*"
msgstr ""

#: ../source/reference/database-references.txt:156
msgid "Contains the name of the database where the referenced document resides."
msgstr ""

#: ../source/reference/database-references.txt:159
msgid "Only some drivers support ``$db`` references."
msgstr ""

#: ../source/reference/database-references.txt:163
msgid "DBRef documents resemble the following document:"
msgstr ""

#: ../source/reference/database-references.txt:169
msgid "Consider a document from a collection that stored a DBRef in a ``creator`` field:"
msgstr ""

#: ../source/reference/database-references.txt:184
msgid "The DBRef in this example points to a document in the ``creators`` collection of the ``users`` database that has ``ObjectId(\"5126bc054aed4daf9e2ab772\")`` in its ``_id`` field."
msgstr ""

#: ../source/reference/database-references.txt:190
msgid "The order of fields in the DBRef matters, and you must use the above sequence when using a DBRef."
msgstr ""

#: ../source/reference/database-references.txt:194
msgid "Driver Support for DBRefs"
msgstr ""

#: ../source/reference/database-references.txt:199
msgid "**C**"
msgstr ""

#: ../source/reference/database-references.txt:201
msgid "The C driver contains no support for DBRefs. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:204
msgid "**C++**"
msgstr ""

#: ../source/reference/database-references.txt:206
msgid "The C++ driver contains no support for DBRefs. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:209
msgid "**C#**"
msgstr ""

#: ../source/reference/database-references.txt:211
msgid "The C# driver supports DBRefs using the :api:`MongoDBRef <csharp/current/html/T_MongoDB_Driver_MongoDBRef.htm>` class and ``FetchDBRef`` and ``FetchDBRefAs`` methods."
msgstr ""

#: ../source/reference/database-references.txt:215
msgid "**Haskell**"
msgstr ""

#: ../source/reference/database-references.txt:217
msgid "The Haskell driver contains no support for DBRefs. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:220
msgid "**Java**"
msgstr ""

#: ../source/reference/database-references.txt:222
msgid "The :api:`DBRef <java/current/com/mongodb/DBRef.html>` class provides support for DBRefs from Java."
msgstr ""

#: ../source/reference/database-references.txt:225
msgid "**JavaScript**"
msgstr ""

#: ../source/reference/database-references.txt:227
msgid "The :binary:`~bin.mongo` shell's :doc:`JavaScript </reference/method>` interface provides a DBRef."
msgstr ""

#: ../source/reference/database-references.txt:230
msgid "**Node.js**"
msgstr ""

#: ../source/reference/database-references.txt:232
msgid "The Node.js driver supports DBRefs using the `DBRef <http://mongodb.github.io/node-mongodb-native/api-bson-generated/db_ref.h tml>`_ class and the `dereference <http://mongodb.github.io/node-mongodb-native/api-generated/db.html#deref erence>`_ method."
msgstr ""

#: ../source/reference/database-references.txt:238
msgid "**Perl**"
msgstr ""

#: ../source/reference/database-references.txt:240
msgid "The Perl driver supports DBRefs using the `MongoDB::DBRef <https://metacpan.org/pod/MongoDB::DBRef>`_ class. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:244
msgid "**PHP**"
msgstr ""

#: ../source/reference/database-references.txt:246
msgid "The PHP driver contains no support for DBRefs. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:249
msgid "**Python**"
msgstr ""

#: ../source/reference/database-references.txt:251
msgid "The Python driver supports DBRefs using the :api:`DBRef <python/current/api/bson/dbref.html>` class and the :api:`dereference <python/current/api/pymongo/database.html#pymongo.database.Database.deref eren ce>` method."
msgstr ""

#: ../source/reference/database-references.txt:256
msgid "**Ruby**"
msgstr ""

#: ../source/reference/database-references.txt:258
msgid "The Ruby driver supports DBRefs using the :api:`DBRef <ruby/current/BSON/DBRef.html>` class and the :api:`dereference <ruby/current/Mongo/DB.html#dereference-instance_method>` method."
msgstr ""

#: ../source/reference/database-references.txt:262
msgid "**Scala**"
msgstr ""

#: ../source/reference/database-references.txt:264
msgid "The Scala driver contains no support for DBRefs. You can traverse references manually."
msgstr ""

#: ../source/reference/database-references.txt:270
msgid "In most cases you should use the :ref:`manual reference <document-references>` method for connecting two or more related documents. However, if you need to reference documents from multiple collections, consider using DBRefs."
msgstr ""

