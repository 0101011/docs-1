# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/insert.txt:3
msgid "insert"
msgstr ""

#: ../source/reference/command/insert.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/insert.txt:20
msgid "The :dbcommand:`insert` command inserts one or more documents and returns a document containing the status of all inserts. The insert methods provided by the MongoDB drivers use this command internally."
msgstr ""

#: ../source/reference/command/insert.txt:24
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/insert.txt:36
msgid "The :dbcommand:`insert` command takes the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:13
msgid "``insert``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:15
msgid "string"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:17
#: ../source/includes/apiargs/dbcommand-insert-field.rst:69
msgid "The name of the target collection."
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:21
msgid "``documents``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:23
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:25
#: ../source/includes/apiargs/dbcommand-insert-field.rst:75
msgid "An array of one or more documents to insert into the named collection."
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:29
msgid "``ordered``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:31
#: ../source/includes/apiargs/dbcommand-insert-field.rst:54
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:33
#: ../source/includes/apiargs/dbcommand-insert-field.rst:81
msgid "Optional. If ``true``, then when an insert of a document fails, return without inserting any remaining documents listed in the ``inserts`` array. If ``false``, then when an insert of a document fails, continue to insert the remaining documents. Defaults to ``true``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:40
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:42
msgid "document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:44
#: ../source/includes/apiargs/dbcommand-insert-field.rst:90
msgid "Optional. A document that expresses the :doc:`write concern </reference/write-concern>` of the :dbcommand:`insert` command. Omit to use the default write concern."
msgstr ""

#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
msgid "Do not explicitly set the write concern for the operation if run in a transaction. To use write concern with transactions, see :ref:`transaction-options`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:52
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:56
#: ../source/includes/apiargs/dbcommand-insert-field.rst:100
msgid "Optional. Enables :samp:`insert` to bypass document validation during the operation. This lets you insert documents that do not meet the validation requirements."
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:0
msgid "field string insert"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:0
msgid "field array documents"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:0
msgid "field boolean ordered"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:0
msgid "field document writeConcern"
msgstr ""

#: ../source/includes/apiargs/dbcommand-insert-field.rst:0
msgid "field boolean bypassDocumentValidation"
msgstr ""

#: ../source/reference/command/insert.txt:0
msgid "Returns"
msgstr ""

#: ../source/reference/command/insert.txt:40
msgid "A document that contains the status of the operation. See :ref:`insert-command-output` for details."
msgstr ""

#: ../source/reference/command/insert.txt:46
msgid "Behavior"
msgstr ""

#: ../source/reference/command/insert.txt:49
msgid "Size Limit"
msgstr ""

#: ../source/reference/command/insert.txt:51
msgid "The total size of all the ``documents`` array elements must be less than or equal to the :limit:`maximum BSON document size <BSON Document Size>`."
msgstr ""

#: ../source/reference/command/insert.txt:55
msgid "The total number of documents in the ``documents`` array must be less than or equal to the :limit:`maximum bulk size <Bulk Operation Size>`."
msgstr ""

#: ../source/reference/command/insert.txt:59
msgid "Document Validation"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-insert.rst:1
msgid "The :dbcommand:`insert` command adds support for the ``bypassDocumentValidation`` option, which lets you bypass :doc:`document validation </core/schema-validation>` when inserting or updating documents in a collection with validation rules."
msgstr ""

#: ../source/reference/command/insert.txt:64
msgid "Transactions"
msgstr ""

#: ../source/includes/extracts/transactions-supported-operation.rst:2
msgid "|operation| supports :doc:`multi-document transactions </core/transactions>`."
msgstr ""

#: ../source/reference/command/insert.txt:68
msgid "The collection must already exist. An insert operation that would result in the creation of a new collection are not allowed in a transaction."
msgstr ""

#: ../source/includes/extracts/transactions-usage.rst:3
msgid "In most cases, multi-document transaction incurs a greater performance cost over single document writes, and the availability of multi-document transaction should not be a replacement for effective schema design. For many scenarios, the :ref:`denormalized data model (embedded documents and arrays) <data-modeling-embedding>` will continue to be optimal for your data and use cases. That is, for many scenarios, modeling your data appropriately will minimize the need for multi-document transactions."
msgstr ""

#: ../source/reference/command/insert.txt:79
msgid "Examples"
msgstr ""

#: ../source/reference/command/insert.txt:82
msgid "Insert a Single Document"
msgstr ""

#: ../source/reference/command/insert.txt:84
msgid "Insert a document into the ``users`` collection:"
msgstr ""

#: ../source/reference/command/insert.txt:95
msgid "The returned document shows that the command successfully inserted a document. See :ref:`insert-command-output` for details."
msgstr ""

#: ../source/reference/command/insert.txt:103
msgid "Bulk Insert"
msgstr ""

#: ../source/reference/command/insert.txt:105
msgid "Insert three documents into the ``users`` collection:"
msgstr ""

#: ../source/reference/command/insert.txt:122
msgid "The returned document shows that the command successfully inserted the three documents. See :ref:`insert-command-output` for details."
msgstr ""

#: ../source/reference/command/insert.txt:132
msgid "Output"
msgstr ""

#: ../source/reference/command/insert.txt:134
msgid "The returned document contains a subset of the following fields:"
msgstr ""

#: ../source/reference/command/insert.txt:138
msgid "The status of the command."
msgstr ""

#: ../source/reference/command/insert.txt:142
msgid "The number of documents inserted."
msgstr ""

#: ../source/reference/command/insert.txt:146
msgid "An array of documents that contains information regarding any error encountered during the insert operation. The :data:`~insert.writeErrors` array contains an error document for each insert that errors."
msgstr ""

#: ../source/reference/command/insert.txt:151
msgid "Each error document contains the following fields:"
msgstr ""

#: ../source/reference/command/insert.txt:155
msgid "An integer that identifies the document in the ``documents`` array, which uses a zero-based index."
msgstr ""

#: ../source/reference/command/insert.txt:160
msgid "An integer value identifying the error."
msgstr ""

#: ../source/reference/command/insert.txt:164
msgid "A description of the error."
msgstr ""

#: ../source/reference/command/insert.txt:168
msgid "Document that describe error related to write concern and contains the field:"
msgstr ""

#: ../source/reference/command/insert.txt:173
msgid "An integer value identifying the cause of the write concern error."
msgstr ""

#: ../source/reference/command/insert.txt:177
msgid "A description of the cause of the write concern error."
msgstr ""

#: ../source/reference/command/insert.txt:179
msgid "The following is an example document returned for a successful :dbcommand:`insert` of a single document:"
msgstr ""

#: ../source/reference/command/insert.txt:186
msgid "The following is an example document returned for an :dbcommand:`insert` of two documents that successfully inserted one document but encountered an error with the other document:"
msgstr ""

