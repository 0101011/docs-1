# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/write-concern.txt:8
msgid "Write Concern"
msgstr ""

#: ../source/reference/write-concern.txt:18
msgid "Write concern describes the level of acknowledgment requested from MongoDB for write operations to a standalone :binary:`~bin.mongod` or to :doc:`replica sets </replication>` or to :doc:`sharded clusters </sharding>`. In sharded clusters, :binary:`~bin.mongos` instances will pass the write concern on to the shards."
msgstr ""

#: ../source/reference/write-concern.txt:26
msgid "For :doc:`multi-document transactions </core/transactions>`, you set the write concern at the transaction level, not at the individual operation level. Do not explicitly set the write concern for individual write operations in a transaction."
msgstr ""

#: ../source/reference/write-concern.txt:32
msgid "Write Concern Specification"
msgstr ""

#: ../source/reference/write-concern.txt:34
msgid "Write concern can include the following fields:"
msgstr ""

#: ../source/reference/write-concern.txt:40
msgid "the :ref:`w <wc-w>` option to request acknowledgment that the write operation has propagated to a specified number of :binary:`~bin.mongod` instances or to :binary:`~bin.mongod` instances with specified tags."
msgstr ""

#: ../source/reference/write-concern.txt:44
msgid "the :ref:`j <wc-j>` option to request acknowledgment that the write operation has been written to the on-disk journal, and"
msgstr ""

#: ../source/reference/write-concern.txt:47
msgid "the :ref:`wtimeout <wc-wtimeout>` option to specify a time limit to prevent write operations from blocking indefinitely."
msgstr ""

#: ../source/reference/write-concern.txt:53
msgid "``w`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:55
msgid "The ``w`` option requests acknowledgment that the write operation has propagated to a specified number of :binary:`~bin.mongod` instances or to :binary:`~bin.mongod` instances with specified tags."
msgstr ""

#: ../source/reference/write-concern.txt:59
msgid "Using the ``w`` option, the following ``w: <value>`` write concerns are available:"
msgstr ""

#: ../source/reference/write-concern.txt:66
msgid "Value"
msgstr ""

#: ../source/reference/write-concern.txt:67
msgid "Description"
msgstr ""

#: ../source/reference/write-concern.txt:71
msgid "Requests acknowledgment that the write operation has propagated to the specified number of :binary:`~bin.mongod` instances. For example:"
msgstr ""

#: ../source/reference/write-concern.txt:79
#: ../source/reference/write-concern.txt:238
msgid "``w: 1``"
msgstr ""

#: ../source/reference/write-concern.txt:76
msgid "Requests acknowledgment that the write operation has propagated to the standalone :binary:`~bin.mongod` or the primary in a replica set. ``w: 1`` is the default write concern for MongoDB."
msgstr ""

#: ../source/reference/write-concern.txt:89
msgid "``w: 0``"
msgstr ""

#: ../source/reference/write-concern.txt:82
msgid "Requests no acknowledgment of the write operation. However, ``w: 0`` may return information about socket exceptions and networking errors to the application."
msgstr ""

#: ../source/reference/write-concern.txt:86
msgid "If you specify ``w: 0`` but include :ref:`j: true <wc-j>`, the :ref:`j: true <wc-j>` prevails to request acknowledgment from the standalone :binary:`~bin.mongod` or the primary of a replica set."
msgstr ""

#: ../source/reference/write-concern.txt:91
msgid "``w`` greater than 1 requires acknowledgment from the primary and as many additional data-bearing secondaries to meet the specified write concern. For example, consider a 3-member replica set with no :term:`arbiters <Arbiter>`. Specifying ``w: 2`` would require acknowledgment from the primary and one of the secondaries. Specifying ``w: 3`` would require acknowledgment from the primary and both secondaries."
msgstr ""

#: ../source/reference/write-concern.txt:101
#: ../source/reference/write-concern.txt:333
msgid ":ref:`Hidden <replica-set-hidden-members>`, :ref:`delayed <replica-set-delayed-members>`, and :ref:`priority 0 <replica-set-secondary-only-members>` members can acknowledge :writeconcern:`w: \\<number\\> <\\<number\\>>` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:107
#: ../source/reference/write-concern.txt:136
#: ../source/reference/write-concern.txt:306
#: ../source/reference/write-concern.txt:339
msgid "Delayed secondaries can return write acknowledgment no earlier than the configured :rsconf:`~members[n].slaveDelay`."
msgstr ""

#: ../source/reference/write-concern.txt:110
#: ../source/reference/write-concern.txt:144
msgid "See :ref:`wc-ack-behavior` for when :binary:`~bin.mongod` instances acknowledge the write."
msgstr ""

#: ../source/reference/write-concern.txt:115
msgid "Requests acknowledgment that write operations have propagated to the majority of data-bearing voting members (i.e. :rsconf:`members[n].votes` is greater than ``0`` and :rsconf:`members[n].arbiterOnly` is ``false``)."
msgstr ""

#: ../source/reference/write-concern.txt:120
msgid "For example, consider a replica set with 3 data-bearing voting members. ``\"majority\"`` write concern requires acknowledgment from two out of three members, specifically the primary and one secondary. If you later scaled the replica set to 5 data-bearing voting members, ``\"majority\"`` would require acknowledgment from three out of five members. Specifically, the primary and two secondaries."
msgstr ""

#: ../source/reference/write-concern.txt:130
#: ../source/reference/write-concern.txt:300
msgid ":ref:`Hidden <replica-set-hidden-members>`, :ref:`delayed <replica-set-delayed-members>`, and :ref:`priority 0 <replica-set-secondary-only-members>` members with :rsconf:`members[n].votes` greater than ``0`` can acknowledge :writeconcern:`\"majority\"` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:139
msgid "After the write operation returns with a :writeconcern:`w: \"majority\" <\"majority\">` acknowledgment to the client, the client can read the result of that write with a :readconcern:`\"majority\"` readConcern."
msgstr ""

#: ../source/reference/write-concern.txt:149
msgid "Requests acknowledgment that the write operations have propagated to a replica set member with the specified :ref:`tag <replica-set-configuration-tag-sets>`. See :ref:`wc-ack-behavior` for when :binary:`~bin.mongod` instances acknowledge the write."
msgstr ""

#: ../source/reference/write-concern.txt:155
msgid ":doc:`/reference/replica-set-protocol-versions`"
msgstr ""

#: ../source/reference/write-concern.txt:160
msgid "``j`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:162
msgid "The ``j`` option requests acknowledgment from MongoDB that the write operation has been written to the :doc:`on-disk journal </core/journaling>`."
msgstr ""

#: ../source/reference/write-concern.txt:171
msgid "If ``j: true``, requests acknowledgment that the :binary:`~bin.mongod` instances, as specified in the :ref:`w: \\<value\\> <wc-w>`, have written to the on-disk journal. ``j: true`` does not by itself guarantee that the write will not be rolled back due to replica set primary failover."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
msgid "With :writeconcern:`j: true <j>`, MongoDB returns only after the requested number of members, including the primary, have written to the journal. Previously :writeconcern:`j: true <j>` write concern in a replica set only requires the :term:`primary` to write to the journal, regardless of the :ref:`w: \\<value\\> <wc-w>` write concern."
msgstr ""

#: ../source/reference/write-concern.txt:183
msgid "Specifying a write concern that includes ``j: true`` to a :binary:`~bin.mongod` instance that is running without journaling produces an error."
msgstr ""

#: ../source/reference/write-concern.txt:187
msgid "If journaling is enabled, :writeconcern:`w: \"majority\" <\"majority\">` may imply ``j: true``. The :rsconf:`writeConcernMajorityJournalDefault` replica set configuration setting determines the behavior. See :ref:`wc-ack-behavior` for details."
msgstr ""

#: ../source/reference/write-concern.txt:196
msgid "``wtimeout``"
msgstr ""

#: ../source/reference/write-concern.txt:198
msgid "This option specifies a time limit, in milliseconds, for the write concern. ``wtimeout`` is only applicable for ``w`` values greater than ``1``."
msgstr ""

#: ../source/reference/write-concern.txt:202
msgid "``wtimeout`` causes write operations to return with an error after the specified limit, even if the required write concern will eventually succeed. When these write operations return, MongoDB **does not** undo successful data modifications performed before the write concern exceeded the ``wtimeout`` time limit."
msgstr ""

#: ../source/reference/write-concern.txt:208
msgid "If you do not specify the ``wtimeout`` option and the level of write concern is unachievable, the write operation will block indefinitely. Specifying a ``wtimeout`` value of ``0`` is equivalent to a write concern without the ``wtimeout`` option."
msgstr ""

#: ../source/reference/write-concern.txt:216
msgid "Acknowledgment Behavior"
msgstr ""

#: ../source/reference/write-concern.txt:218
msgid "The :ref:`w <wc-w>` option and the :ref:`j <wc-j>` option determine when :binary:`~bin.mongod` instances acknowledge write operations."
msgstr ""

#: ../source/reference/write-concern.txt:222
msgid "Standalone"
msgstr ""

#: ../source/reference/write-concern.txt:224
msgid "A standalone :binary:`~bin.mongod` acknowledges a write operation either after applying the write in memory or after writing to the on-disk journal. The following table lists the acknowledgment behavior for a standalone and the relevant write concerns:"
msgstr ""

#: ../source/reference/write-concern.txt:234
#: ../source/reference/write-concern.txt:275
#: ../source/reference/write-concern.txt:321
msgid "``j`` is unspecified"
msgstr ""

#: ../source/reference/write-concern.txt:235
msgid "``j:true``"
msgstr ""

#: ../source/reference/write-concern.txt:236
msgid "``j:false``"
msgstr ""

#: ../source/reference/write-concern.txt:239
#: ../source/reference/write-concern.txt:241
#: ../source/reference/write-concern.txt:246
msgid "In memory"
msgstr ""

#: ../source/reference/write-concern.txt:240
#: ../source/reference/write-concern.txt:245
msgid "On-disk journal"
msgstr ""

#: ../source/reference/write-concern.txt:243
#: ../source/reference/write-concern.txt:307
msgid "``w: \"majority\"``"
msgstr ""

#: ../source/reference/write-concern.txt:244
msgid "On-disk journal *if running with journaling*"
msgstr ""

#: ../source/includes/extracts/no-journaling-rollback.rst:2
#: ../source/includes/extracts/no-journaling-rollback.rst:2
msgid "With :rsconf:`writeConcernMajorityJournalDefault` set to ``false``, MongoDB does not wait for :writeconcern:`w: \"majority\" <\"majority\">` writes to be written to the on-disk journal before acknowledging the writes. As such, :writeconcern:`majority` write operations could possibly roll back in the event of a transient loss (e.g. crash and restart) of a majority of nodes in a given replica set."
msgstr ""

#: ../source/reference/write-concern.txt:255
msgid "Replica Sets"
msgstr ""

#: ../source/reference/write-concern.txt:257
msgid "The value specified to :ref:`w <wc-w>` determines the number of replica set members that must acknowledge the write before returning success. For each eligible replica set member, the :ref:`j <wc-j>` option determines whether the member acknowledges writes after applying the write operation in memory or after writing to the on-disk journal."
msgstr ""

#: ../source/reference/write-concern.txt:264
msgid "Any data-bearing voting member of the replica set can contribute to write acknowledgment of :writeconcern:`\"majority\"` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:268
#: ../source/reference/write-concern.txt:314
msgid "The following table lists when the member can acknowledge the write based on the :ref:`j <wc-j>` value:"
msgstr ""

#: ../source/reference/write-concern.txt:276
msgid "Acknowledgment depends on the value of :rsconf:`writeConcernMajorityJournalDefault`:"
msgstr ""

#: ../source/reference/write-concern.txt:279
msgid "If ``true``, acknowledgment requires writing operation to on-disk journal (``j: true``)."
msgstr ""

#: ../source/reference/write-concern.txt:282
msgid ":rsconf:`writeConcernMajorityJournalDefault` defaults to ``true``"
msgstr ""

#: ../source/reference/write-concern.txt:285
msgid "If ``false``, acknowledgment requires writing operation in memory (``j: false``)."
msgstr ""

#: ../source/reference/write-concern.txt:288
#: ../source/reference/write-concern.txt:325
msgid "``j: true``"
msgstr ""

#: ../source/reference/write-concern.txt:289
#: ../source/reference/write-concern.txt:326
msgid "Acknowledgment requires writing operation to on-disk journal."
msgstr ""

#: ../source/reference/write-concern.txt:291
#: ../source/reference/write-concern.txt:328
msgid "``j: false``"
msgstr ""

#: ../source/reference/write-concern.txt:292
#: ../source/reference/write-concern.txt:329
msgid "Acknowledgment requires writing operation in memory."
msgstr ""

#: ../source/reference/write-concern.txt:329
msgid "``w: <number>``"
msgstr ""

#: ../source/reference/write-concern.txt:310
msgid "Any data-bearing member of the replica set can contribute to write acknowledgment of :ref:`w: \\<number\\> <wc-w>` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:322
msgid "Acknowledgment requires writing operation in memory (``j: false``)."
msgstr ""

