# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Bulk.execute.txt:3
msgid "Bulk.execute()"
msgstr ""

#: ../source/includes/fact-bulkwrite.rst:3
msgid "Starting in version 3.2, MongoDB also provides the :method:`db.collection.bulkWrite()` method for performing bulk write operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:16
#: ../source/includes/apiargs/method-Bulk.execute-param.rst:11
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:22
msgid "Executes the list of operations built by the :method:`Bulk()` operations builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:25
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:13
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:15
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:17
#: ../source/includes/apiargs/method-Bulk.execute-param.rst:35
msgid "Optional. :doc:`Write concern </reference/write-concern>` document for the bulk operation as a whole. Omit to use default. For a standalone :binary:`~bin.mongod` server, the write concern defaults to ``{ w: 1 }``. With a replica set, the default write concern is ``{ w: 1 }`` unless modified as part of the :ref:`replica set configuration <repl-set-modify-default-write-concern>`."
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:24
#: ../source/includes/apiargs/method-Bulk.execute-param.rst:42
msgid "See :ref:`bulk-execute-ex-write-concern` for an example."
msgstr ""

#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
msgid "Do not explicitly set the write concern for the operation if run in a transaction. To use write concern with transactions, see :ref:`transaction-options`."
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:0
msgid "param document writeConcern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:0
msgid "Returns"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:29
msgid "A :method:`BulkWriteResult` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
msgid "After execution, you cannot re-execute the :method:`Bulk()` object without reinitializing. See :method:`db.collection.initializeUnorderedBulkOp()` and :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:40
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:43
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups the operations by the :data:`operation type <batchType>` and contiguity; i.e. *contiguous* operations of the same type are grouped together. For example, if an ordered list has two insert operations followed by an update operation followed by another insert operation, MongoDB groups the operations into three separate groups: first group contains the two insert operations, second group contains the update operation, and the third group contains the last insert operation. This behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
#: ../source/includes/fact-bulk-operation-batches.rst:1
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
#: ../source/includes/fact-bulk-operation-batches.rst:7
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
#: ../source/includes/fact-bulk-operation-batches.rst:10
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid "Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations on a sharded collection will generally be slower than executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:52
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
msgid "When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups the operations. With an unordered bulk operation, the operations in the list may be reordered to increase performance. As such, applications should not depend on the ordering when performing :method:`unordered <db.collection.initializeUnorderedBulkOp()>` bulk operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:59
msgid "Transactions"
msgstr ""

#: ../source/includes/extracts/transactions-supported-operation.rst:2
msgid "|operation| supports :doc:`multi-document transactions </core/transactions>`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:63
msgid "For :method:`Bulk.find.insert()` operations, the collection must already exist."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:65
msgid "For :method:`Bulk.find.upsert()`, if the operation results in an upsert, the collection must already exist."
msgstr ""

#: ../source/includes/extracts/transactions-usage.rst:3
msgid "In most cases, multi-document transaction incurs a greater performance cost over single document writes, and the availability of multi-document transaction should not be a replacement for effective schema design. For many scenarios, the :ref:`denormalized data model (embedded documents and arrays) <data-modeling-embedding>` will continue to be optimal for your data and use cases. That is, for many scenarios, modeling your data appropriately will minimize the need for multi-document transactions."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:75
msgid "Examples"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:78
msgid "Execute Bulk Operations"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:80
msgid "The following initializes a :method:`Bulk()` operations builder on the ``items`` collection, adds a series of insert operations, and executes the operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:91
#: ../source/reference/method/Bulk.execute.txt:129
msgid "The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:106
msgid "For details on the return object, see :method:`BulkWriteResult()`. For details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:112
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:114
msgid "The following operation to a replica set specifies a :doc:`write concern </reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 milliseconds such that the method returns after the writes propagate to a majority of the voting replica set members or the method times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid "In previous versions, ``majority`` referred to the majority of all members of the replica set instead of the majority of the voting members."
msgstr ""

