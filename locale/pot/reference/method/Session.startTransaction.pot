# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Session.startTransaction.txt:3
msgid "Session.startTransaction()"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:20
msgid ":doc:`/core/transactions` are available for replica sets."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:22
msgid "Starts a :doc:`multi-document transaction </core/transactions>` associated with the session. At any given time, you can have at most one open transaction for a session."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:28
msgid "Within a transaction, you can only specify read and write (CRUD) operations on **existing** collections. For example, a multi-document transaction cannot include an insert operation that would result in the creation of a new collection."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:33
msgid "The :method:`Session.startTransaction()` method can take a document following options:"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:44
msgid "Option"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:45
msgid "Description"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:47
msgid "``readConcern``"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:49
msgid "*Optional.* A document that specifies the :ref:`read concern <read-concern>` for all operations in the transaction, overriding operation-specific read concern."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:53
msgid "You can specify one of the following read concern levels:"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:55
msgid ":readconcern:`\"snapshot\"`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:57
msgid ":readconcern:`\"local\"`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:59
msgid ":readconcern:`\"majority\"`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:61
msgid "For :readconcern:`\"local\"` and :readconcern:`\"majority\"` read concern, MongoDB may sometimes substitute a stronger read concern."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:65
msgid "``writeConcern``"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:67
msgid "*Optional*. A document that specifies the :ref:`write concern <write-concern>` for the transaction. This write concern applies to the transaction commit and abort operations."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:71
msgid "The operations within the transaction use :writeconcern:`\"w: 1\" <\\<number\\>>`, overriding operation-specific write concern."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:74
msgid "If you commit using :writeconcern:`\"w: 1\" <\\<number\\>>` write concern, your transaction can be rolled back during the :doc:`failover process </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:78
msgid "For MongoDB Drivers, transactions use the client-level write concern as the default."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:82
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:85
msgid "Operations Supported within a Transaction"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:89
msgid "If running with :doc:`access control </core/authorization>`, you must have privileges for the :ref:`operations in the transaction <transactions-operations>`."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:93
msgid "For :doc:`multi-document transactions </core/transactions>`:"
msgstr ""

#: ../source/includes/extracts/transactions-operations-crud.rst:2
msgid "You can specify read/write (CRUD) operations on **existing** collections. The collections can be in different databases. For a list of CRUD operations, see :ref:`transactions-operations-crud`."
msgstr ""

#: ../source/includes/extracts/transactions-operations-crud.rst:6
msgid "You cannot read/write to collections in the ``config``, ``admin``, or ``local`` databases."
msgstr ""

#: ../source/includes/extracts/transactions-operations-crud.rst:9
msgid "You cannot write to ``system.*`` collections."
msgstr ""

#: ../source/includes/extracts/transactions-operations-crud.rst:11
msgid "You cannot return the supported operation's query plan (i.e. ``explain``)."
msgstr ""

#: ../source/includes/extracts/transactions-operations-getMore.rst:2
msgid "For cursors created outside of transactions, you cannot call :dbcommand:`getMore` inside a transaction."
msgstr ""

#: ../source/includes/extracts/transactions-operations-getMore.rst:5
msgid "For cursors created in a transaction, you cannot call :dbcommand:`getMore` outside the transaction."
msgstr ""

#: ../source/includes/table-transactions-operations.rst:5
msgid "Method"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:6
msgid "Command"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:7
msgid "Note"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:9
msgid ":method:`db.collection.aggregate()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:10
msgid ":dbcommand:`aggregate`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:11
msgid "Excluding the following stages:"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:13
msgid ":pipeline:`$collStats`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:14
msgid ":pipeline:`$currentOp`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:15
msgid ":pipeline:`$indexStats`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:16
msgid ":pipeline:`$listLocalSessions`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:17
msgid ":pipeline:`$listSessions`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:18
msgid ":pipeline:`$out`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:20
msgid ":method:`db.collection.countDocuments()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:23
msgid "Excluding the following query operator expressions:"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:25
msgid ":query:`$where`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:26
msgid ":query:`$near`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:27
msgid ":query:`$nearSphere`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:29
msgid "The method uses the :pipeline:`$match` aggregation stage for the query and :pipeline:`$group` aggregation stage with a :group:`$sum` expression to perform the count."
msgstr ""

#: ../source/includes/table-transactions-operations.rst:33
msgid ":method:`db.collection.distinct()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:34
msgid ":dbcommand:`distinct`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:37
msgid ":method:`db.collection.find()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:38
msgid ":dbcommand:`find`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:42
msgid ":dbcommand:`geoSearch`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.deleteMany()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.deleteOne()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.remove()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:49
msgid ":dbcommand:`delete`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.findOneAndDelete()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.findOneAndReplace()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.findOneAndUpdate()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:56
msgid ":dbcommand:`findAndModify`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:57
#: ../source/includes/table-transactions-operations.rst:78
#: ../source/reference/method/Session.startTransaction.txt:0
msgid "For ``upsert``, only when run against an existing collection."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.insertMany()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.insertOne()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.insert()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:64
msgid ":dbcommand:`insert`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:66
msgid "Only when run against an existing collection."
msgstr ""

#: ../source/includes/table-transactions-operations.rst:68
msgid ":method:`db.collection.save()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:70
msgid "If an insert, only when run against an existing collection."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.updateOne()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.updateMany()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.replaceOne()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.update()`"
msgstr ""

#: ../source/includes/table-transactions-operations.rst:77
msgid ":dbcommand:`update`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid ":method:`db.collection.bulkWrite()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid "Various :doc:`/reference/method/js-bulk`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:0
msgid "For insert operations, only when run against an existing collection."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:99
msgid "Operations that affect the database catalog, such as creating or dropping a collection or an index, are not allowed in multi-document transactions. For example, a multi-document transaction cannot include an insert operation that would result in the creation of a new collection. See :ref:`transactions-ops-restricted`."
msgstr ""

#: ../source/includes/extracts/transactions-operations-restrictions-info.rst:2
msgid "Informational commands, such as :dbcommand:`isMaster`, :dbcommand:`buildInfo`, :dbcommand:`connectionStatus` (and their helper methods) are allowed in transactions; however, they cannot be the first operation in the transaction."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:109
msgid "Read Preference"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:111
msgid ":doc:`Transactions </core/transactions>` support read preference :readmode:`primary`."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:115
msgid "Atomicity"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:117
msgid "While the transaction is open, no data changes made by operations in the transaction is visible outside the transaction:"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:120
msgid "When a transaction commits, all data changes are saved and visible outside the transaction and the transaction ends."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:123
msgid "When a transaction aborts, all data changes made by the writes in the transaction are discarded without ever becoming visible and the transaction ends."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:129
msgid "Example"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:131
msgid "Consider a scenario where as changes are made to an employee's record in the ``hr`` database, you want to ensure that the ``events`` collection in the ``reporting`` database are in sync with the ``hr`` changes. That is, you want to ensure that these writes are done as a single transaction, such that either both operations succeed or fail."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:137
msgid "The ``employees`` collection in the ``hr`` database has the following documents:"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:146
msgid "The ``events`` collection in the ``reporting`` database has the following documents:"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:155
msgid "The following example opens a transaction, updates an employee's status to ``Inactive`` in the ``employees`` status and inserts a corresponding document to the ``events`` collection, and commits the two operations as a single transaction."
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:235
msgid ":method:`Session.abortTransaction()`"
msgstr ""

#: ../source/reference/method/Session.startTransaction.txt:237
msgid ":method:`Session.commitTransaction()`"
msgstr ""

