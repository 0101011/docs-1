# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Session.commitTransaction.txt:3
msgid "Session.commitTransaction()"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:20
msgid ":doc:`/core/transactions` are available for replica sets."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:22
msgid "Saves the changes made by the operations in the :doc:`multi-document transaction </core/transactions>` and ends the transaction. Until the commit, none of the data changes made from within the transaction are visible outside the transaction."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:28
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:31
msgid "Write Concern"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:33
msgid "When commiting the transaction, the session uses the write concern specified at the transaction start. See :method:`Session.startTransaction()`."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:37
msgid "If you commit using :writeconcern:`\"w: 1\" <\\<number\\>>` write concern, your transaction can be :doc:`rolled back during the failover process </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:42
msgid "Atomicity"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:44
msgid "When a transaction commits, all data changes made in the transaction are saved and visible outside the transaction."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:48
msgid "Retryable"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:50
msgid "If the commit operation encounters an error, MongoDB drivers retry the commit operation a single time regardless of whether :urioption:`retryWrites` is set to ``true``. For more information, see :ref:`transactions-retry`."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:56
msgid "Example"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:58
msgid "Consider a scenario where as changes are made to an employee's record in the ``hr`` database, you want to ensure that the ``events`` collection in the ``reporting`` database are in sync with the ``hr`` changes. That is, you want to ensure that these writes are done as a single transaction, such that either both operations succeed or fail."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:64
msgid "The ``employees`` collection in the ``hr`` database has the following documents:"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:74
msgid "The ``events`` collection in the ``reporting`` database has the following documents:"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:83
msgid "The following example opens a transaction, updates an employee's status to ``Inactive`` in the ``employees`` status and inserts a corresponding document to the ``events`` collection, and commits the two operations as a single transaction."
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:163
msgid ":method:`Session.abortTransaction()`"
msgstr ""

#: ../source/reference/method/Session.commitTransaction.txt:165
msgid ":method:`Session.commitTransaction()`"
msgstr ""

