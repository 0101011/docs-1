# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.updateOne.txt:3
msgid "db.collection.updateOne()"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:20
msgid "Updates a single document within the collection based on the filter."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:22
msgid "The :method:`~db.collection.updateOne()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:39
msgid "The :method:`~db.collection.updateOne()` method takes the following parameters:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:13
msgid "``filter``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:15
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:28
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:50
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:61
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:17
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:91
msgid "The selection criteria for the update. The same :ref:`query selectors <query-selectors>` as in the :method:`find() <db.collection.find()>` method are available."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:21
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:95
msgid "Specify an empty document ``{ }`` to update the first document returned in the collection."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:26
msgid "``update``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:30
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:102
msgid "The modifications to apply."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:32
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:104
msgid "Use :doc:`/reference/operator/update/` such as :update:`$set`, :update:`$unset`, or :update:`$rename`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:35
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:107
msgid "Using the :ref:`update() <update-parameter>` pattern of ``field: value`` for the ``update`` parameter throws an error."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:40
msgid "``upsert``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:42
msgid "boolean"
msgstr ""

#: ../source/includes/extracts/updateOne-behavior-method.rst:1
#: ../source/includes/extracts/updateOne-behavior-method.rst:1
msgid "Optional. When ``true``, :method:`~db.collection.updateOne()` either:"
msgstr ""

#: ../source/includes/extracts/updateOne-behavior-method.rst:3
#: ../source/includes/extracts/updateOne-behavior-method.rst:3
msgid "Creates a new document if no documents match the ``filter``. For more details see :ref:`upsert behavior <upsert-behavior>`."
msgstr ""

#: ../source/includes/extracts/updateOne-behavior-method.rst:6
#: ../source/includes/extracts/updateOne-behavior-method.rst:6
msgid "Updates a single document that matches the ``filter``."
msgstr ""

#: ../source/includes/extracts/updateOne-behavior-method.rst:8
#: ../source/includes/extracts/updateOne-behavior-method.rst:8
msgid "To avoid multiple upserts, ensure that the ``filter`` fields are :ref:`uniquely indexed <index-type-unique>`."
msgstr ""

#: ../source/includes/extracts/updateOne-behavior-method.rst:11
#: ../source/includes/extracts/updateOne-behavior-method.rst:11
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:48
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:52
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:120
msgid "Optional. A document expressing the :doc:`write concern </reference/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
msgid "Do not explicitly set the write concern for the operation if run in a transaction. To use write concern with transactions, see :ref:`transaction-options`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:59
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:63
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:129
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
#: ../source/includes/extracts/collation-option-specification.rst:17
msgid "When specifying collation, the ``locale`` field is mandatory; all other collation fields are optional. For descriptions of the fields, see :ref:`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
#: ../source/includes/extracts/collation-option.rst:7
msgid "If the collation is unspecified but the collection has a default collation (see :method:`db.createCollection()`), the operation uses the collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
#: ../source/includes/extracts/collation-unspecified.rst:1
msgid "If no collation is specified for the collection or for the operations, MongoDB uses the simple binary comparison used in prior versions for string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid "You cannot specify multiple collations for an operation. For example, you cannot specify different collations per field, or if performing a find with a sort, you cannot use one collation for the find and another for the sort."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:69
msgid "``arrayFilters``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:71
msgid "array"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:73
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:137
msgid "Optional. An array of filter documents that determines which array elements to modify for an update operation on an array field."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:2
#: ../source/includes/extracts/arrayFilters-details.rst:2
msgid "In the update document, use the :update:`$[\\<identifier\\>]` filtered positional operator to define an identifier, which you then reference in the array filter documents. You cannot have an array filter document for an identifier if the identifier is not included in the update document."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:9
#: ../source/includes/extracts/arrayFilters-details.rst:9
msgid "The ``<identifier>`` must begin with a lowercase letter and contain only alphanumeric characters."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:12
#: ../source/includes/extracts/arrayFilters-details.rst:12
msgid "You can include the same identifier multiple times in the update document; however, for each distinct identifier (``$[identifier]``) in the update document, you must specify **exactly one** corresponding array filter document. That is, you cannot specify multiple array filter documents for the same identifier. For example, if the update statement includes the identifier ``x`` (possibly multiple times), you cannot specify the following for ``arrayFilters`` that includes 2 separate filter documents for ``x``:"
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:28
#: ../source/includes/extracts/arrayFilters-details.rst:28
msgid "However, you can specify compound conditions on the same identifier in a single filter document, such as in the following examples:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:79
#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:143
msgid "For examples, see :ref:`updateOne-arrayFilters`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param document filter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param document update"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param boolean upsert"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param document collation"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.updateOne-param.rst:0
msgid "param array arrayFilters"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:0
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:44
msgid "A document containing:  - A boolean ``acknowledged`` as ``true`` if the operation ran with   :term:`write concern` or ``false`` if write concern was disabled  - ``matchedCount`` containing the number of matched documents  - ``modifiedCount`` containing the number of modified documents  - ``upsertedId`` containing the ``_id`` for the upserted document"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:46
msgid "A document containing:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:48
msgid "A boolean ``acknowledged`` as ``true`` if the operation ran with :term:`write concern` or ``false`` if write concern was disabled"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:51
msgid "``matchedCount`` containing the number of matched documents"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:53
msgid "``modifiedCount`` containing the number of modified documents"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:55
msgid "``upsertedId`` containing the ``_id`` for the upserted document"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:58
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:60
msgid ":method:`~db.collection.updateOne()` updates the first matching document in the collection that matches the ``filter``, using the ``update`` instructions to apply modifications."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:64
msgid "If ``upsert: true`` and no documents match the ``filter``, :method:`~db.collection.updateOne()` creates a new document based on the ``filter`` criteria and ``update`` modifications. See :ref:`updateOne-example-update-with-upsert`."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:72
msgid "Capped Collection"
msgstr ""

#: ../source/includes/extracts/capped-collection-immutable-document-size-update.rst:1
msgid "If an update operation changes the document size, the operation will fail."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:82
msgid "Explainability"
msgstr ""

#: ../source/includes/fact-bulkwrite-explainable.rst:1
msgid "|write-method| is not compatible with :method:`db.collection.explain()`."
msgstr ""

#: ../source/includes/fact-bulkwrite-explainable.rst:6
msgid "Use |old-write-method| instead."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:90
msgid "Transactions"
msgstr ""

#: ../source/includes/extracts/transactions-supported-operation.rst:2
msgid "|operation| supports :doc:`multi-document transactions </core/transactions>`."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:94
msgid "If the operation results in an upsert, the collection must already exist."
msgstr ""

#: ../source/includes/extracts/transactions-usage.rst:3
msgid "In most cases, multi-document transaction incurs a greater performance cost over single document writes, and the availability of multi-document transaction should not be a replacement for effective schema design. For many scenarios, the :ref:`denormalized data model (embedded documents and arrays) <data-modeling-embedding>` will continue to be optimal for your data and use cases. That is, for many scenarios, modeling your data appropriately will minimize the need for multi-document transactions."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:105
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:110
msgid "Update"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:112
msgid "The ``restaurant`` collection contains the  following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:120
msgid "The following operation updates a single document where ``name: \"Central Perk Cafe\"`` with the ``violations`` field:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:134
#: ../source/reference/method/db.collection.updateOne.txt:216
msgid "The operation returns:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:140
msgid "If no matches were found, the operation instead returns:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:146
msgid "Setting ``upsert: true`` would insert the document if no match was found. See :ref:`updateOne-example-update-with-upsert`"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:152
msgid "Update with Upsert"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:154
msgid "The ``restaurant`` collection contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:162
msgid "The following operation attempts to update the document with ``name : \"Pizza Rat's Pizzaria\"``, while ``upsert: true`` :"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:177
msgid "Since ``upsert:true`` the document is ``inserted`` based on the ``filter`` and ``update`` criteria. The operation returns:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:189
#: ../source/reference/method/db.collection.updateOne.txt:227
msgid "The collection now contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:198
msgid "The ``name`` field was filled in using the ``filter`` criteria, while the ``update`` operators were used to create the rest of the document."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:201
msgid "The following operation updates the first document with ``violations`` that are greater than ``10``:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:237
msgid "Since no documents matched the filter, and ``upsert`` was ``true``, :method:`~db.collection.updateOne` inserted the document with a generated ``_id`` and the ``update`` criteria only."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:244
msgid "Update with Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:246
msgid "Given a three member replica set, the following operation specifies a ``w`` of ``majority``, ``wtimeout`` of ``100``:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:261
msgid "If the primary and at least one secondary acknowledge each write operation within 100 milliseconds, it returns:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:268
msgid "If the acknowledgement takes longer than the ``wtimeout`` limit, the following exception is thrown:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:282
msgid "Specify Collation"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:286
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:294
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:308
msgid "Specify ``arrayFilters`` for an Array Update Operations"
msgstr ""

#: ../source/includes/extracts/arrayFilters-blurb.rst:4
msgid "Starting in MongoDB 3.6, when updating an array field, you can specify ``arrayFilters`` that determine which array elements to update."
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:313
msgid "Update Elements Match ``arrayFilters`` Criteria"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:315
msgid "Create a collection ``students`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:327
msgid "To modify all elements that are greater than or equal to ``100`` in the ``grades`` array, use the filtered positional operator :update:`$[\\<identifier\\>]` with the ``arrayFilters`` option in the :method:`db.collection.updateOne` method:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:342
msgid "The operation updates the ``grades`` field of a single document, and after the operation, the collection has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:353
msgid "Update Specific Elements of an Array of Documents"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:355
msgid "Create a collection ``students2`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:380
msgid "To modify the value of the ``mean`` field for all elements in the ``grades`` array where the grade is greater than or equal to ``85``, use the filtered positional operator :update:`$[\\<identifier\\>]` with the ``arrayFilters`` in the :method:`db.collection.updateOne` method::"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:395
msgid "The operation updates the array of a single document, and after the operation, the collection has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.updateOne.txt:418
msgid "To update multiple documents, see :method:`db.collection.updateMany()`."
msgstr ""

