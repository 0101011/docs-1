# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/sh.updateZoneKeyRange.txt:3
msgid "sh.updateZoneKeyRange()"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:20
msgid "Associates a range of shard key values with a :term:`zone`."
msgstr ""

#: ../source/includes/extracts/zoned-sharding-updateZoneKeyRange-change.rst:2
#: ../source/includes/extracts/zoned-sharding-updateZoneKeyRange-change.rst:2
#: ../source/includes/extracts/zoned-sharding-updateZoneKeyRange-change.rst:2
msgid "Starting in MongoDB 4.0.2, you can run :dbcommand:`updateZoneKeyRange` database command and its helpers :method:`sh.updateZoneKeyRange()` and :method:`sh.addTagRange()` on an unsharded collection or a non-existing collection."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:24
msgid ":method:`sh.updateZoneKeyRange()` takes the following arguments:"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:13
msgid "``namespace``"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:15
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:47
msgid "string"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:17
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:59
msgid "The :term:`namespace` of the sharded collection associate with the ``zone``."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:19
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:61
msgid "The collection must be sharded for the operation to succeed."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:23
msgid "``minimum``"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:25
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:36
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:27
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:67
msgid "The inclusive lower bound of the range of :term:`shard key` values."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:29
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:40
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:69
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:78
msgid "Specify each field of the shard key in the form of ``<fieldname> : <value>``. The value must be of the same BSON type or types as the shard key."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:34
msgid "``maximum``"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:38
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:76
msgid "The exclusive upper bound of the range of :term:`shard key` values."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:45
msgid "``zone``"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:49
#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:85
msgid "The name of the zone to associate with the range of shard key values bounded by ``minimum`` and ``maximum``."
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:0
msgid "param string namespace"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:0
msgid "param document minimum"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:0
msgid "param document maximum"
msgstr ""

#: ../source/includes/apiargs/method-sh.updateZoneKeyRange-param.rst:0
msgid "param string zone"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:28
msgid "Only issue :method:`sh.updateZoneKeyRange()` when connected to a :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:32
msgid "Behavior"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:34
msgid "You cannot create a range of shard key values whose lower and upper boundaries overlap with an existing range for the sharded collection. For example, given an existing range of ``1`` to ``10``, you cannot create a new range of ``5`` to ``20``, as the new range would overlap with the existing range."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:39
msgid "A zone can have multiple ranges of data associated with it, but a range can at most be associated with a single zone."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:42
msgid "See the :ref:`zone <zone-sharding>` manual page for more information on zones in sharded clusters."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:46
msgid "Initial Chunk Distribution"
msgstr ""

#: ../source/includes/extracts/zoned-sharding-pre-define-zone.rst:2
#: ../source/includes/extracts/zoned-sharding-pre-define-zone-without-example-link.rst:2
msgid "By defining the zones and the zone ranges *before* sharding an empty or a non-existing collection, the shard collection operation creates chunks for the defined zone ranges as well as any additional chunks to cover the entire range of the shard key values and performs an initial chunk distribution based on the zone ranges. This initial creation and distribution of chunks allows for faster setup of zoned sharding. After the initial distribution, the balancer manages the chunk distribution going forward."
msgstr ""

#: ../source/includes/extracts/zoned-sharding-pre-define-zone.rst:11
msgid "See :ref:`pre-define-zone-range-example` for an example."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:57
msgid "Balancer"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:59
msgid "After associating a range to a zone, the :ref:`balancer <sharding-balancing-internals>` must first run in order to migrate any chunks whose ranges are covered by the zone to shards inside of that zone. Until balancing completes, some chunks may reside on the wrong shard given the configured zones for the sharded cluster. See :ref:`zone-sharding-balancer` for more information."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:66
msgid "See the :ref:`sharded cluster balancer <sharding-balancing>` manual page for more information on how migrations work in a sharded cluster."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:70
msgid "Bounds"
msgstr ""

#: ../source/includes/fact-shard-ranges-inclusive-exclusive.rst:1
msgid "Zone ranges are always inclusive of the lower boundary and exclusive of the upper boundary."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:75
msgid "Dropped Collections"
msgstr ""

#: ../source/includes/extracts/zoned-sharding-drop-collection-change.rst:2
msgid "Starting in MongoDB 4.0.2, dropping a collection deletes its associated zone/tag ranges."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:79
msgid "In earlier versions, MongoDB does not remove the tag associations for a dropped collection, and if you later create a new collection with the same name, the old tag associations will apply to the new collection."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:84
msgid "Security"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:86
msgid "For sharded clusters running with :ref:`authentication <authentication>`, you must authenticate as a user whose privileges include:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:89
msgid ":authaction:`find` on the ``config.shards`` collection or the ``config`` database"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:92
msgid ":authaction:`find` on the ``config.tags`` collection or the ``config`` database"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:95
msgid ":authaction:`update` on the ``config.tags`` collection or the ``config`` database"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:98
msgid "The :authrole:`clusterAdmin` or :authrole:`clusterManager` built-in roles have the appropriate permissions for issuing :method:`sh.updateZoneKeyRange()`. See the documentation page for :ref:`Role-Based Access Control <authorization>` for more information."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:104
msgid "Example"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:106
msgid "Given a sharded collection ``exampledb.collection`` with a shard key of ``{ a : 1 }``, the following operation creates a range with a lower bound of ``1`` and an upper bound of ``10`` on the ``alpha`` zone:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:119
msgid "The following operation removes the previously created range by passing ``null`` to the ``zone`` field."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:131
msgid "The ``min`` and ``max`` must match exactly the bounds of the target range. The following operation attempts to remove the previously created range, but specifies ``{ a : 0 }`` as the ``min`` bound:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:144
msgid "While the range of ``{ a : 0 }`` and ``{ a : 10 }`` encompasses the existing range, it is not an exact match and therefore :dbcommand:`updateZoneKeyRange` does not remove anything."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:149
msgid "Compound Shard Key"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:151
msgid "Given a sharded collection ``exampledb.collection`` with a shard key of ``{ a : 1, b : 1 }``, the following operation creates a range covering the lower bound of ``{ a: 1, b : 1 }`` and an upper bound of ``{ a : 10, b : 10}`` and associates it with the ``alpha`` zone:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:165
msgid "If you wanted to create a range on values of ``b`` only, you must specify the entire range of ``a`` when creating ranges. For example, the following operations create two ranges on ``b`` and associates them to the ``beta`` zone."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:172
msgid "The previously defined range conflicts with the ranges defined in this example. Issue the :method:`sh.removeRangeFromZone()` operation to remove an existing conflicting range."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:192
msgid ":bsontype:`MinKey` always compares as lower than every other possible value, while :bsontype:`MaxKey` always compares as higher than every other possible value. Using these special values for the lower and upper bounds of the range captures the entire possible value space of ``a``."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:200
msgid "Pre-Define Zones and Zone Ranges for an Empty or Non-Existing Collection"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:206
msgid "First, use :method:`sh.addShardToZone()` to create the zones:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:213
msgid "Then, use :method:`sh.updateZoneKeyRange()` to create the ranges:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:231
msgid "If you haven't enabled sharding for ``exampledb``, use :method:`sh.enableSharding()` to enable sharding for the database:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:238
msgid "Finally, use :method:`sh.shardCollection()` to shard the collection ``contacts``:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:240
msgid "If the collection does not exist, the sharding operation creates the collection."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:246
msgid "To see the created chunks and distribution, run the :method:`sh.status()` operation:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:253
msgid "The method returns:"
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:296
msgid "For the collection, sharding operation created 5 chunks (two chunks that correspond to the zone ranges and the other three to cover all other values) across shardA and shardB."
msgstr ""

#: ../source/reference/method/sh.updateZoneKeyRange.txt:300
msgid ":method:`sh.addShardToZone()`, :method:`sh.removeRangeFromZone()`"
msgstr ""

