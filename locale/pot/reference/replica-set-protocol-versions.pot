# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/replica-set-protocol-versions.txt:3
msgid "Replica Set Protocol Version"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:8
msgid "Starting in version 4.0, MongoDB only supports replica set protocol version 1 (:rsconf:`pv1 <protocolVersion>`). ``pv1`` is the default for all new replica sets created with MongoDB 3.2 or later."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:13
msgid "Preservation of Writes"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:16
msgid "``w:1`` Writes"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:18
msgid "With :rsconf:`pv1 <protocolVersion>`, you can use :rsconf:`~settings.catchUpTimeoutMillis` to prioritize between faster failovers and preservation of :writeconcern:`w:1 <\\<number\\>>` writes."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:23
msgid "``w: \"majority\"`` Writes"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:25
msgid "``pv1`` guarantees the preservation of confirmed :writeconcern:`w: \"majority\" <\"majority\">` writes."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:29
msgid "Availability"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:31
msgid "``pv1`` is available in MongoDB version 3.2 or later and is the default for all new replica sets created with version 3.2 or later."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:35
msgid "Arbiters"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs.rst:2
msgid "For the following MongoDB versions, ``pv1`` increases the likelihood of :writeconcern:`w:1 <\\<number\\>>` rollbacks compared to ``pv0`` (no longer supported in MongoDB 4.0+) for replica sets with arbiters:"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs.rst:6
#: ../source/includes/extracts/priorities-and-pvs.rst:7
msgid "MongoDB 3.4.1"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs.rst:8
#: ../source/includes/extracts/priorities-and-pvs.rst:9
msgid "MongoDB 3.4.0"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs.rst:10
#: ../source/includes/extracts/priorities-and-pvs.rst:11
msgid "MongoDB 3.2.11 or earlier"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs.rst:12
msgid "For the other versions of MongoDB that support ``pv1``, ``pv1`` does not increase the likelihood of :writeconcern:`w:1 <\\<number\\>>` rollbacks for replica sets with arbiters."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:40
msgid "Priorities"
msgstr ""

#: ../source/includes/extracts/priorities-and-pvs.rst:2
msgid "For the following MongoDB versions, ``pv1`` increases the likelihood of :writeconcern:`w:1 <\\<number\\>>` rollbacks compared to ``pv0`` (no longer supported in MongoDB 4.0+) for replica sets with different :rsconf:`members[n].priority` settings:"
msgstr ""

#: ../source/includes/extracts/priorities-and-pvs.rst:13
msgid "For the other versions of MongoDB that support ``pv1``, ``pv1`` does not increase the likelihood of :writeconcern:`w:1 <\\<number\\>>` rollbacks for replica sets with different :rsconf:`members[n].priority` settings."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:45
msgid "Vetoes"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:47
msgid "``pv1`` does not use vetoes. Individual members can vote for or against a candidate in a particular election, but cannot individually veto (abort) an election unilaterally."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:54
msgid "Detection of Simultaneous Primaries"
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid "In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may *transiently* believe that they are the primary, but at most, one of them will be able to complete writes with :writeconcern:`{ w: \"majority\" } <\"majority\">` write concern. The node that can complete :writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current primary, and the other node is a former primary that has not yet recognized its demotion, typically due to a :term:`network partition`. When this occurs, clients that connect to the former primary may observe stale data despite having requested read preference :readmode:`primary`, and new writes to the former primary will eventually roll back."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:58
msgid "``pv1`` uses the concept of :term:`term`. This allows for a faster detection of simultaneous primaries and for multiple successful elections in a short period of time."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:63
msgid "Back to Back Elections"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:65
msgid "``pv1`` makes a \"best-effort\" attempt to have the secondary with the highest :rsconf:`~members[n].priority` available call an election. This could lead to back-to-back elections as eligible members with higher priority can call an election."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:70
msgid "However, in MongoDB 3.6+ (as well as MongoDB 3.4.2+ and 3.2.12+), for ``pv1``:"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:72
msgid "Priority elections have been limited to occur only if the higher priority node is within 10 seconds of the current primary."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:75
msgid "Arbiters will vote no in elections if they detect a healthy primary of equal or greater priority to the candidate."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:79
msgid "Double Voting"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:81
msgid "``pv1`` prevents double voting in one member's call for election. This is achieved through its use of :term:`terms <term>`."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:87
msgid "Modify Replica Set Protocol Version"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:89
msgid "Starting in version 4.0, MongoDB only supports replica set protocol version 1 (:rsconf:`pv1 <protocolVersion>`)."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:92
msgid "However, MongoDB 3.2 through MongoDB 3.6 support replica set protocol version ``1`` and protocol version ``0``."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:95
msgid "Before changing the protocol version for MongoDB 3.2 through MongoDB 3.6, ensure that at least one oplog entry (generated from the current protocol version) has replicated from the primary to all secondaries. To check, on each secondary, check the :data:`optimes.lastCommittedOpTime.t <replSetGetStatus.optimes.lastCommittedOpTime>` field returned from :method:`rs.status()`. For example, connect a :binary:`~bin.mongo` shell to each secondary and run:"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:107
msgid "If the current replica set protocol version is ``0``, the ``t`` is equal to ``-1``."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:110
msgid "If the current replica set protocol version is ``1``, the ``t`` is greater than ``-1``."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:113
msgid "Once you have verified that at least one oplog entry (using the current protocol version) has replicated to all the secondaries, you can change the protocol version."
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:117
msgid "To change the replica set protocol version, reconfigure (:method:`rs.reconfig`) the replica set with the new :rsconf:`protocolVersion`. For example, to upgrade to ``pv1``, connect a :binary:`~bin.mongo` shell to the current primary and perform the following sequence of operations:"
msgstr ""

#: ../source/reference/replica-set-protocol-versions.txt:129
msgid "You can use :rsconf:`~settings.catchUpTimeoutMillis` to prioritize between faster failovers and preservation of :writeconcern:`w:1 <\\<number\\>>` writes."
msgstr ""

