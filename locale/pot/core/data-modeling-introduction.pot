# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-modeling-introduction.txt:3
msgid "Data Modeling Introduction"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:13
msgid "The key challenge in data modeling is balancing the needs of the application, the performance characteristics of the database engine, and the data retrieval patterns. When designing data models, always consider the application usage of the data (i.e. queries, updates, and processing of the data) as well as the inherent structure of the data itself."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:21
msgid "Flexible Schema"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:23
msgid "Unlike SQL databases, where you must determine and declare a table's schema before inserting data, MongoDB's :term:`collections <collection>`, by default, does not require its :doc:`documents </core/document>` to have the same schema. That is:"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:28
msgid "The documents in a single collection do not need to have the same set of fields and the data type for a field can differ across documents within a collection."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:32
msgid "To change the structure of the documents in a collection, such as add new fields, remove existing fields, or change the field values to a new type, update the documents to the new structure."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:36
msgid "This flexibility facilitates the mapping of documents to an entity or an object. Each document can match the data fields of the represented entity, even if the document has substantial variation from other documents in the collection."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:41
msgid "In practice, however, the documents in a collection share a similar structure, and you can enforce :doc:`document validation rules </core/schema-validation>` for a collection during update and insert operations. See :doc:`/core/schema-validation` for details."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:47
msgid "Document Structure"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:49
msgid "The key decision in designing data models for MongoDB applications revolves around the structure of documents and how the application represents relationships between data. MongoDB allows related data to be embedded within a single document."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:55
msgid "Embedded Data"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:57
msgid "Embedded documents capture relationships between data by storing related data in a single document structure. MongoDB documents make it possible to embed document structures in a field or array within a document. These *denormalized* data models allow applications to retrieve and manipulate related data in a single database operation."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:66
msgid "For many use cases in MongoDB, the denormalized data model is optimal."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:68
msgid "See :ref:`data-modeling-embedding` for the strengths and weaknesses of embedding documents."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:72
msgid "References"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:74
msgid "References store the relationships between data by including links or *references* from one document to another. Applications can resolve these :doc:`references </reference/database-references>` to access the related data. Broadly, these are *normalized* data models."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:81
msgid "See :ref:`data-modeling-referencing` for the strengths and weaknesses of using references."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:85
msgid "Atomicity of Write Operations"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:88
msgid "Single Document Atomicity"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:90
msgid "In MongoDB, a write operation is atomic on the level of a single document, even if the operation modifies multiple embedded documents *within* a single document."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:94
msgid "A denormalized data model with embedded data combines all related data in a single document instead of normalizing across multiple documents and collections. This data model facilitates atomic operations."
msgstr ""

#: ../source/includes/extracts/concurrent-operations-multi-document-writes.rst:2
msgid "When a single write operation (e.g. :method:`db.collection.updateMany()`) modifies multiple documents, the modification of each document is atomic, but the operation as a whole is not atomic."
msgstr ""

#: ../source/includes/extracts/concurrent-operations-multi-document-writes.rst:7
msgid "When performing multi-document write operations, whether through a single write operation or multiple write operations, other operations may interleave."
msgstr ""

#: ../source/includes/extracts/transactions-intro-blurb.rst:1
#: ../source/includes/extracts/transactions-intro-blurb.rst:1
msgid "Starting in version 4.0, for situations that require atomicity for updates to multiple documents or consistency between reads to multiple documents, MongoDB provides :doc:`multi-document transactions </core/transactions>` for replica sets."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:101
msgid "Multi-Document Transactions"
msgstr ""

#: ../source/includes/extracts/transactions-usage.rst:3
msgid "In most cases, multi-document transaction incurs a greater performance cost over single document writes, and the availability of multi-document transaction should not be a replacement for effective schema design. For many scenarios, the :ref:`denormalized data model (embedded documents and arrays) <data-modeling-embedding>` will continue to be optimal for your data and use cases. That is, for many scenarios, modeling your data appropriately will minimize the need for multi-document transactions."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:105
msgid ":ref:`Atomicity Considerations <data-model-atomicity>`"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:108
msgid "Data Use and Performance"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:110
msgid "When designing a data model, consider how applications will use your database. For instance, if your application only uses recently inserted documents, consider using :doc:`/core/capped-collections`. Or if your application needs are mainly read operations to a collection, adding indexes to support common queries can improve performance."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:116
msgid "See :doc:`/core/data-model-operations` for more information on these and other operational considerations that affect data model designs."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:120
msgid "Document Growth and MMAPv1"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:122
msgid "Some updates, such as pushing elements to an array or adding new fields, increase a :term:`document's <document>` size."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:125
msgid "For the :doc:`deprecated MMAPv1 </core/mmapv1>` storage engine, if the document size exceeds the allocated space for that document, MongoDB relocates the document on disk. When using the deprecated MMAPv1 storage engine, growth consideration can affect the decision to normalize or denormalize data. See :ref:`Document Growth Considerations <data-model-document-growth>` for more about planning for and managing document growth for MMAPv1."
msgstr ""

#: ../source/includes/extracts/additional-resources-data-modeling-introduction.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-modeling-introduction.rst:6
msgid "`Thinking in Documents Part 1 (Blog Post) <https://www.mongodb.com/blog/post/thinking-documents-part-1?jmp=docs>`_"
msgstr ""

