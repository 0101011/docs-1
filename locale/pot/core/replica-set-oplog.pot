# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:15
msgid "The :term:`oplog` (operations log) is a special :term:`capped collection` that keeps a rolling record of all operations that modify the data stored in your databases."
msgstr ""

#: ../source/core/replica-set-oplog.txt:21
msgid "Starting in MongoDB 4.0, unlike other capped collections, the oplog can grow past its configured size limit to avoid deleting the :data:`majority commit point <replSetGetStatus.optimes.lastCommittedOpTime>`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:25
msgid "MongoDB applies database operations on the :term:`primary` and then records the operations on the primary's oplog. The :term:`secondary` members then copy and apply these operations in an asynchronous process.  All replica set members contain a copy of the oplog, in the :data:`local.oplog.rs` collection, which allows them to maintain the current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:33
msgid "To facilitate replication, all replica set members send heartbeats (pings) to all other members. Any :term:`secondary` member can import oplog entries from any other member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:37
msgid "Each operation in the oplog is :term:`idempotent`. That is, oplog operations produce the same results whether applied once or multiple times to the target dataset."
msgstr ""

#: ../source/core/replica-set-oplog.txt:44
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:46
msgid "When you start a replica set member for the first time, MongoDB creates an oplog of a default size if you do not specify the oplog size. [#oplog]_"
msgstr ""

#: ../source/core/replica-set-oplog.txt:77
msgid "For Unix and Windows systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:50
msgid "The default oplog size depends on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:56
#: ../source/core/replica-set-oplog.txt:87
msgid "Storage Engine"
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
#: ../source/core/replica-set-oplog.txt:88
msgid "Default Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:58
msgid "Lower Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
msgid "Upper Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:61
#: ../source/core/replica-set-oplog.txt:90
msgid ":doc:`/core/inmemory`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
msgid "5% of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:65
msgid "50 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:67
#: ../source/core/replica-set-oplog.txt:72
#: ../source/core/replica-set-oplog.txt:77
msgid "50 GB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:69
#: ../source/core/replica-set-oplog.txt:94
msgid ":doc:`/core/wiredtiger`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
#: ../source/core/replica-set-oplog.txt:75
msgid "5% of free disk space"
msgstr ""

#: ../source/core/replica-set-oplog.txt:71
#: ../source/core/replica-set-oplog.txt:76
msgid "990 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:74
#: ../source/core/replica-set-oplog.txt:97
msgid ":doc:`/core/mmapv1`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:98
msgid "For 64-bit macOS systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:80
msgid "The default oplog size is 192 MB of either physical memory or free disk space depending on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:92
msgid "192 MB of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:95
#: ../source/core/replica-set-oplog.txt:98
msgid "192 MB of free disk space"
msgstr ""

#: ../source/core/replica-set-oplog.txt:100
msgid "In most cases, the default oplog size is sufficient. For example, if an oplog is 5% of free disk space and fills up in 24 hours of operations, then secondaries can stop copying entries from the oplog for up to 24 hours without becoming too stale to continue replicating. However, most replica sets have much lower operation volumes, and their oplogs can hold much higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:107
msgid "Before :binary:`~bin.mongod` creates an oplog, you can specify its size with the :setting:`~replication.oplogSizeMB` option. Once you have started a replica set member for the first time, use the :dbcommand:`replSetResizeOplog` administrative command to change the oplog size. :dbcommand:`replSetResizeOplog` enables you to resize the oplog dynamically without restarting the :binary:`~bin.mongod` process."
msgstr ""

#: ../source/includes/fact-oplog-size.rst:1
msgid "Starting in MongoDB 4.0, the oplog can grow past its configured size limit to avoid deleting the :data:`majority commit point <replSetGetStatus.optimes.lastCommittedOpTime>`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:119
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:121
msgid "If you can predict your replica set's workload to resemble one of the following patterns, then you might want to create an oplog that is larger than the default. Conversely, if your application predominantly performs reads with a minimal amount of write operations, a smaller oplog may be sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:127
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:130
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:132
msgid "The oplog must translate multi-updates into individual operations in order to maintain :term:`idempotency <idempotent>`. This can use a great deal of oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:138
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:140
msgid "If you delete roughly the same amount of data as you insert, the database will not grow significantly in disk use, but the size of the operation log can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:145
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:147
msgid "If a significant portion of the workload is updates that do not increase the size of the documents, the database records a large number of operations but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:152
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:154
msgid "To view oplog status, including the size and the time range of operations, issue the :method:`rs.printReplicationInfo()` method. For more information on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:159
msgid "Under various exceptional situations, updates to a :term:`secondary's <secondary>` oplog might lag behind the desired performance time.  Use :method:`db.getReplicationInfo()` from a secondary member and the :doc:`replication status </reference/method/db.getReplicationInfo>` output to assess the current state of replication and determine if there is any unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:166
msgid "See :ref:`Replication Lag <replica-set-replication-lag>` for more information."
msgstr ""

#: ../source/core/replica-set-oplog.txt:173
msgid "Slow Oplog Application"
msgstr ""

#: ../source/core/replica-set-oplog.txt:175
msgid "Starting in version 4.0.6, secondary members of a replica set now log oplog entries that take longer than the slow operation threshold to apply. These messages are :option:`logged <mongod --logpath>` for the secondaries under the :data:`REPL` component with the text ``applied op: <oplog entry> took <num>ms``."
msgstr ""

#: ../source/core/replica-set-oplog.txt:185
msgid "The slow oplog application logging on secondaries are:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:187
msgid "Not affected by the :setting:`~operationProfiling.slowOpSampleRate`; i.e. all slow oplog entries are logged by the secondary."
msgstr ""

#: ../source/core/replica-set-oplog.txt:190
msgid "Not affected by the :parameter:`logLevel`/:setting:`systemLog.verbosity` level (or the :setting:`systemLog.component.replication.verbosity` level); i.e. for oplog entries, the secondary logs only the slow oplog entries. Increasing the verbosity level does not log all oplog entries."
msgstr ""

#: ../source/core/replica-set-oplog.txt:196
msgid "Not captured by the :doc:`profiler </tutorial/manage-the-database-profiler>` and not affected by the profiling level."
msgstr ""

#: ../source/core/replica-set-oplog.txt:200
msgid "For more information on setting the slow operation threshold, see"
msgstr ""

#: ../source/core/replica-set-oplog.txt:202
msgid ":option:`mongod --slowms`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:204
msgid ":setting:`~operationProfiling.slowOpThresholdMs`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:206
msgid "The :dbcommand:`profile` command or :method:`db.setProfilingLevel()` shell helper method."
msgstr ""

