# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 23:38-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/administration/monitoring.txt:3
msgid "Monitoring for MongoDB"
msgstr ""

#: ../source/administration/monitoring.txt:15
msgid "For MongoDB-specific monitoring, we recommend MongoDB Atlas, our global cloud database service. It automatically collects and displays metrics on the state of your cluster's databases and on server usage. `Set up a free cluster on Atlas <https://www.mongodb.com/cloud/atlas?utm_source=monitoring&utm_campaign=20-docs-in-20-days&utm_medium=docs>`_."
msgstr ""

#: ../source/administration/monitoring.txt:21
msgid "If you have an existing MongoDB database, you can learn how to migrate it into Atlas to get fine-grained monitoring and other Atlas-only capabilities `here <https://www.mongodb.com/cloud/atlas/migrate?utm_source=monitoring&utm_campaign=20-docs-in-20-days-migrations&utm_medium=docs>`_."
msgstr ""

#: ../source/administration/monitoring.txt:26
msgid "Monitoring is a critical component of all database administration. A firm grasp of MongoDB's reporting will allow you to assess the state of your database and maintain your deployment without crisis. Additionally, a sense of MongoDB's normal operational parameters will allow you to diagnose problems before they escalate to failures."
msgstr ""

#: ../source/administration/monitoring.txt:32
msgid "This document presents an overview of the available monitoring utilities and the reporting statistics available in MongoDB. It also introduces diagnostic strategies and suggestions for monitoring replica sets and sharded clusters."
msgstr ""

#: ../source/administration/monitoring.txt:41
msgid "Monitoring Strategies"
msgstr ""

#: ../source/administration/monitoring.txt:43
msgid "MongoDB provides various methods for collecting data about the state of a running MongoDB instance:"
msgstr ""

#: ../source/administration/monitoring.txt:46
msgid "Starting in version 4.0, MongoDB offers :doc:`free Cloud monitoring </administration/free-monitoring>` for standalones and replica sets."
msgstr ""

#: ../source/administration/monitoring.txt:49
msgid "MongoDB distributes a set of utilities that provides real-time reporting of database activities."
msgstr ""

#: ../source/administration/monitoring.txt:52
msgid "MongoDB provides various :doc:`database commands </reference/command>` that return statistics regarding the current database state with greater fidelity."
msgstr ""

#: ../source/administration/monitoring.txt:56
msgid "`MongoDB Atlas <https://www.mongodb.com/cloud/atlas?jmp=docs>`_ is a cloud-hosted database-as-a-service for running, monitoring, and maintaining MongoDB deployments."
msgstr ""

#: ../source/administration/monitoring.txt:60
msgid "|mms-home| is a hosted service that monitors running MongoDB deployments to collect data and provide visualization and alerts based on that data."
msgstr ""

#: ../source/administration/monitoring.txt:64
msgid "MongoDB Ops Manager is :products:`an on-premise solution available in MongoDB Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>` that monitors running MongoDB deployments to collect data and provide visualization and alerts based on that data."
msgstr ""

#: ../source/administration/monitoring.txt:69
msgid "Each strategy can help answer different questions and is useful in different contexts. These methods are complementary."
msgstr ""

#: ../source/administration/monitoring.txt:73
msgid "MongoDB Reporting Tools"
msgstr ""

#: ../source/administration/monitoring.txt:75
msgid "This section provides an overview of the reporting methods distributed with MongoDB. It also offers examples of the kinds of questions that each method is best suited to help you address."
msgstr ""

#: ../source/administration/monitoring.txt:80
msgid "Free Monitoring"
msgstr ""

#: ../source/administration/monitoring.txt:84
msgid "MongoDB offers :doc:`free Cloud monitoring </administration/free-monitoring>` for standalones or replica sets."
msgstr ""

#: ../source/administration/monitoring.txt:87
msgid "By default, you can enable/disable free monitoring during runtime using :method:`db.enableFreeMonitoring()` and :method:`db.disableFreeMonitoring()`."
msgstr ""

#: ../source/administration/monitoring.txt:90
msgid "Free monitoring provides up to 24 hours of data. For more details, see :doc:`/administration/free-monitoring`."
msgstr ""

#: ../source/administration/monitoring.txt:94
msgid "Utilities"
msgstr ""

#: ../source/administration/monitoring.txt:96
msgid "The MongoDB distribution includes a number of utilities that quickly return statistics about instances' performance and activity. Typically, these are most useful for diagnosing issues and assessing normal operation."
msgstr ""

#: ../source/administration/monitoring.txt:102
msgid "``mongostat``"
msgstr ""

#: ../source/administration/monitoring.txt:104
msgid ":binary:`~bin.mongostat` captures and returns the counts of database operations by type (e.g. insert, query, update, delete, etc.). These counts report on the load distribution on the server."
msgstr ""

#: ../source/administration/monitoring.txt:108
msgid "Use :binary:`~bin.mongostat` to understand the distribution of operation types and to inform capacity planning. See the :doc:`mongostat manual </reference/program/mongostat>` for details."
msgstr ""

#: ../source/administration/monitoring.txt:113
msgid "``mongotop``"
msgstr ""

#: ../source/administration/monitoring.txt:115
msgid ":binary:`~bin.mongotop` tracks and reports the current read and write activity of a MongoDB instance, and reports these statistics on a per collection basis."
msgstr ""

#: ../source/administration/monitoring.txt:119
msgid "Use :binary:`~bin.mongotop` to check if your database activity and use match your expectations. See the :doc:`mongotop manual </reference/program/mongotop>` for details."
msgstr ""

#: ../source/administration/monitoring.txt:126
msgid "HTTP Console"
msgstr ""

#: ../source/includes/fact-deprecated-http-interface.rst:3
msgid "MongoDB 3.6 removes the deprecated HTTP interface and REST API to MongoDB."
msgstr ""

#: ../source/administration/monitoring.txt:131
msgid "Commands"
msgstr ""

#: ../source/administration/monitoring.txt:133
msgid "MongoDB includes a number of commands that report on the state of the database."
msgstr ""

#: ../source/administration/monitoring.txt:136
msgid "These data may provide a finer level of granularity than the utilities discussed above. Consider using their output in scripts and programs to develop custom alerts, or to modify the behavior of your application in response to the activity of your instance. The :method:`db.currentOp` method is another useful tool for identifying the database instance's in-progress operations."
msgstr ""

#: ../source/administration/monitoring.txt:144
msgid "``serverStatus``"
msgstr ""

#: ../source/administration/monitoring.txt:146
msgid "The :dbcommand:`serverStatus` command, or :method:`db.serverStatus()` from the shell, returns a general overview of the status of the database, detailing disk usage, memory use, connection, journaling, and index access. The command returns quickly and does not impact MongoDB performance."
msgstr ""

#: ../source/administration/monitoring.txt:152
msgid ":dbcommand:`serverStatus` outputs an account of the state of a MongoDB instance. This command is rarely run directly. In most cases, the data is more meaningful when aggregated, as one would see with monitoring tools including |mms-home| and :products:`Ops Manager </mongodb-enterprise-advanced?jmp=docs>`. Nevertheless, all administrators should be familiar with the data provided by :dbcommand:`serverStatus`."
msgstr ""

#: ../source/administration/monitoring.txt:161
msgid "``dbStats``"
msgstr ""

#: ../source/administration/monitoring.txt:163
msgid "The :dbcommand:`dbStats` command, or :method:`db.stats()` from the shell, returns a document that addresses storage use and data volumes. The :dbcommand:`dbStats` reflect the amount of storage used, the quantity of data contained in the database, and object, collection, and index counters."
msgstr ""

#: ../source/administration/monitoring.txt:169
msgid "Use this data to monitor the state and storage capacity of a specific database. This output also allows you to compare use between databases and to determine the average :term:`document` size in a database."
msgstr ""

#: ../source/administration/monitoring.txt:175
msgid "``collStats``"
msgstr ""

#: ../source/administration/monitoring.txt:177
msgid "The :dbcommand:`collStats` or :method:`db.collection.stats()` from the shell that provides statistics that resemble :dbcommand:`dbStats` on the collection level, including a count of the objects in the collection, the size of the collection, the amount of disk space used by the collection, and information about its indexes."
msgstr ""

#: ../source/administration/monitoring.txt:184
msgid "``replSetGetStatus``"
msgstr ""

#: ../source/administration/monitoring.txt:186
msgid "The :dbcommand:`replSetGetStatus` command (:method:`rs.status()` from the shell) returns an overview of your replica set's status. The :doc:`replSetGetStatus </reference/command/replSetGetStatus>` document details the state and configuration of the replica set and statistics about its members."
msgstr ""

#: ../source/administration/monitoring.txt:191
msgid "Use this data to ensure that replication is properly configured, and to check the connections between the current host and the other members of the replica set."
msgstr ""

#: ../source/administration/monitoring.txt:196
msgid "Hosted (SaaS) Monitoring Tools"
msgstr ""

#: ../source/administration/monitoring.txt:198
msgid "These are monitoring tools provided as a hosted service, usually through a paid subscription."
msgstr ""

#: ../source/administration/monitoring.txt:204
msgid "**Name**"
msgstr ""

#: ../source/administration/monitoring.txt:206
msgid "**Notes**"
msgstr ""

#: ../source/administration/monitoring.txt:208
msgid "|mms-home|"
msgstr ""

#: ../source/administration/monitoring.txt:210
msgid "|MMS| is a cloud-based suite of services for managing MongoDB deployments. |MMS| provides monitoring, backup, and automation functionality. For an on-premise solution, see also :products:`Ops Manager, available in MongoDB Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`."
msgstr ""

#: ../source/administration/monitoring.txt:216
msgid "`VividCortex <https://www.vividcortex.com/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:218
msgid "VividCortex provides deep insights into MongoDB `production database workload and query performance <https://www.vividcortex.com/product/how-it-works>`_ -- in one-second resolution. Track latency, throughput, errors, and more to ensure scalability and exceptional performance of your application on MongoDB."
msgstr ""

#: ../source/administration/monitoring.txt:225
msgid "`Scout <http://scoutapp.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:227
msgid "Several plugins, including `MongoDB Monitoring <https://scoutapp.com/plugin_urls/391-mongodb-monitoring>`_, `MongoDB Slow Queries <http://scoutapp.com/plugin_urls/291-mongodb-slow-queries>`_, and `MongoDB Replica Set Monitoring <http://scoutapp.com/plugin_urls/2251-mongodb-replica-set-monitoring>`_."
msgstr ""

#: ../source/administration/monitoring.txt:234
msgid "`Server Density <http://www.serverdensity.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:236
msgid "`Dashboard for MongoDB <http://www.serverdensity.com/mongodb-monitoring/>`_, MongoDB specific alerts, replication failover timeline and iPhone, iPad and Android mobile apps."
msgstr ""

#: ../source/administration/monitoring.txt:241
msgid "`Application Performance Management <http://ibmserviceengage.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:243
msgid "IBM has an Application Performance Management SaaS offering that includes monitor for MongoDB and other applications and middleware."
msgstr ""

#: ../source/administration/monitoring.txt:246
msgid "`New Relic <http://newrelic.com/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:248
msgid "New Relic offers full support for application performance management. In addition, New Relic Plugins and Insights enable you to view monitoring metrics from Cloud Manager in New Relic."
msgstr ""

#: ../source/administration/monitoring.txt:252
msgid "`Datadog <https://www.datadoghq.com/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:254
msgid "`Infrastructure monitoring <http://docs.datadoghq.com/integrations/mongodb/>`_ to visualize the performance of your MongoDB deployments."
msgstr ""

#: ../source/administration/monitoring.txt:258
msgid "`SPM Performance Monitoring <https://sematext.com/spm>`__"
msgstr ""

#: ../source/administration/monitoring.txt:260
msgid "`Monitoring, Anomaly Detection and Alerting <https://sematext.com/spm/integrations/mongodb-monitoring/>`_ SPM monitors all key MongoDB metrics together with infrastructure incl. Docker and other application metrics, e.g. Node.js, Java, NGINX, Apache, HAProxy or Elasticsearch. SPM provides correlation of metrics and logs."
msgstr ""

#: ../source/administration/monitoring.txt:268
msgid "Process Logging"
msgstr ""

#: ../source/administration/monitoring.txt:270
msgid "During normal operation, :binary:`~bin.mongod` and :binary:`~bin.mongos` instances report a live account of all server activity and operations to either standard output or a log file. The following runtime settings control these options."
msgstr ""

#: ../source/administration/monitoring.txt:276
msgid ":setting:`~systemLog.quiet`. Limits the amount of information written to the log or output."
msgstr ""

#: ../source/administration/monitoring.txt:279
msgid ":setting:`~systemLog.verbosity`. Increases the amount of information written to the log or output. You can also modify the logging verbosity during runtime with the :parameter:`logLevel` parameter or the :method:`db.setLogLevel()` method in the shell."
msgstr ""

#: ../source/administration/monitoring.txt:284
msgid ":setting:`~systemLog.path`. Enables logging to a file, rather than the standard output. You must specify the full path to the log file when adjusting this setting."
msgstr ""

#: ../source/administration/monitoring.txt:288
msgid ":setting:`~systemLog.logAppend`. Adds information to a log file instead of overwriting the file."
msgstr ""

#: ../source/administration/monitoring.txt:293
msgid "You can specify these configuration operations as the command line arguments to :doc:`mongod </reference/program/mongod>` or :doc:`mongos </reference/program/mongos>`"
msgstr ""

#: ../source/administration/monitoring.txt:297
msgid "For example:"
msgstr ""

#: ../source/administration/monitoring.txt:303
msgid "Starts a :binary:`~bin.mongod` instance in :setting:`verbose <systemLog.verbosity>` mode, appending data to the log file at ``/var/log/mongodb/server1.log/``."
msgstr ""

#: ../source/administration/monitoring.txt:307
msgid "The following :term:`database commands <database command>` also affect logging:"
msgstr ""

#: ../source/administration/monitoring.txt:310
msgid ":dbcommand:`getLog`. Displays recent messages from the :binary:`~bin.mongod` process log."
msgstr ""

#: ../source/administration/monitoring.txt:313
msgid ":dbcommand:`logRotate`. Rotates the log files for :binary:`~bin.mongod` processes only. See :doc:`/tutorial/rotate-log-files`."
msgstr ""

#: ../source/administration/monitoring.txt:319
msgid "Log Redaction"
msgstr ""

#: ../source/administration/monitoring.txt:321
msgid "Available in MongoDB Enterprise only"
msgstr ""

#: ../source/administration/monitoring.txt:323
msgid "A :binary:`~bin.mongod` running with :setting:`security.redactClientLogData` redacts :doc:`messages </reference/log-messages>` associated with any given log event before logging, leaving only metadata, source files, or line numbers related to the event. :setting:`security.redactClientLogData` prevents potentially sensitive information from entering the system log at the cost of diagnostic detail."
msgstr ""

#: ../source/administration/monitoring.txt:330
msgid "For example, the following operation inserts a document into a :binary:`~bin.mongod` running without log redaction. The :binary:`~bin.mongod` has :setting:`systemLog.component.command.verbosity` set to ``1``:"
msgstr ""

#: ../source/administration/monitoring.txt:338
msgid "This operation produces the following log event:"
msgstr ""

#: ../source/administration/monitoring.txt:355
msgid "A :binary:`~bin.mongod` running with :setting:`security.redactClientLogData` performing the same insert operation produces the following log event:"
msgstr ""

#: ../source/administration/monitoring.txt:369
msgid "Use :setting:`~security.redactClientLogData` in conjunction with :doc:`/core/security-encryption-at-rest` and :doc:`/core/security-transport-encryption` to assist compliance with regulatory requirements."
msgstr ""

#: ../source/administration/monitoring.txt:375
msgid "Diagnosing Performance Issues"
msgstr ""

#: ../source/includes/intro-performance.rst:1
msgid "As you develop and operate applications with MongoDB, you may want to analyze the performance of the database as the application. :doc:`/administration/analyzing-mongodb-performance` discusses some of the operational factors that can influence performance."
msgstr ""

#: ../source/administration/monitoring.txt:382
msgid "Replication and Monitoring"
msgstr ""

#: ../source/includes/fact-slow-oplog-log-message-footnote.rst:1
msgid "Starting in version 4.0.6, secondary members of a replica set now :ref:`log oplog entries <slow-oplog>` that take longer than the slow operation threshold to apply. These slow oplog messages are logged for the secondaries in the :option:`diagnostic log <mongod --logpath>` under the :data:`REPL` component with the text ``applied op: <oplog entry> took <num>ms``. These slow oplog entries depend only on the slow operation threshold. They do not depend on the log levels (either at the system or component level), or the profiling level, or the slow operation sample rate. The profiler does not capture slow oplog entries. For more information, see :ref:`slow-oplog`."
msgstr ""

#: ../source/administration/monitoring.txt:388
msgid "Beyond the basic monitoring requirements for any MongoDB instance, for replica sets, administrators must monitor *replication lag*. \"Replication lag\" refers to the amount of time that it takes to copy (i.e. replicate) a write operation on the :term:`primary` to a :term:`secondary`. Some small delay period may be acceptable, but two significant problems emerge as replication lag grows:"
msgstr ""

#: ../source/administration/monitoring.txt:395
msgid "First, operations that occurred during the period of lag are not replicated to one or more secondaries. If you're using replication to ensure data persistence, exceptionally long delays may impact the integrity of your data set."
msgstr ""

#: ../source/administration/monitoring.txt:400
msgid "Second, if the replication lag exceeds the length of the operation log (:term:`oplog`) then MongoDB will have to perform an initial sync on the secondary, copying all data from the :term:`primary` and rebuilding all indexes. [#oplog]_ This is uncommon under normal circumstances, but if you configure the oplog to be smaller than the default, the issue can arise."
msgstr ""

#: ../source/administration/monitoring.txt:409
msgid "The size of the oplog is only configurable during the first run using the :option:`--oplogSize <mongod --oplogSize>` argument to the :binary:`~bin.mongod` command, or preferably, the :setting:`~replication.oplogSizeMB` setting in the MongoDB configuration file. If you do not specify this on the command line before running with the :option:`--replSet <mongod --replSet>` option, :binary:`~bin.mongod` will create a default sized oplog."
msgstr ""

#: ../source/administration/monitoring.txt:417
msgid "By default, the oplog is 5 percent of total available disk space on 64-bit systems. For more information about changing the oplog size, see the :doc:`/tutorial/change-oplog-size`."
msgstr ""

#: ../source/administration/monitoring.txt:421
msgid "For causes of replication lag, see :ref:`Replication Lag <replica-set-replication-lag>`."
msgstr ""

#: ../source/administration/monitoring.txt:424
msgid "Replication issues are most often the result of network connectivity issues between members, or the result of a :term:`primary` that does not have the resources to support application and replication traffic. To check the status of a replica, use the :dbcommand:`replSetGetStatus` or the following helper in the shell:"
msgstr ""

#: ../source/administration/monitoring.txt:434
msgid "The :dbcommand:`replSetGetStatus` reference provides a more in-depth overview view of this output. In general, watch the value of :data:`~replSetGetStatus.members.optimeDate`, and pay particular attention to the time difference between the :term:`primary` and the :term:`secondary` members."
msgstr ""

#: ../source/includes/fact-oplog-size.rst:1
msgid "Starting in MongoDB 4.0, the oplog can grow past its configured size limit to avoid deleting the :data:`majority commit point <replSetGetStatus.optimes.lastCommittedOpTime>`."
msgstr ""

#: ../source/administration/monitoring.txt:445
msgid "Sharding and Monitoring"
msgstr ""

#: ../source/administration/monitoring.txt:447
msgid "In most cases, the components of :term:`sharded clusters <sharded cluster>` benefit from the same monitoring and analysis as all other MongoDB instances. In addition, clusters require further monitoring to ensure that data is effectively distributed among nodes and that sharding operations are functioning appropriately."
msgstr ""

#: ../source/administration/monitoring.txt:453
msgid "See the :doc:`/sharding` documentation for more information."
msgstr ""

#: ../source/administration/monitoring.txt:457
msgid "Config Servers"
msgstr ""

#: ../source/administration/monitoring.txt:459
msgid "The :term:`config database` maintains a map identifying which documents are on which shards. The cluster updates this map as :term:`chunks <chunk>` move between shards. When a configuration server becomes inaccessible, certain sharding operations become unavailable, such as moving chunks and starting :binary:`~bin.mongos` instances. However, clusters remain accessible from already-running :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/administration/monitoring.txt:467
msgid "Because inaccessible configuration servers can seriously impact the availability of a sharded cluster, you should monitor your configuration servers to ensure that the cluster remains well balanced and that :binary:`~bin.mongos` instances can restart."
msgstr ""

#: ../source/administration/monitoring.txt:472
msgid "|mms-home| and :products:`Ops Manager </mongodb-enterprise-advanced?jmp=docs>` monitor config servers and can create notifications if a config server becomes inaccessible. See the |mms-docs| and :opsmgr:`Ops Manager documentation </application>` for more information."
msgstr ""

#: ../source/administration/monitoring.txt:479
msgid "Balancing and Chunk Distribution"
msgstr ""

#: ../source/administration/monitoring.txt:481
msgid "The most effective :term:`sharded cluster` deployments evenly balance :term:`chunks <chunk>` among the shards. To facilitate this, MongoDB has a background :term:`balancer` process that distributes data to ensure that chunks are always optimally distributed among the :term:`shards <shard>`."
msgstr ""

#: ../source/administration/monitoring.txt:486
msgid "Issue the :method:`db.printShardingStatus()` or :method:`sh.status()` command to the :binary:`~bin.mongos` by way of the :binary:`~bin.mongo` shell. This returns an overview of the entire cluster including the database name, and a list of the chunks."
msgstr ""

#: ../source/administration/monitoring.txt:492
msgid "Stale Locks"
msgstr ""

#: ../source/administration/monitoring.txt:494
msgid "To check the lock status of the database, connect to a :binary:`~bin.mongos` instance using the :binary:`~bin.mongo` shell. Issue the following command sequence to switch to the ``config`` database and display all outstanding locks on the shard database:"
msgstr ""

#: ../source/administration/monitoring.txt:504
msgid "The balancing process takes a special \"balancer\" lock that prevents other balancing activity from transpiring. In the ``config`` database, use the following command to view the \"balancer\" lock."
msgstr ""

#: ../source/administration/monitoring.txt:514
msgid "Starting in 3.4, the primary of the CSRS config server holds the \"balancer\" lock, using a process id named \"ConfigServer\". This lock is never released. To determine if the balancer is running, see :ref:`sharding-balancing-is-running`."
msgstr ""

#: ../source/administration/monitoring.txt:522
msgid "Storage Node Watchdog"
msgstr ""

#: ../source/administration/monitoring.txt:526
msgid "Available only in MongoDB Enterprise. Not available on macOS."
msgstr ""

#: ../source/administration/monitoring.txt:528
msgid "The Storage Node Watchdog monitors the filesystems used by MongoDB to detect unresponsive conditions."
msgstr ""

#: ../source/administration/monitoring.txt:531
msgid "The Storage Node Watchdog can be enabled with the :parameter:`watchdogPeriodSeconds` parameter on a :binary:`~bin.mongod`."
msgstr ""

#: ../source/administration/monitoring.txt:534
msgid "When enabled, the Storage Node Watchdog monitors the following directories:"
msgstr ""

#: ../source/administration/monitoring.txt:537
msgid "The :option:`--dbpath <mongod --dbpath>` directory"
msgstr ""

#: ../source/administration/monitoring.txt:538
msgid "The ``journal`` directory inside the :option:`--dbpath <mongod --dbpath>` directory if :option:`journaling <mongod --journal>` is enabled"
msgstr ""

#: ../source/administration/monitoring.txt:540
msgid "The directory of :option:`--logpath <mongod --logpath>` file"
msgstr ""

#: ../source/administration/monitoring.txt:541
msgid "The directory of :option:`--auditPath <mongod --auditPath>` file"
msgstr ""

#: ../source/administration/monitoring.txt:543
msgid "If any of the filesystems containing these directories become unresponsive, the Storage Node Watchdog terminates the :binary:`~bin.mongod` and exits with a status code of 61. If the :binary:`~bin.mongod` is serving as the :term:`primary`, terminating initiates :term:`failover` allowing another member to become primary."
msgstr ""

#: ../source/administration/monitoring.txt:549
msgid "Once a :binary:`~bin.mongod` has terminated, it may not be possible to cleanly restart it on the *same* machine."
msgstr ""

#: ../source/administration/monitoring.txt:552
msgid "The maximum time the Storage Node Watchdog can take to detect an unresponsive filesystem and terminate is nearly *twice* the value of :parameter:`watchdogPeriodSeconds`."
msgstr ""

#: ../source/includes/extracts/additional-resources-monitoring.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-monitoring.rst:6
msgid "`MongoDB Production Readiness Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-monitoring.rst:7
msgid "`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-hosted MongoDB deployments <https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

