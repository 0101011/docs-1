# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/sharding-data-partitioning.txt:5
msgid "Data Partitioning with Chunks"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:16
msgid ""
"MongoDB Atlas implements sharding with best practices baked in, allowing "
"you to scale your cluster through a GUI. The deployment and management of"
" config servers and query routers is fully automated. `Get started here "
"<https://www.mongodb.com/cloud/atlas?utm_source=sharding-data-"
"partitioning&utm_campaign=20-docs-in-20-days&utm_medium=docs>`_."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:21
msgid ""
"MongoDB uses the :term:`shard key` associated to the collection to "
"partition the data into :term:`chunks<chunk>`. A :term:`chunk` consists "
"of a subset of sharded data. Each chunk has a inclusive lower and "
"exclusive upper range based on the :term:`shard key`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:28
msgid ""
"The :binary:`~bin.mongos` routes writes to the appropriate chunk based on"
" the :term:`shard key` value. MongoDB splits chunks when they grow beyond"
" the configured :ref:`chunk size<sharding-chunk-size>`. Both inserts and "
"updates can trigger a chunk split."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:33
msgid ""
"The smallest range a chunk can represent is a single unique shard key "
"value. A chunk that only contains documents with a single shard key value"
" cannot be :ref:`split<sharding-chunk-split>`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:40
msgid "Initial Chunks"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:43
msgid "Populated Collection"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:47
msgid ""
"The sharding operation creates the initial chunk(s) to cover the entire "
"range of the shard key values. The number of chunks created depends on "
"the :ref:`configured chunk size <sharding-chunk-size>`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:51
msgid ""
"After the initial chunk creation, the balancer migrates these initial "
"chunks across the shards as appropriate as well as manages the chunk "
"distribution going forward."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:58
msgid "Empty Collection"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:62
msgid ""
"If you define :doc:`zones and zone ranges </core/zone-sharding>` defined "
"for an empty or non-existing collection (Available starting in MongoDB "
"4.0.3):"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:66
msgid ""
"The sharding operation creates empty chunks for the defined zone ranges "
"as well as any additional chunks to cover the entire range of the shard "
"key values and performs an initial chunk distribution based on the zone "
"ranges. This initial creation and distribution of chunks allows for "
"faster setup of zoned sharding."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:72
#: ../source/core/sharding-data-partitioning.txt:90
msgid ""
"After the initial distribution, the balancer manages the chunk "
"distribution going forward."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:76
msgid ""
"If you do not have :doc:`zones and zone ranges </core/zone-sharding>` "
"defined for an empty or non-existing collection:"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:79
msgid "For hashed sharding:"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:81
msgid ""
"The sharding operation creates empty chunks to cover the entire range of "
"the shard key values and performs an initial chunk distribution. By "
"default, the operation creates 2 chunks per shard and migrates across the"
" cluster. You can use ``numInitialChunks`` option to specify a different "
"number of initial chunks. This initial creation and distribution of "
"chunks allows for faster setup of sharding."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:93
msgid "For ranged sharding:"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:95
msgid ""
"The sharding operation creates a single empty chunk to cover the entire "
"range of the shard key values."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:98
msgid ""
"After the initial chunk creation, the balancer migrates the initial chunk"
" across the shards as appropriate as well as manages the chunk "
"distribution going forward."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:106
msgid "Chunk Size"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:108
msgid ""
"The default :term:`chunk` size in MongoDB is 64 megabytes. You can "
":doc:`increase or reduce the chunk size </tutorial/modify-chunk-size-in-"
"sharded-cluster>`. Consider the implications of changing the default "
"chunk size:"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:113
msgid ""
"Small chunks lead to a more even distribution of data at the expense of "
"more frequent migrations. This creates expense at the query routing "
"(:binary:`~bin.mongos`) layer."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:117
msgid ""
"Large chunks lead to fewer migrations. This is more efficient both from "
"the networking perspective *and* in terms of internal overhead at the "
"query routing layer. But, these efficiencies come at the expense of a "
"potentially uneven distribution of data."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:122
msgid ""
"Chunk size affects the :limit:`Maximum Number of Documents Per Chunk to "
"Migrate`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:125
msgid ""
"Chunk size affects the maximum collection size when sharding an "
":limit:`existing collection<Sharding Existing Collection Data Size>`. "
"Post-sharding, chunk size does not constrain collection size."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:129
msgid ""
"For many deployments, it makes sense to avoid frequent and potentially "
"spurious migrations at the expense of a slightly less evenly distributed "
"data set."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:134
msgid "Limitations"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:136
msgid ""
"Changing the chunk size affects when chunks split but there are some "
"limitations to its effects."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:139
msgid ""
"Automatic splitting only occurs during inserts or updates. If you lower "
"the chunk size, it may take time for all chunks to split to the new size."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:143
msgid ""
"Splits cannot be \"undone\". If you increase the chunk size, existing "
"chunks must grow through inserts or updates until they reach the new "
"size."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:151
msgid "Chunk Splits"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:153
msgid ""
"Splitting is a process that keeps chunks from growing too large. When a "
"chunk grows beyond a :ref:`specified chunk size <sharding-chunk-size>`, "
"or if the number of documents in the chunk exceeds :limit:`Maximum Number"
" of Documents Per Chunk to Migrate`, MongoDB splits the chunk based on "
"the shard key values the chunk represent. A chunk may be split into "
"multiple chunks where necessary. Inserts and updates may trigger splits. "
"Splits are an efficient meta-data change. To create splits, MongoDB does "
"*not* migrate any data or affect the shards."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:164
msgid ""
"Splits may lead to an uneven distribution of the chunks for a collection "
"across the shards. In such cases, the balancer redistributes chunks "
"across shards. See :ref:`sharding-internals-balancing` for more details "
"on balancing chunks across shards."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:172
msgid "Chunk Migration"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:174
msgid ""
"MongoDB migrates chunks in a :term:`sharded cluster` to distribute the "
"chunks of a sharded collection evenly among shards. Migrations may be "
"either:"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:178
msgid ""
"Manual. Only use manual migration in limited cases, such as to distribute"
" data during bulk inserts. See :doc:`Migrating Chunks Manually </tutorial"
"/migrate-chunks-in-sharded-cluster>` for more details."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:182
msgid ""
"Automatic. The :ref:`balancer <sharding-balancing>` process automatically"
" migrates chunks when there is an uneven distribution of a sharded "
"collection's chunks across the shards. See :ref:`Migration Thresholds "
"<sharding-migration-thresholds>` for more details."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:187
msgid ""
"For more information on the sharded cluster :term:`balancer`, see :ref"
":`sharding-balancing`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:193
msgid "Balancing"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:195
msgid ""
"The :ref:`balancer <sharding-balancing-internals>` is a background "
"process that manages chunk migrations. If the difference in number of "
"chunks between the largest and smallest shard exceed the :ref:`migration "
"thresholds<sharding-migration-thresholds>`, the balancer begins migrating"
" chunks across the cluster to ensure an even distribution of data."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:204
msgid ""
"You can :doc:`manage</tutorial/manage-sharded-cluster-balancer>` certain "
"aspects of the balancer. The balancer also respects any :term:`zones "
"<zone>` created as a part of configuring :ref:`zones <zone-sharding>` in "
"a sharded cluster."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:209
msgid ""
"See :ref:`sharding-balancing` for more information on the "
":term:`balancer`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:216
msgid "Indivisible Chunks"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:218
msgid ""
"In some cases, chunks can grow beyond the :ref:`specified chunk size "
"<sharding-chunk-size>` but cannot undergo a :ref:`split<sharding-chunk-"
"split>`. The most common scenario is when a chunk represents a single "
"shard key value. Since the chunk cannot split, it continues to grow "
"beyond the chunk size, becoming a jumbo chunk. These jumbo chunks can "
"become a performance bottleneck as they continue to grow, especially if "
"the shard key value occurs with high :ref:`frequency<shard-key-"
"frequency>`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:226
msgid ""
"The addition of new data or new shards can result in data distribution "
"imbalances within the cluster. A particular shard may acquire more chunks"
" than another shard, or the size of a chunk may grow beyond the "
"configured maximum chunk size."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:231
msgid ""
"MongoDB ensures a balanced cluster using two processes: chunk splitting "
"and the balancer."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:237
msgid "``moveChunk`` directory"
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:239
msgid ""
"In MongoDB 2.6 and MongoDB 3.0, :setting:`sharding.archiveMovedChunks` is"
" enabled by default. All other MongoDB versions have this disabled by "
"default. With :setting:`sharding.archiveMovedChunks` enabled, the source "
"shard archives the documents in the migrated chunks in a directory named "
"after the collection namespace under the ``moveChunk`` directory in the "
":setting:`storage.dbPath`."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:245
msgid ""
"If some error occurs during a :doc:`migration </core/sharding-balancer-"
"administration>`, these files may be helpful in recovering documents "
"affected during the migration."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:249
msgid ""
"Once the migration has completed successfully and there is no need to "
"recover documents from these files, you may safely delete these files. "
"Or, if you have an existing backup of the database that you can use for "
"recovery, you may also delete these files after migration."
msgstr ""

#: ../source/core/sharding-data-partitioning.txt:254
msgid ""
"To determine if all migrations are complete, run "
":method:`sh.isBalancerRunning()` while connected to a "
":binary:`~bin.mongos` instance."
msgstr ""

