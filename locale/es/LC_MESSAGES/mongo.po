# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/mongo.txt:3
msgid "The ``mongo`` Shell"
msgstr ""

#: ../source/mongo.txt:13
msgid ""
"The :binary:`~bin.mongo` shell is an interactive JavaScript interface to "
"MongoDB. You can use the :binary:`~bin.mongo` shell to query and update "
"data as well as perform administrative operations."
msgstr ""

#: ../source/mongo.txt:17
msgid ""
"The :binary:`~bin.mongo` shell is a component of the `MongoDB "
"distributions <https://www.mongodb.com/download-"
"center?jmp=docs#production>`_. Once you have :doc:`installed and have "
"started MongoDB </installation>`, connect the :binary:`~bin.mongo` shell "
"to your running MongoDB instance."
msgstr ""

#: ../source/mongo.txt:24
msgid "Start the ``mongo`` Shell and Connect to MongoDB"
msgstr ""

#: ../source/mongo.txt:27
msgid "Prerequisites"
msgstr ""

#: ../source/mongo.txt:29
msgid ""
"Ensure that MongoDB is running before attempting to start the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/mongo.txt:32
msgid ""
"Open a terminal window (or a command prompt for Windows) and go to your "
"``<mongodb installation dir>/bin`` directory:"
msgstr ""

#: ../source/mongo.txt:41
msgid ""
"Adding your ``<mongodb installation dir>/bin`` to the ``PATH`` "
"environment variable allows you to type ``mongo`` instead of having to go"
" to the ``<mongodb installation dir>/bin`` directory or specify the full "
"path to the binary."
msgstr ""

#: ../source/mongo.txt:47
msgid "Local MongoDB Instance on Default Port"
msgstr ""

#: ../source/mongo.txt:49
msgid ""
"You can run :binary:`~bin.mongo` shell without any command-line options "
"to connect to a :doc:`MongoDB </reference/program/mongod>` instance "
"running on your **localhost** with **default port** 27017:"
msgstr ""

#: ../source/mongo.txt:58
msgid "Local MongoDB Instance on a Non-default Port"
msgstr ""

#: ../source/mongo.txt:60
msgid ""
"To explicitly specify the port, include the :option:`--port <mongo "
"--port>` command-line option. For example, to connect to a MongoDB "
"instance running on localhost with a non-default port 28015:"
msgstr ""

#: ../source/mongo.txt:69
msgid "MongoDB Instance on a Remote Host"
msgstr ""

#: ../source/mongo.txt:71
msgid "To explicitly specify the hostname and/or port,"
msgstr ""

#: ../source/mongo.txt:73
msgid ""
"You can specify a :doc:`connection string </reference/connection-"
"string>`. For example, to connect to a MongoDB instance running on a "
"remote host machine:"
msgstr ""

#: ../source/mongo.txt:81
msgid ""
"You can use the command-line option :option:`--host \\<host\\>:\\<port\\>"
" <mongo --host>`. For example, to connect to a MongoDB instance running "
"on a remote host machine:"
msgstr ""

#: ../source/mongo.txt:89
msgid ""
"You can use the :option:`--host \\<host\\> <mongo --host>` and "
":option:`--port \\<port\\> <mongo --port>` command-line options. For "
"example, to connect to a MongoDB instance running on a remote host "
"machine:"
msgstr ""

#: ../source/mongo.txt:99
msgid "MongoDB Instance with Authentication"
msgstr ""

#: ../source/mongo.txt:101
msgid "To connect to a MongoDB instance requires authentication:"
msgstr ""

#: ../source/mongo.txt:103
msgid ""
"You can specify the username, authentication database, and optionally the"
" password in the :doc:`connection string </reference/connection-string>`."
" For example, to connect and authenticate to a remote MongoDB instance as"
" user ``alice``:"
msgstr ""

#: ../source/mongo.txt:110
msgid ""
"If you do not specify the password in the connection string, the shell "
"will prompt for the password."
msgstr ""

#: ../source/mongo.txt:117
msgid ""
"You can use the :option:`--username \\<user\\> <mongo --username>` and "
":option:`--password <mongo --password>`, "
":option:`--authenticationDatabase \\<db\\> <mongo "
"--authenticationDatabase>` command-line options. For example, to connect "
"and authenticate to a remote MongoDB instance as user ``alice``:"
msgstr ""

#: ../source/mongo.txt:126
msgid ""
"If you specify ``--password`` without the user's password, the shell will"
" prompt for the password."
msgstr ""

#: ../source/mongo.txt:134
msgid "Connect to a MongoDB Replica Set"
msgstr ""

#: ../source/mongo.txt:136
msgid "To connect to a replica set:"
msgstr ""

#: ../source/mongo.txt:138
msgid ""
"You can specify the replica set name and members in the :doc:`connection "
"string </reference/connection-string>`."
msgstr ""

#: ../source/mongo.txt:145
msgid ""
"If using the :ref:`connections-dns-seedlist`, you can specify the "
"connection string:"
msgstr ""

#: ../source/mongo.txt:154 ../source/mongo.txt:188
msgid ""
"Use of the ``+srv`` connection string modifier automatically sets the ssl"
" option to true for the connection."
msgstr ""

#: ../source/mongo.txt:157
msgid ""
"You can specify the replica set name and members from the :option:`--host"
" \\<replica set "
"name\\>/\\<host1\\>:\\<port1\\>,\\<host2\\>:\\<port2\\>,... <mongo "
"--host>` command-line option. For example, to connect to replica set "
"named ``replA``:"
msgstr ""

#: ../source/mongo.txt:168
msgid "TLS/SSL Connection"
msgstr ""

#: ../source/mongo.txt:170
msgid "For TLS/SSL connections,"
msgstr ""

#: ../source/mongo.txt:172
msgid ""
"You can specify the ``ssl=true`` option in the :doc:`connection string "
"</reference/connection-string>`."
msgstr ""

#: ../source/mongo.txt:179
msgid ""
"If using the :ref:`connections-dns-seedlist`, you can include the "
"``+srv`` connection string modifier:"
msgstr ""

#: ../source/mongo.txt:191
msgid ""
"You can specify :option:`--ssl <mongo --ssl>` command-line option. For "
"example, to connect to replica set named ``replA``:"
msgstr ""

#: ../source/mongo.txt:201
msgid ""
"For more information on the options used in the connection examples as "
"well as other options, see :doc:`mongo reference "
"</reference/program/mongo>` and :ref:`examples of starting up mongo "
"<mongo-usage-examples>`."
msgstr ""

#: ../source/mongo.txt:209
msgid "Working with the ``mongo`` Shell"
msgstr ""

#: ../source/mongo.txt:211
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/mongo.txt:217
msgid "The operation should return ``test``, which is the default database."
msgstr ""

#: ../source/mongo.txt:219
msgid ""
"To switch databases, issue the ``use <db>`` helper, as in the following "
"example:"
msgstr ""

#: ../source/mongo.txt:226
msgid ""
"See also :method:`db.getSiblingDB()` method to access a different "
"database from the current database without switching your current "
"database context (i.e. ``db``)."
msgstr ""

#: ../source/mongo.txt:230
msgid ""
"To list the databases available to the user, use the helper ``show dbs``."
" [#access]_"
msgstr ""

#: ../source/mongo.txt:233
msgid ""
"You can switch to non-existing databases. When you first store data in "
"the database, such as by creating a collection, MongoDB creates the "
"database. For example, the following creates both the database "
"``myNewDatabase`` and the :term:`collection` ``myCollection`` during the "
":method:`~db.collection.insertOne()` operation:"
msgstr ""

#: ../source/mongo.txt:244
msgid ""
"The :method:`db.myCollection.insertOne() <db.collection.insertOne()>` is "
"one of the :doc:`methods available in the mongo shell "
"</reference/method>`."
msgstr ""

#: ../source/mongo.txt:247
msgid "``db`` refers to the current database."
msgstr ""

#: ../source/mongo.txt:249
msgid "``myCollection`` is the name of the collection."
msgstr ""

#: ../source/mongo.txt:251
msgid ""
"If the :binary:`~bin.mongo` shell does not accept the name of a "
"collection, you can use the alternative :method:`db.getCollection()` "
"syntax. For instance, if a collection name contains a space or hyphen, "
"starts with a number, or conflicts with a built-in function:"
msgstr ""

#: ../source/includes/fact-mongo-prompt-size.rst:1
msgid ""
"The :binary:`~bin.mongo` shell prompt has a limit of 4095 codepoints for "
"each line. If you enter a line with more than 4095 codepoints, the shell "
"will truncate it."
msgstr ""

#: ../source/mongo.txt:264
msgid ""
"For more documentation of basic MongoDB operations in the "
":binary:`~bin.mongo` shell, see:"
msgstr ""

#: ../source/mongo.txt:267 ../source/mongo.txt:389
msgid ":gettingstarted:`Getting Started Guide </shell>`"
msgstr ""

#: ../source/mongo.txt:268
msgid ":doc:`/tutorial/insert-documents`"
msgstr ""

#: ../source/mongo.txt:269
msgid ":doc:`/tutorial/query-documents`"
msgstr ""

#: ../source/mongo.txt:270
msgid ":doc:`/tutorial/update-documents`"
msgstr ""

#: ../source/mongo.txt:271
msgid ":doc:`/tutorial/remove-documents`"
msgstr ""

#: ../source/mongo.txt:272
msgid ":doc:`/reference/method`"
msgstr ""

#: ../source/mongo.txt:275
msgid ""
"If the deployment runs with access control, the operation returns "
"different values based on user privileges. See :ref:`listDatabases "
"Behavior <listDatabases-behavior>` for details."
msgstr ""

#: ../source/mongo.txt:280
msgid "Format Printed Results"
msgstr ""

#: ../source/mongo.txt:282
msgid ""
"The :method:`db.collection.find()` method returns a :term:`cursor` to the"
" results; however, in the :binary:`~bin.mongo` shell, if the returned "
"cursor is not assigned to a variable using the ``var`` keyword, then the "
"cursor is automatically iterated up to 20 times to print up to the first "
"20 documents that match the query. The :binary:`~bin.mongo` shell will "
"prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/mongo.txt:289
msgid ""
"To format the printed result, you can add the ``.pretty()`` to the "
"operation, as in the following:"
msgstr ""

#: ../source/mongo.txt:296
msgid ""
"In addition, you can use the following explicit print methods in the "
":binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/mongo.txt:299
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/mongo.txt:301
msgid ""
"``print(tojson(<obj>))`` to print with :term:`JSON` formatting and "
"equivalent to ``printjson()``"
msgstr ""

#: ../source/mongo.txt:304
msgid ""
"``printjson()`` to print with :term:`JSON` formatting and equivalent to "
"``print(tojson(<obj>))``"
msgstr ""

#: ../source/mongo.txt:307
msgid ""
"For more information and examples on cursor handling in the "
":binary:`~bin.mongo` shell, see :doc:`/tutorial/iterate-a-cursor`. See "
"also :ref:`mongo-shell-help-cursor` for list of cursor help in the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/mongo.txt:313
msgid "Multi-line Operations in the ``mongo`` Shell"
msgstr ""

#: ../source/mongo.txt:315
msgid ""
"If you end a line with an open parenthesis (``'('``), an open brace "
"(``'{'``), or an open bracket (``'['``), then the subsequent lines start "
"with ellipsis (``\"...\"``) until you enter the corresponding closing "
"parenthesis (``')'``), the closing brace (``'}'``) or the closing bracket"
" (``']'``). The :binary:`~bin.mongo` shell waits for the closing "
"parenthesis, closing brace, or the closing bracket before evaluating the "
"code, as in the following example:"
msgstr ""

#: ../source/mongo.txt:330
msgid ""
"You can exit the line continuation mode if you enter two blank lines, as "
"in the following example:"
msgstr ""

#: ../source/mongo.txt:341
msgid "Tab Completion and Other Keyboard Shortcuts"
msgstr ""

#: ../source/mongo.txt:343
msgid "The :binary:`~bin.mongo` shell supports keyboard shortcuts. For example,"
msgstr ""

#: ../source/mongo.txt:345
msgid ""
"Use the up/down arrow keys to scroll through command history. See "
":ref:`.dbshell <mongo-dbshell-file>` documentation for more information "
"on the ``.dbshell`` file."
msgstr ""

#: ../source/mongo.txt:349
msgid ""
"Use ``<Tab>`` to autocomplete or to list the completion possibilities, as"
" in the following example which uses ``<Tab>`` to complete the method "
"name starting with the letter ``'c'``:"
msgstr ""

#: ../source/mongo.txt:357
msgid ""
"Because there are many collection methods starting with the letter "
"``'c'``, the ``<Tab>`` will list the various methods that start with "
"``'c'``."
msgstr ""

#: ../source/mongo.txt:361
msgid ""
"For a full list of the shortcuts, see :ref:`Shell Keyboard Shortcuts "
"<mongo-keyboard-shortcuts>`"
msgstr ""

#: ../source/mongo.txt:366
msgid "``.mongorc.js`` File"
msgstr ""

#: ../source/mongo.txt:368
msgid ""
"When starting, :binary:`~bin.mongo` checks the user's :envvar:`HOME` "
"directory for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-"
"file>`. If found, :binary:`~bin.mongo` interprets the content of "
":file:`.mongorc.js` before displaying the prompt for the first time. If "
"you use the shell to evaluate a JavaScript file or expression, either by "
"using the :option:`--eval <mongo --eval>` option on the command line or "
"by specifying :ref:`a .js file to mongo <mongo-shell-file>`, "
":binary:`~bin.mongo` will read the ``.mongorc.js`` file *after* the "
"JavaScript has finished processing. You can prevent ``.mongorc.js`` from "
"being loaded by using the :option:`--norc <mongo --norc>` option."
msgstr ""

#: ../source/mongo.txt:383
msgid "Exit the Shell"
msgstr ""

#: ../source/mongo.txt:385
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-C>`` shortcut."
msgstr ""

#: ../source/mongo.txt:390
msgid ":binary:`~bin.mongo` Reference Page"
msgstr ""

