# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: 2013-12-16 22:38+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/query-a-2dsphere-index.txt:5
msgid "Query a ``2dsphere`` Index"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:15
msgid ""
"The following sections describe queries supported by the ``2dsphere`` "
"index."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:18
msgid "GeoJSON Objects Bounded by a Polygon"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:20
msgid ""
"The :query:`$geoWithin` operator queries for location data found within a"
" GeoJSON polygon. Your location data must be stored in GeoJSON format. "
"Use the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:33
msgid ""
"The following example selects all points and shapes that exist entirely "
"within a GeoJSON polygon:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:51
msgid "Intersections of GeoJSON Objects"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:53
msgid ""
"The :query:`$geoIntersects` operator queries for locations that intersect"
" a specified GeoJSON object. A location intersects the object if the "
"intersection is non-empty. This includes documents that have a shared "
"edge."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:58
msgid "The :query:`$geoIntersects` operator uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:69
msgid ""
"The following example uses :query:`$geoIntersects` to select all indexed "
"points and shapes that intersect with the polygon defined by the "
"``coordinates`` array."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:88
msgid "Proximity to a GeoJSON Point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:90
msgid ""
"Proximity queries return the points closest to the defined point and "
"sorts the results by distance. A proximity query on GeoJSON data requires"
" a ``2dsphere`` index."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:94
msgid ""
"To query for proximity to a GeoJSON point, use either the :query:`$near` "
"operator. Distance is in meters."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:97
msgid "The :query:`$near` uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:109
msgid "For examples, see :query:`$near`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:111
msgid ""
"See also the :query:`$nearSphere` operator and the:pipeline:`$geoNear` "
"aggregation pipeline stage."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:115
msgid "Points within a Circle Defined on a Sphere"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:117
msgid ""
"To select all grid coordinates in a \"spherical cap\" on a sphere, use "
":query:`$geoWithin` with the :query:`$centerSphere` operator. Specify an "
"array that contains:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:121
msgid "The grid coordinates of the circle's center point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:123
msgid ""
"The circle's radius measured in radians. To calculate radians, see "
":doc:`/tutorial/calculate-distances-using-spherical-geometry-with-2d-"
"geospatial-indexes`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:126
msgid "Use the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:136
msgid ""
"The following example queries grid coordinates and returns all documents "
"within a 10 mile radius of longitude ``88 W`` and latitude ``30 N``. The "
"example converts the distance, 10 miles, to radians by dividing by the "
"approximate equatorial radius of the earth, 3963.2 miles:"
msgstr ""

# 29f562e457c445a2ab5487484f59bb54
#~ msgid ""
#~ "The following sections describe queries "
#~ "supported by the ``2dsphere`` index. For"
#~ " an overview of recommended geospatial "
#~ "queries, see :ref:`geospatial-query-"
#~ "compatibility-chart`."
#~ msgstr ""

# f562a592eaa84c458927a0dc461b653e
#~ msgid ""
#~ "To query for proximity to a "
#~ "GeoJSON point, use either the "
#~ ":query:`$near` operator or :dbcommand:`geoNear` "
#~ "command. Distance is in meters."
#~ msgstr ""

# 486f9f20249848258f1be6e355860972
#~ msgid "The :dbcommand:`geoNear` command uses the following syntax:"
#~ msgstr ""

# 798986fa406d4533a5012ffde9faa6ab
#~ msgid ""
#~ "The :dbcommand:`geoNear` command offers more"
#~ " options and returns more information "
#~ "than does the :query:`$near` operator. "
#~ "To run the command, see "
#~ ":dbcommand:`geoNear`."
#~ msgstr ""

# da884e2cc6f941e19e350f90efebc5b1
#~ msgid ""
#~ "The following example queries grid "
#~ "coordinates and returns all documents "
#~ "within a 10 mile radius of "
#~ "longitude ``88 W`` and latitude ``30 "
#~ "N``. The example converts the distance,"
#~ " 10 miles, to radians by dividing "
#~ "by the approximate radius of the "
#~ "earth, 3959 miles:"
#~ msgstr ""

