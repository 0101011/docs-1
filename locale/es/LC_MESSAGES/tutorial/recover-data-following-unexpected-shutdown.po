# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: 2014-04-08 18:35+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:3
msgid "Recover a Standalone after an Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:10
msgid ""
"The following procedure applies to standalone :binary:`~bin.mongod` "
"instance."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:13
msgid ""
"Do not use this tutorial to recover a member of a :term:`replica set`. "
"Instead, you should either restore from a :doc:`backup </core/backups>` "
"or resync from another member of the set, as described in :doc:`/tutorial"
"/resync-replica-set-member`."
msgstr ""

#: ../source/includes/note-repair.rst:1
msgid ""
"If you are running with :term:`journaling <journal>` enabled, there is "
"almost never any need to run repair since the server can use the journal "
"files to restore the data files to a clean state automatically. However, "
"you may need to run repair in cases where you need to recover from a "
"disk-level data corruption."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:22
msgid ""
"Disk-level data corruption or missing data files can prevent "
":binary:`~bin.mongod` instance from starting, and journal files may be "
"insufficient to recover automatically:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:40
msgid ""
"In such cases, your :setting:`~storage.dbPath` contains a non-empty "
":file:`mongod.lock` file."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:43
msgid ""
"The following procedure uses :option:`mongod --repair` to recover from "
"these cases:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:48
msgid ""
"Only use :option:`mongod --repair` (and the related operations "
":dbcommand:`repairDatabase` command and :method:`db.repairDatabase()` "
"method) if you have no other options. The operations remove and do not "
"save any corrupt data during the repair process."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:54
msgid "Starting in MongoDB 4.0.3, for WiredTiger, :option:`mongod --repair`:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:56
#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:64
msgid "Rebuilds all indexes."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:58
#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:66
msgid "Discards corrupt data."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:60
msgid "Creates empty/stub files for missing data/metadata files."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:62
msgid "For MMAPv1, :option:`mongod --repair`:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:71
msgid "Procedure"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:75
msgid ""
"Run the repair operation as the same user that normally runs the "
":binary:`~bin.mongod` process to avoid changing the permissions of the "
"MongoDB data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:8
msgid "Create a backup of the data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:10
#: ../source/includes/steps/recover-data-with-repairpath.rst:22
msgid ""
"Create a backup copy of the data files in the :option:`--dbpath <mongod "
"--dbpath>`."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:20
msgid "Step 1: Create a backup of the data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:32
msgid "Start :binary:`~bin.mongod` with ``--repair``."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:34
#: ../source/includes/steps/recover-data-with-repairpath.rst:61
msgid ""
"To repair the data files, start the :binary:`~bin.mongod` instance with "
"the :option:`--repair <mongod --repair>` option."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:37
#: ../source/includes/steps/recover-data-with-repairpath.rst:64
msgid ""
"If the :binary:`~bin.mongod` instance uses :doc:`/core/mmapv1`, you can "
"include the :option:`--repairpath <mongod --repairpath>` option to "
"specify a temporary directory used during repair. For details, see "
":option:`--repairpath <mongod --repairpath>`."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:42
#: ../source/includes/steps/recover-data-with-repairpath.rst:69
msgid "Issue a command similar to the following for your standalone:"
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:50
#: ../source/includes/steps/recover-data-with-repairpath.rst:77
msgid ""
"Upon completion, the ``dbpath`` should contain the repaired data files "
"and an empty ``mongod.lock`` file. [#manual-removal]_"
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:59
msgid "Step 2: Start :binary:`~bin.mongod` with ``--repair``."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:83
msgid ""
"For WiredTiger, if the repair fails to complete for any reason, you must "
"restart the instance with the :option:`--repair <mongod --repair>` option"
" to complete the repair."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:89
msgid ""
"Generally, you should not manually remove the ``mongod.lock`` file. "
"Instead, use the above procedure to recover the database. In dire "
"situations, you can remove the file, start the database using the "
"possibly corrupt files, and attempt to recover data from the database. "
"However, it is impossible to predict the state of the database in these "
"situations."
msgstr ""

#~ msgid ""
#~ "The :doc:`/administration` documents, including "
#~ ":ref:`Replica Set Syncing <replica-set-"
#~ "syncing>`, and the documentation on the"
#~ " :setting:`repair`, :setting:`repairpath`, and "
#~ ":setting:`storage.journal.enabled` settings."
#~ msgstr ""

#~ msgid ""
#~ "To repair your data files using "
#~ "the :option:`--repairpath <mongod --repairpath>` "
#~ "option to preserve the original data "
#~ "files unmodified:"
#~ msgstr ""

#~ msgid ""
#~ "Once you confirm that the data "
#~ "files are operational you may delete "
#~ "or archive the data files in the"
#~ " ``/data/db`` directory."
#~ msgstr ""

# 8313635e34784e12b55af5161c53d7e2
#~ msgid "Recover Data after an Unexpected Shutdown"
#~ msgstr ""

# 7c665bfcfccd4ee18010b21c2bb20c67
#~ msgid ""
#~ "If MongoDB does not shutdown cleanly "
#~ "[#clean-shutdown]_ the on-disk "
#~ "representation of the data files will"
#~ " likely reflect an inconsistent state "
#~ "which could lead to data corruption. "
#~ "[#validation]_"
#~ msgstr ""

# 87068454f8304966962e735c31110ad3
#~ msgid ""
#~ "To prevent data inconsistency and "
#~ "corruption, always shut down the "
#~ "database cleanly and use the "
#~ ":ref:`durability journaling <setting-journal>`. "
#~ "MongoDB writes data to the journal, "
#~ "by default, every 100 milliseconds, such"
#~ " that MongoDB can always recover to"
#~ " a consistent state even in the "
#~ "case of an unclean shutdown due to"
#~ " power loss or other system failure."
#~ msgstr ""

# c0c027b0706b400e836f85225adaee41
#~ msgid ""
#~ "If you are *not* running as part"
#~ " of a :term:`replica set` **and** do"
#~ " *not* have journaling enabled, use "
#~ "the following procedure to recover data"
#~ " that may be in an inconsistent "
#~ "state. If you are running as part"
#~ " of a replica set, you should "
#~ "*always* restore from a backup or "
#~ "restart the :program:`mongod` instance with"
#~ " an empty :setting:`~storage.dbPath` and "
#~ "allow MongoDB to perform an initial "
#~ "sync to restore the data."
#~ msgstr ""

# a1275488b6174840a98e55dd2f90f9df
#~ msgid ""
#~ "To ensure a clean shut down, use"
#~ " the :method:`db.shutdownServer()` from the "
#~ ":program:`mongo` shell, your control script,"
#~ " the :option:`mongod --shutdown` option on"
#~ " Linux systems, \"Control-C\" when running"
#~ " :program:`mongod` in interactive mode, or"
#~ " ``kill $(pidof mongod)`` or ``kill "
#~ "-2 $(pidof mongod)``."
#~ msgstr ""

# ba47d0fb514f4fd3af4c169b3ed8af2e
#~ msgid ""
#~ "You can also use the "
#~ ":method:`db.collection.validate()` method to test"
#~ " the integrity of a single "
#~ "collection. However, this process is "
#~ "time consuming, and without journaling "
#~ "you can safely assume that the "
#~ "data is in an invalid state and"
#~ " you should either run the repair "
#~ "operation or resync from an intact "
#~ "member of the replica set."
#~ msgstr ""

# c9d202c5be064b0bb2681d35e1501a21
#~ msgid "Process"
#~ msgstr ""

# a112f885f4bf4b9f806bd6d01ff4c386
#~ msgid "Indications"
#~ msgstr ""

# eb547b190e3f4c79aba0e60234d3d1b7
#~ msgid ""
#~ "When you are aware of a "
#~ ":program:`mongod` instance running without "
#~ "journaling that stops unexpectedly **and** "
#~ "you're not running with replication, you"
#~ " should always run the repair "
#~ "operation before starting MongoDB again. "
#~ "If you're using replication, then "
#~ "restore from a backup and allow "
#~ "replication to perform an initial "
#~ ":ref:`sync <replica-set-syncing>` to "
#~ "restore data."
#~ msgstr ""

# 961cbc75da164d769f992f8027400bf3
#~ msgid ""
#~ "If the ``mongod.lock`` file in the "
#~ "data directory specified by "
#~ ":setting:`~storage.dbPath`, ``/data/db`` by default,"
#~ " is *not* a zero-byte file, "
#~ "then :program:`mongod` will refuse to "
#~ "start, and you will find a message"
#~ " that contains the following line in"
#~ " your MongoDB log our output:"
#~ msgstr ""

# d84d8a0c8f294b4590854dbf896decec
#~ msgid ""
#~ "This indicates that you need to "
#~ "run :program:`mongod` with the "
#~ ":option:`--repair <mongod --repair>` option. "
#~ "If you run repair when the "
#~ "``mongodb.lock`` file exists in your "
#~ ":setting:`~storage.dbPath`, or the optional "
#~ ":option:`--repairpath <mongod --repairpath>`, you"
#~ " will see a message that contains "
#~ "the following line:"
#~ msgstr ""

# 7feda3bc84b3464b92c657ba51c6d3b9
#~ msgid ""
#~ "If you see this message, as a "
#~ "last resort you may remove the "
#~ "lockfile **and** run the repair "
#~ "operation before starting the database "
#~ "normally, as in the following procedure:"
#~ msgstr ""

# 9fcb79f3e4744377983b0baa557cbf44
#~ msgid "Overview"
#~ msgstr ""

# 309becc49b39497fbb2bfceb298cafa5
#~ msgid "Recovering a member of a replica set."
#~ msgstr ""

# 748dd53dde38411b8ad8c9eb1afd91f2
#~ msgid ""
#~ "Do not use this procedure to "
#~ "recover a member of a :term:`replica "
#~ "set`. Instead you should either restore"
#~ " from a :doc:`backup </core/backups>` or"
#~ " perform an initial sync using data"
#~ " from an intact member of the "
#~ "set, as described in :doc:`/tutorial"
#~ "/resync-replica-set-member`."
#~ msgstr ""

# 1b4c33e2bda349da8bc4bd3558a7c0d2
#~ msgid ""
#~ "There are two processes to repair "
#~ "data files that result from an "
#~ "unexpected shutdown:"
#~ msgstr ""

# 73b7dba3bf254e61ae91269fcb207720
#~ msgid ""
#~ "Use the :option:`--repair <mongod --repair>`"
#~ " option in conjunction with the "
#~ ":option:`--repairpath <mongod --repairpath>` option."
#~ " :program:`mongod` will read the existing"
#~ " data files, and write the existing"
#~ " data to new data files. This "
#~ "does not modify or alter the "
#~ "existing data files."
#~ msgstr ""

# d6095d5a4b9241468dec617fb329f9a7
#~ msgid ""
#~ "You do not need to remove the "
#~ "``mongod.lock`` file before using this "
#~ "procedure."
#~ msgstr ""

# b818824db181437a99bbb53e1a7967d5
#~ msgid ""
#~ "Use the :option:`--repair <mongod --repair>`"
#~ " option. :program:`mongod` will read the"
#~ " existing data files, write the "
#~ "existing data to new files and "
#~ "replace the existing, possibly corrupt, "
#~ "files with new files."
#~ msgstr ""

# e53bfe56d83d4a84b05e50e849ce3e0b
#~ msgid "You must remove the ``mongod.lock`` file before using this procedure."
#~ msgstr ""

# ad54fdca85fc44bebadc1dc540d3a4b1
#~ msgid ""
#~ ":option:`--repair <mongod --repair>` functionality"
#~ " is also available in the shell "
#~ "with the :method:`db.repairDatabase()` helper "
#~ "for the :dbcommand:`repairDatabase` command."
#~ msgstr ""

# f11e682b8a4a44b7ac8c4e200c5e7753
#~ msgid "Procedures"
#~ msgstr ""

# 1cbfb1bd43d84e479c98aa53f6f13acf
# 086bcf90ec8a45cd81d52530e90d52e6
#~ msgid ""
#~ "Start :program:`mongod` using :option:`--repair "
#~ "<mongod --repair>` to read the existing"
#~ " data files."
#~ msgstr ""

# 4612839cb6c443cbbf9e51806e92fc57
#~ msgid ""
#~ "When this completes, the new repaired"
#~ " data files will be in the "
#~ "``/data/db0`` directory."
#~ msgstr ""

# c00c1df4cacd41689af01fddebe2c971
#~ msgid ""
#~ "Start :program:`mongod` using the following"
#~ " invocation to point the "
#~ ":setting:`~storage.dbPath` at ``/data/db0``:"
#~ msgstr ""

# b128010f28e346b2bd8f3cc7ee2e413d
#~ msgid ""
#~ "To repair your data files without "
#~ "preserving the original files, do not"
#~ " use the :option:`--repairpath <mongod "
#~ "--repairpath>` option, as in the "
#~ "following procedure:"
#~ msgstr ""

# f8c2ca7071f14e658aca3f98538553ca
#~ msgid "Remove the stale lock file:"
#~ msgstr ""

# d11178426a98411ba53f4232d1be8910
#~ msgid ""
#~ "Replace ``/data/db`` with your "
#~ ":setting:`~storage.dbPath` where your MongoDB "
#~ "instance's data files reside."
#~ msgstr ""

# 8e92afc1030344b6b3c046f7272fa689
#~ msgid ""
#~ "After you remove the ``mongod.lock`` "
#~ "file you *must* run the "
#~ ":option:`--repair <mongod --repair>` process "
#~ "before using your database."
#~ msgstr ""

# c18b405de8b8489cbb049a0d69a09e48
#~ msgid ""
#~ "When this completes, the repaired data"
#~ " files will replace the original data"
#~ " files in the ``/data/db`` directory."
#~ msgstr ""

# 261992bf2f254e50af7fadc3443f3b74
#~ msgid ""
#~ "Start :program:`mongod` using the following"
#~ " invocation to point the "
#~ ":setting:`~storage.dbPath` at ``/data/db``:"
#~ msgstr ""

# f2ede416967347c68f7ec5b764a8ec3a
#~ msgid "``mongod.lock``"
#~ msgstr ""

# 8da7e383f314493aa4e6f2cb81798bf8
#~ msgid ""
#~ "In normal operation, you should "
#~ "**never** remove the ``mongod.lock`` file "
#~ "and start :program:`mongod`. Instead consider"
#~ " the one of the above methods "
#~ "to recover the database and remove "
#~ "the lock files. In dire situations "
#~ "you can remove the lockfile, and "
#~ "start the database using the possibly"
#~ " corrupt files, and attempt to "
#~ "recover data from the database; however,"
#~ " it's impossible to predict the state"
#~ " of the database in these situations."
#~ msgstr ""

# c9cc083377274405922c7dbf0e679a4c
#~ msgid ""
#~ "If you are not running with "
#~ "journaling, and your database shuts down"
#~ " unexpectedly for *any* reason, you "
#~ "should always proceed *as if* your "
#~ "database is in an inconsistent and "
#~ "likely corrupt state. If at all "
#~ "possible restore from :doc:`backup "
#~ "</core/backups>` or, if running as a "
#~ ":term:`replica set`, restore by performing "
#~ "an initial sync using data from an"
#~ " intact member of the set, as "
#~ "described in :doc:`/tutorial/resync-replica-"
#~ "set-member`."
#~ msgstr ""

#~ msgid ""
#~ "The :doc:`/administration` documents, including "
#~ ":ref:`Replica Set Syncing <replica-set-"
#~ "syncing>`, and the documentation on the"
#~ " :option:`--repair <mongod --repair>` "
#~ ":setting:`~storage.repairPath` and "
#~ ":setting:`storage.journal.enabled` settings."
#~ msgstr ""

#~ msgid ""
#~ "Always Run :program:`mongod` as the same"
#~ " user to avoid changing the "
#~ "permissions of the MongoDB data files."
#~ msgstr ""

#~ msgid ""
#~ "To repair your data files using "
#~ "the :option:`--repairpath <mongod --repairpath>` "
#~ "option to preserve the original data "
#~ "files unmodified."
#~ msgstr ""

#~ msgid ""
#~ "Once you confirm that the data "
#~ "files are operational you may delete "
#~ "or archive the old data files in"
#~ " the ``/data/db`` directory. You may "
#~ "also wish to move the repaired "
#~ "files to the old database location "
#~ "or update the :setting:`~storage.dbPath` to"
#~ " indicate the new location."
#~ msgstr ""

