# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: 2013-12-16 22:47+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:3
msgid "Calculate Distance Using Spherical Geometry"
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:2
msgid "For spherical queries, use the ``2dsphere`` index result."
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:4
msgid ""
"The use of ``2d`` index for spherical queries may lead to incorrect "
"results, such as the use of the ``2d`` index for spherical queries that "
"wrap around the poles."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:17
msgid ""
"The ``2d`` index supports queries that calculate distances on a Euclidean"
" plane (flat surface). The index also supports the following query "
"operators and command that calculate distances using spherical geometry:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:22
msgid ""
"While basic queries using spherical distance are supported by the ``2d`` "
"index, consider moving to a ``2dsphere`` index if your data is primarily "
"longitude and latitude."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:27
msgid ":query:`$nearSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:29
msgid ":query:`$centerSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:31
msgid ":query:`$near`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:33
msgid ":pipeline:`$geoNear` pipeline stage with the ``spherical: true`` option"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:35
msgid ""
":dbcommand:`geoNear` command (Deprecated in MongoDB 4.0) with the "
"``spherical: true`` option."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:38
msgid ""
"The aforementioned operations use radians for distance. Other spherical "
"query operators do not, such as :query:`$geoWithin`."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:41
msgid ""
"For spherical query operators to function properly, you must convert "
"distances to radians, and convert from radians to the distances units "
"used by your application."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:45
msgid "To convert:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:47
msgid ""
"*distance to radians*: divide the distance by the radius of the sphere "
"(e.g. the Earth) in the same units as the distance measurement."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:51
msgid ""
"*radians to distance*: multiply the radian measure by the radius of the "
"sphere (e.g. the Earth) in the units system that you want to convert the "
"distance to."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:55
msgid ""
"The equatorial radius of the Earth is approximately ``3,963.2`` miles or "
"``6,378.1`` kilometers."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:58
msgid ""
"The following query would return documents from the ``places`` collection"
" within the circle described by the center ``[ -74, 40.74 ]`` with a "
"radius of ``100`` miles:"
msgstr ""

#: ../source/includes/extracts/geospatial-long-lat-values.rst:1
msgid ""
"If specifying latitude and longitude coordinates, list the **longitude** "
"first and then **latitude**:"
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:1
msgid "Valid longitude values are between ``-180`` and ``180``, both inclusive."
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:4
msgid "Valid latitude values are between ``-90`` and ``90`` (both inclusive)."
msgstr ""

# 8364710e14bb4924ab1e174b7bda1fc0
#~ msgid ":dbcommand:`geoNear` command with the ``{ spherical: true }`` option."
#~ msgstr ""

# 24e6d4541ee14644a7bf3241f20dab15
#~ msgid "These three queries use radians for distance. Other query types do not."
#~ msgstr ""

# 18aa50448bfe4ee9bc4d87fa47e6c966
#~ msgid ""
#~ "The radius of the Earth is "
#~ "approximately ``3,959`` miles or ``6,371`` "
#~ "kilometers."
#~ msgstr ""

# a9a5f8c5da1e444e951894c692f22f11
#~ msgid ""
#~ "You may also use the "
#~ "``distanceMultiplier`` option to the "
#~ ":dbcommand:`geoNear` to convert radians in "
#~ "the :program:`mongod` process, rather than "
#~ "in your application code. See "
#~ ":ref:`distance multiplier <geospatial-indexes-"
#~ "distance-multiplier>`."
#~ msgstr ""

# 702436e93f2749cd81309da7dd950821
#~ msgid ""
#~ "The following spherical query, returns "
#~ "all documents in the collection "
#~ "``places`` within ``100`` miles from the"
#~ " point ``[ -74, 40.74 ]``."
#~ msgstr ""

# 5c082a21f3724ccbaa7cabce77f28a6f
#~ msgid "The output of the above command would be:"
#~ msgstr ""

# 2dfff4a00a4140128c8bea7e1dba7353
#~ msgid ""
#~ "Spherical queries that wrap around the"
#~ " poles or at the transition from "
#~ "``-180`` to ``180`` longitude raise an"
#~ " error."
#~ msgstr ""

# 59f0bbe749e0418fa45e4f0800ba0956
#~ msgid ""
#~ "While the default Earth-like bounds "
#~ "for geospatial indexes are between "
#~ "``-180`` inclusive, and ``180``, valid "
#~ "values for latitude are between ``-90``"
#~ " and ``90``."
#~ msgstr ""

# 1049e1af3eaa481f8500a7a9721d7ecd
#~ msgid "Distance Multiplier"
#~ msgstr ""

# 1dcdaf0718c24137ae90d617dd9bd284
#~ msgid ""
#~ "The ``distanceMultiplier`` option of the "
#~ ":dbcommand:`geoNear` command returns distances "
#~ "only after multiplying the results by"
#~ " an assigned value. This allows "
#~ "MongoDB to return converted values, and"
#~ " removes the requirement to convert "
#~ "units in application logic."
#~ msgstr ""

# 7c1b677e78164131afd5d382ede264d8
#~ msgid ""
#~ "Using ``distanceMultiplier`` in spherical "
#~ "queries provides results from the "
#~ ":dbcommand:`geoNear` command that do not "
#~ "need radian-to-distance conversion. The"
#~ " following example uses ``distanceMultiplier``"
#~ " in the :dbcommand:`geoNear` command with"
#~ " a :doc:`spherical </tutorial/calculate-"
#~ "distances-using-spherical-geometry-with-"
#~ "2d-geospatial-indexes>` example:"
#~ msgstr ""

# c6ac10483a2444d2985bad065c00efb9
#~ msgid "The output of the above operation would resemble the following:"
#~ msgstr ""

