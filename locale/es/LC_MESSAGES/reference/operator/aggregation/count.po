# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/count.txt:3
msgid "$count (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:20
msgid ""
"Passes a document to the next stage that contains a count of the number "
"of documents input to the stage."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:23
msgid ":pipeline:`$count` has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:29
msgid ""
"``<string>`` is the name of the output field which has the count as its "
"value. ``<string>`` must be a non-empty string, must not start with ``$``"
" and must not contain the ``.`` character."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:35
msgid ":method:`db.collection.countDocuments()`"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:36
msgid ":pipeline:`$collStats`"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:37
msgid ":method:`db.collection.estimatedDocumentCount()`"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:38
msgid ":dbcommand:`count`"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:39
msgid ":method:`db.collection.count()`"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:42
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:44
msgid ""
"The :pipeline:`$count` stage is equivalent to the following "
":pipeline:`$group` + :pipeline:`$project` sequence:"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:54
msgid ""
"where ``myCount`` would be the output field that contains the count. You "
"can specify another name for the output field."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:57
msgid ""
":method:`db.collection.countDocuments()` which wraps the "
":pipeline:`$group` aggregation stage with a :group:`$sum` expression."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:61
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:63
msgid "A collection named ``scores`` has the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:74
msgid "The following aggregation operation has two stages:"
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:76
msgid ""
"The :expression:`$match` stage excludes documents that have a ``score`` "
"value of less than or equal to ``80`` to pass along the documents with "
"``score`` greater than ``80`` to the next stage."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:81
msgid ""
"The ``$count`` stage returns a count of the remaining documents in the "
"aggregation pipeline and assigns the value to a field called "
"``passing_scores``."
msgstr ""

#: ../source/reference/operator/aggregation/count.txt:102
msgid "The operation returns the following results:"
msgstr ""

