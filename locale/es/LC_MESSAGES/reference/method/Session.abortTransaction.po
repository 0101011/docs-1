# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/Session.abortTransaction.txt:3
msgid "Session.abortTransaction()"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:20
msgid ":doc:`/core/transactions` are available for replica sets."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:22
msgid ""
"Terminates the :doc:`multi-document transaction </core/transactions>` and"
" rolls back any data changes made by the operations within the "
"transaction. That is, the transaction ends without saving any of the "
"changes made by the operations in the transaction."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:29
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:32
msgid "Atomicity"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:34
msgid ""
"When a transaction aborts, all data changes made by the writes in the "
"transaction are discarded without ever becoming visible and the "
"transaction ends."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:39
msgid "Security"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:41
msgid ""
"If running with :doc:`auditing </core/auditing>`, operations in an "
"aborted transaction are still audited."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:45
msgid "Retryable"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:47
msgid ""
"If the abort operation encounters an error, MongoDB drivers retry the "
"abort operation a single time regardless of whether "
":urioption:`retryWrites` is set to ``true``. For more information, see "
":ref:`transactions-retry`."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:53
msgid "Example"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:55
msgid ""
"Consider a scenario where as changes are made to an employee's record in "
"the ``hr`` database, you want to ensure that the ``events`` collection in"
" the ``reporting`` database are in sync with the ``hr`` changes and vice "
"versa. That is, you want to ensure that these writes are done as a single"
" transaction, such that either both operations succeed or fail."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:61
msgid ""
"The ``employees`` collection in the ``hr`` database has the following "
"documents:"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:70
msgid "The ``employees`` collection has a unique index on the ``employee`` field:"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:76
msgid ""
"The ``events`` collection in the ``reporting`` database has the following"
" documents:"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:85
msgid ""
"The following example opens a transaction, attempts to add a record to "
"the ``events`` collection and add a document to the ``employees`` "
"collection. If the operation encounters an error in either operations or "
"in committing the transaction, the session aborts the transaction."
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:182
msgid ":method:`Session.startTransaction()`"
msgstr ""

#: ../source/reference/method/Session.abortTransaction.txt:184
msgid ":method:`Session.commitTransaction()`"
msgstr ""

