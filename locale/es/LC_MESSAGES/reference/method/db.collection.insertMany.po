# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.insertMany.txt:3
msgid "db.collection.insertMany()"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:20
msgid "Inserts multiple documents into a collection."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:22
msgid "The :method:`~db.collection.insertMany()` method has the following syntax:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:13
msgid "``document``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:15
#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:23
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:17
#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:46
msgid "An array of documents to insert into the collection."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:21
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:25
#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:52
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/extracts/transactions-operations-write-concern.rst:2
msgid ""
"Do not explicitly set the write concern for the operation if run in a "
"transaction. To use write concern with transactions, see :ref"
":`transaction-options`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:32
msgid "``ordered``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:34
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:36
#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst:61
msgid ""
"Optional. A boolean specifying whether the :binary:`~bin.mongod` instance"
" should perform an ordered or unordered insert. Defaults to ``true``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst
msgid "param document document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insertMany-param.rst
msgid "param boolean ordered"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:37
msgid ""
"A document containing:  - A boolean ``acknowledged`` as ``true`` if the "
"operation ran with   :term:`write concern` or ``false`` if write concern "
"was disabled  - An array of ``_id`` for each successfully inserted "
"documents"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:39
msgid "A document containing:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:41
msgid ""
"A boolean ``acknowledged`` as ``true`` if the operation ran with "
":term:`write concern` or ``false`` if write concern was disabled"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:44
msgid "An array of ``_id`` for each successfully inserted documents"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:47
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:49
msgid ""
"Given an array of documents, :method:`~db.collection.insertMany()` "
"inserts each document in the array into the collection."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:53
msgid "Execution of Operations"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:55
msgid "By default documents are inserted in order."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:57
msgid ""
"If ``ordered`` is set to false, documents are inserted in an unordered "
"format and may be reordered by :binary:`~bin.mongod` to increase "
"performance. Applications should not depend on ordering of inserts if "
"using an unordered :method:`~db.collection.insertMany()`."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:1
msgid ""
"The number of operations in each group cannot exceed the value of the "
":limit:`maxWriteBatchSize <Write Command Batch Limit Size>` of the "
"database. As of MongoDB 3.6, this value is ``100,000``. This value is "
"shown in the :data:`isMaster.maxWriteBatchSize` field."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:6
msgid ""
"This limit prevents issues with oversized error messages. If a group "
"exceeds this :limit:`limit<Write Command Operation Limit Size>`, the "
"client driver divides the group into smaller groups with counts less than"
" or equal to the value of the limit. For example, with the "
"``maxWriteBatchSize`` value of ``100,000``, if the queue consists of "
"``200,000`` operations, the driver creates 2 groups, each with "
"``100,000`` operations."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:16
msgid ""
"The driver only divides the group into smaller groups when using the "
"high-level API. If using :doc:`db.runCommand() "
"</reference/method/db.runCommand/>` directly (for example, when writing a"
" driver), MongoDB throws an error when attempting to execute a write "
"batch which exceeds the limit."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:22
msgid ""
"Starting in MongoDB 3.6, once the error report for a single batch grows "
"too large, MongoDB truncates all remaining error messages to the empty "
"string. Currently, begins once there are at least 2 error messages with "
"total size greater than ``1MB``."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:27
msgid ""
"The sizes and grouping mechanics are internal performance details and are"
" subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list since with an ordered "
"list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:68
msgid "Collection Creation"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:70
msgid ""
"If the collection does not exist, then "
":method:`~db.collection.insertMany()` creates the collection on "
"successful write."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:74
msgid "``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:76
msgid ""
"If the document does not specify an :term:`_id` field, then "
":binary:`~bin.mongod` adds the ``_id`` field and assign a unique "
":method:`ObjectId` for the document. Most drivers create an ObjectId and "
"insert the ``_id`` field, but the :binary:`~bin.mongod` will create and "
"populate the ``_id`` if the driver or application does not."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:83
msgid ""
"If the document contains an ``_id`` field, the ``_id`` value must be "
"unique within the collection to avoid duplicate key error."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:87
msgid "Explainability"
msgstr ""

#: ../source/includes/fact-bulkwrite-explainable.rst:1
msgid "|write-method| is not compatible with :method:`db.collection.explain()`."
msgstr ""

#: ../source/includes/fact-bulkwrite-explainable.rst:6
msgid "Use |old-write-method| instead."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:99
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:101
msgid "Inserts throw a ``BulkWriteError`` exception."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:103
msgid ""
"Excluding :doc:`/reference/write-concern` errors, ordered operations stop"
" after an error, while unordered operations continue to process any "
"remaining write operations in the queue."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:107
msgid ""
"Write concern errors are displayed in the ``writeConcernErrors`` field, "
"while all other errors are displayed in the ``writeErrors`` field. If an "
"error is encountered, the number of successful write operations are "
"displayed instead of a list of inserted _ids. Ordered operations display "
"the single error encountered while unordered operations display each "
"error in an array."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:114
msgid "Transactions"
msgstr ""

#: ../source/includes/extracts/transactions-supported-operation.rst:2
msgid ""
"|operation| supports :doc:`multi-document transactions "
"</core/transactions>`."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:118
msgid ""
"The collection must already exist. An insert operation that would result "
"in the creation of a new collection are not allowed in a transaction."
msgstr ""

#: ../source/includes/extracts/transactions-usage.rst:3
msgid ""
"In most cases, multi-document transaction incurs a greater performance "
"cost over single document writes, and the availability of multi-document "
"transaction should not be a replacement for effective schema design. For "
"many scenarios, the :ref:`denormalized data model (embedded documents and"
" arrays) <data-modeling-embedding>` will continue to be optimal for your "
"data and use cases. That is, for many scenarios, modeling your data "
"appropriately will minimize the need for multi-document transactions."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:132
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:134
msgid "The following examples insert documents into the ``products`` collection."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:138
msgid "Insert Several Document without Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:140
msgid ""
"The following example uses :method:`db.collection.insertMany()` to insert"
" documents that do not contain the ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:155
#: ../source/reference/method/db.collection.insertMany.txt:193
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:168
msgid ""
"Because the documents did not include ``_id``, :binary:`~bin.mongod` "
"creates and adds the ``_id`` field for each document and assigns it a "
"unique :method:`ObjectId` value."
msgstr ""

#: ../source/includes/fact-object-id-may-differ.rst:1
msgid ""
"The ``ObjectId`` values are specific to the machine and time when the "
"operation is run. As such, your values may differ from those in the "
"example."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:175
msgid "Insert Several Document Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:177
msgid ""
"The following example/operation uses "
":method:`~db.collection.insertMany()` to insert documents that include "
"the ``_id`` field. The value of ``_id`` must be unique within the "
"collection to avoid a duplicate key error."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:199
msgid ""
"Inserting a duplicate value for any key that is part of a :term:`unique "
"index`, such as ``_id``, throws an exception. The following attempts to "
"insert a document with a ``_id`` value that already exists:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:215
msgid "Since ``_id: 13`` already exists, the following exception is thrown:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:241
msgid ""
"Note that one document was inserted: The first document of ``_id: 13`` "
"will insert successfully, but the second insert will fail. This will also"
" stop additional documents left in the queue from being inserted."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:245
msgid ""
"With ``ordered`` to ``false``, the insert operation would continue with "
"any remaining documents."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:249
msgid "Unordered Inserts"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:251
msgid ""
"The following attempts to insert multiple documents with ``_id`` field "
"and ``ordered: false``. The array of documents contains two documents "
"with duplicate ``_id`` fields."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:271
msgid "The operation throws the following exception:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:307
msgid ""
"While the document with ``item: \"medium box\"`` and ``item: \"tape\"`` "
"failed to insert due to duplicate ``_id`` values, ``nInserted`` shows "
"that the remaining 5 documents were inserted."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:314
msgid "Using Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:316
msgid ""
"Given a three member replica set, the following operation specifies a "
"``w`` of ``majority`` and ``wtimeout`` of ``100``:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:334
msgid ""
"If the primary and at least one secondary acknowledge each write "
"operation within 100 milliseconds, it returns:"
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:348
msgid ""
"If the total time required for all required nodes in the replica set to "
"acknowledge the write operation is greater than ``wtimeout``, the "
"following ``writeConcernError`` is displayed when the ``wtimeout`` period"
" has passed."
msgstr ""

#: ../source/reference/method/db.collection.insertMany.txt:353
msgid "This operation returns:"
msgstr ""

