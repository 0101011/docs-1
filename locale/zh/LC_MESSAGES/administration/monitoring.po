#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/administration/monitoring.txt:3
msgid "Monitoring for MongoDB"
msgstr ""

#: ../source/administration/monitoring.txt:13
msgid ""
"Monitoring is a critical component of all database administration. A firm "
"grasp of MongoDB's reporting will allow you to assess the state of your "
"database and maintain your deployment without crisis. Additionally, a sense "
"of MongoDB's normal operational parameters will allow you to diagnose "
"problems before they escalate to failures."
msgstr ""

#: ../source/administration/monitoring.txt:19
msgid ""
"This document presents an overview of the available monitoring utilities and"
" the reporting statistics available in MongoDB. It also introduces "
"diagnostic strategies and suggestions for monitoring replica sets and "
"sharded clusters."
msgstr ""

#: ../source/includes/fact-mms-summary.rst:2
msgid ""
"|mms-home|, a hosted service, and `Ops Manager "
"<https://www.mongodb.com/products/mongodb-enterprise-advanced?jmp=docs>`_, "
"an on-premise solution, provide monitoring, backup, and automation of "
"MongoDB instances. See the |mms-docs| and `Ops Manager documentation "
"<https://docs.opsmanager.mongodb.com?jmp=docs>`_ for more information."
msgstr ""

#: ../source/administration/monitoring.txt:28
msgid "Monitoring Strategies"
msgstr ""

#: ../source/administration/monitoring.txt:30
msgid ""
"There are three methods for collecting data about the state of a running "
"MongoDB instance:"
msgstr ""

#: ../source/administration/monitoring.txt:33
msgid ""
"First, there is a set of utilities distributed with MongoDB that provides "
"real-time reporting of database activities."
msgstr ""

#: ../source/administration/monitoring.txt:36
msgid ""
"Second, :doc:`database commands </reference/command>` return statistics "
"regarding the current database state with greater fidelity."
msgstr ""

#: ../source/administration/monitoring.txt:40
msgid ""
"Third, |mms-home|, a hosted service, and :products:`Ops Manager, an on-"
"premise solution available in MongoDB Enterprise Advanced </mongodb-"
"enterprise-advanced?jmp=docs>`, provide monitoring to collect data from "
"running MongoDB deployments as well as providing visualization and alerts "
"based on that data."
msgstr ""

#: ../source/administration/monitoring.txt:47
msgid ""
"Each strategy can help answer different questions and is useful in different"
" contexts. These methods are complementary."
msgstr ""

#: ../source/administration/monitoring.txt:51
msgid "MongoDB Reporting Tools"
msgstr ""

#: ../source/administration/monitoring.txt:53
msgid ""
"This section provides an overview of the reporting methods distributed with "
"MongoDB. It also offers examples of the kinds of questions that each method "
"is best suited to help you address."
msgstr ""

#: ../source/administration/monitoring.txt:58
msgid "Utilities"
msgstr ""

#: ../source/administration/monitoring.txt:60
msgid ""
"The MongoDB distribution includes a number of utilities that quickly return "
"statistics about instances' performance and activity. Typically, these are "
"most useful for diagnosing issues and assessing normal operation."
msgstr ""

#: ../source/administration/monitoring.txt:66
msgid "``mongostat``"
msgstr ""

#: ../source/administration/monitoring.txt:68
msgid ""
":program:`mongostat` captures and returns the counts of database operations "
"by type (e.g. insert, query, update, delete, etc.). These counts report on "
"the load distribution on the server."
msgstr ""

#: ../source/administration/monitoring.txt:72
msgid ""
"Use :program:`mongostat` to understand the distribution of operation types "
"and to inform capacity planning. See the :doc:`mongostat manual "
"</reference/program/mongostat>` for details."
msgstr ""

#: ../source/administration/monitoring.txt:77
msgid "``mongotop``"
msgstr ""

#: ../source/administration/monitoring.txt:79
msgid ""
":program:`mongotop` tracks and reports the current read and write activity "
"of a MongoDB instance, and reports these statistics on a per collection "
"basis."
msgstr ""

#: ../source/administration/monitoring.txt:83
msgid ""
"Use :program:`mongotop` to check if your database activity and use match "
"your expectations. See the :doc:`mongotop manual "
"</reference/program/mongotop>` for details."
msgstr ""

#: ../source/administration/monitoring.txt:90
msgid "HTTP Console"
msgstr ""

#: ../source/administration/monitoring.txt:94
msgid ""
"MongoDB provides a web interface that exposes diagnostic and monitoring "
"information in a simple web page. The web interface is accessible at "
"``localhost:<port>``, where the ``<port>`` number is **1000** more than the "
":program:`mongod` port ."
msgstr ""

#: ../source/administration/monitoring.txt:99
msgid ""
"For example, if a locally running :program:`mongod` is using the default "
"port ``27017``, access the HTTP console at ``http://localhost:28017``."
msgstr ""

#: ../source/administration/monitoring.txt:104
msgid "Commands"
msgstr ""

#: ../source/administration/monitoring.txt:106
msgid ""
"MongoDB includes a number of commands that report on the state of the "
"database."
msgstr ""

#: ../source/administration/monitoring.txt:109
msgid ""
"These data may provide a finer level of granularity than the utilities "
"discussed above. Consider using their output in scripts and programs to "
"develop custom alerts, or to modify the behavior of your application in "
"response to the activity of your instance. The :method:`db.currentOp` method"
" is another useful tool for identifying the database instance's in-progress "
"operations."
msgstr ""

#: ../source/administration/monitoring.txt:117
msgid "``serverStatus``"
msgstr ""

#: ../source/administration/monitoring.txt:119
msgid ""
"The :dbcommand:`serverStatus` command, or :method:`db.serverStatus()` from "
"the shell, returns a general overview of the status of the database, "
"detailing disk usage, memory use, connection, journaling, and index access. "
"The command returns quickly and does not impact MongoDB performance."
msgstr ""

#: ../source/administration/monitoring.txt:125
msgid ""
":dbcommand:`serverStatus` outputs an account of the state of a MongoDB "
"instance. This command is rarely run directly. In most cases, the data is "
"more meaningful when aggregated, as one would see with monitoring tools "
"including |mms-home| and :products:`Ops Manager </mongodb-enterprise-"
"advanced?jmp=docs>`. Nevertheless, all administrators should be familiar "
"with the data provided by :dbcommand:`serverStatus`."
msgstr ""

#: ../source/administration/monitoring.txt:134
msgid "``dbStats``"
msgstr ""

#: ../source/administration/monitoring.txt:136
msgid ""
"The :dbcommand:`dbStats` command, or :method:`db.stats()` from the shell, "
"returns a document that addresses storage use and data volumes. The "
":dbcommand:`dbStats` reflect the amount of storage used, the quantity of "
"data contained in the database, and object, collection, and index counters."
msgstr ""

#: ../source/administration/monitoring.txt:142
msgid ""
"Use this data to monitor the state and storage capacity of a specific "
"database. This output also allows you to compare use between databases and "
"to determine the average :term:`document` size in a database."
msgstr ""

#: ../source/administration/monitoring.txt:148
msgid "``collStats``"
msgstr ""

#: ../source/administration/monitoring.txt:150
msgid ""
"The :dbcommand:`collStats` or :method:`db.collection.stats()` from the shell"
" that provides statistics that resemble :dbcommand:`dbStats` on the "
"collection level, including a count of the objects in the collection, the "
"size of the collection, the amount of disk space used by the collection, and"
" information about its indexes."
msgstr ""

#: ../source/administration/monitoring.txt:157
msgid "``replSetGetStatus``"
msgstr ""

#: ../source/administration/monitoring.txt:159
msgid ""
"The :dbcommand:`replSetGetStatus` command (:method:`rs.status()` from the "
"shell) returns an overview of your replica set's status. The "
":doc:`replSetGetStatus </reference/command/replSetGetStatus>` document "
"details the state and configuration of the replica set and statistics about "
"its members."
msgstr ""

#: ../source/administration/monitoring.txt:164
msgid ""
"Use this data to ensure that replication is properly configured, and to "
"check the connections between the current host and the other members of the "
"replica set."
msgstr ""

#: ../source/administration/monitoring.txt:169
msgid "Third Party Tools"
msgstr ""

#: ../source/administration/monitoring.txt:171
msgid ""
"A number of third party monitoring tools have support for MongoDB, either "
"directly, or through their own plugins."
msgstr ""

#: ../source/administration/monitoring.txt:175
msgid "Self Hosted Monitoring Tools"
msgstr ""

#: ../source/administration/monitoring.txt:177
msgid ""
"These are monitoring tools that you must install, configure and maintain on "
"your own servers. Most are open source."
msgstr ""

#: ../source/administration/monitoring.txt:183
msgid "**Tool**"
msgstr ""

#: ../source/administration/monitoring.txt:185
msgid "**Plugin**"
msgstr ""

#: ../source/administration/monitoring.txt:187
msgid "**Description**"
msgstr ""

#: ../source/administration/monitoring.txt:189
msgid "`Ganglia <http://sourceforge.net/apps/trac/ganglia/wiki>`_"
msgstr ""

#: ../source/administration/monitoring.txt:191
msgid "`mongodb-ganglia <https://github.com/quiiver/mongodb-ganglia>`_"
msgstr ""

#: ../source/administration/monitoring.txt:193
msgid ""
"Python script to report operations per second, memory usage, btree "
"statistics, master/slave status and current connections."
msgstr ""

#: ../source/administration/monitoring.txt:196
msgid "Ganglia"
msgstr ""

#: ../source/administration/monitoring.txt:198
msgid ""
"`gmond_python_modules <https://github.com/ganglia/gmond_python_modules>`_"
msgstr ""

#: ../source/administration/monitoring.txt:200
msgid ""
"Parses output from the :dbcommand:`serverStatus` and "
":dbcommand:`replSetGetStatus` commands."
msgstr ""

#: ../source/administration/monitoring.txt:203
msgid "`Motop <https://github.com/tart/motop>`_"
msgstr ""

#: ../source/administration/monitoring.txt:204
#: ../source/administration/monitoring.txt:211
msgid "*None*"
msgstr ""

#: ../source/administration/monitoring.txt:206
msgid ""
"Realtime monitoring tool for MongoDB servers. Shows current operations "
"ordered by durations every second."
msgstr ""

#: ../source/administration/monitoring.txt:209
msgid "`mtop <https://github.com/beaufour/mtop>`_"
msgstr ""

#: ../source/administration/monitoring.txt:213
msgid "A top like tool."
msgstr ""

#: ../source/administration/monitoring.txt:215
msgid "`Munin <http://munin-monitoring.org/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:217
msgid "`mongo-munin <https://github.com/erh/mongo-munin>`_"
msgstr ""

#: ../source/administration/monitoring.txt:219
msgid "Retrieves server statistics."
msgstr ""

#: ../source/administration/monitoring.txt:221
#: ../source/administration/monitoring.txt:228
msgid "Munin"
msgstr ""

#: ../source/administration/monitoring.txt:223
msgid "`mongomon <https://github.com/pcdummy/mongomon>`_"
msgstr ""

#: ../source/administration/monitoring.txt:225
msgid ""
"Retrieves collection statistics (sizes, index sizes, and each (configured) "
"collection count for one DB)."
msgstr ""

#: ../source/administration/monitoring.txt:230
msgid ""
"`munin-plugins Ubuntu PPA <https://launchpad.net/~chris-lea/+archive/munin-"
"plugins>`_"
msgstr ""

#: ../source/administration/monitoring.txt:233
msgid "Some additional munin plugins not in the main distribution."
msgstr ""

#: ../source/administration/monitoring.txt:235
msgid "`Nagios <http://www.nagios.org/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:237
msgid ""
"`nagios-plugin-mongodb <https://github.com/mzupan/nagios-plugin-mongodb>`_"
msgstr ""

#: ../source/administration/monitoring.txt:240
msgid "A simple Nagios check script, written in Python."
msgstr ""

#: ../source/administration/monitoring.txt:242
msgid ""
"Also consider `dex <https://github.com/mongolab/dex>`_, an index and query "
"analyzing tool for MongoDB that compares MongoDB log files and indexes to "
"make indexing recommendations."
msgstr ""

#: ../source/administration/monitoring.txt:247
msgid ""
":products:`Ops Manager, an on-premise solution available in MongoDB "
"Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`."
msgstr ""

#: ../source/administration/monitoring.txt:251
msgid "Hosted (SaaS) Monitoring Tools"
msgstr ""

#: ../source/administration/monitoring.txt:253
msgid ""
"These are monitoring tools provided as a hosted service, usually through a "
"paid subscription."
msgstr ""

#: ../source/administration/monitoring.txt:259
msgid "**Name**"
msgstr ""

#: ../source/administration/monitoring.txt:261
msgid "**Notes**"
msgstr ""

#: ../source/administration/monitoring.txt:263
msgid "|mms-home|"
msgstr ""

#: ../source/administration/monitoring.txt:265
msgid ""
"|MMS| is a cloud-based suite of services for managing MongoDB deployments. "
"|MMS| provides monitoring, backup, and automation functionality. For an on-"
"premise solution, see also :products:`Ops Manager, available in MongoDB "
"Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`."
msgstr ""

#: ../source/administration/monitoring.txt:271
msgid "`Scout <http://scoutapp.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:273
msgid ""
"Several plugins, including `MongoDB Monitoring "
"<https://scoutapp.com/plugin_urls/391-mongodb-monitoring>`_, `MongoDB Slow "
"Queries <http://scoutapp.com/plugin_urls/291-mongodb-slow-queries>`_, and "
"`MongoDB Replica Set Monitoring <http://scoutapp.com/plugin_urls/2251"
"-mongodb-replica-set-monitoring>`_."
msgstr ""

#: ../source/administration/monitoring.txt:280
msgid "`Server Density <http://www.serverdensity.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:282
msgid ""
"`Dashboard for MongoDB <http://www.serverdensity.com/mongodb-monitoring/>`_,"
" MongoDB specific alerts, replication failover timeline and iPhone, iPad and"
" Android mobile apps."
msgstr ""

#: ../source/administration/monitoring.txt:287
msgid "`Application Performance Management <http://ibmserviceengage.com>`_"
msgstr ""

#: ../source/administration/monitoring.txt:289
msgid ""
"IBM has an Application Performance Management SaaS offering that includes "
"monitor for MongoDB and other applications and middleware."
msgstr ""

#: ../source/administration/monitoring.txt:309
msgid "Process Logging"
msgstr ""

#: ../source/administration/monitoring.txt:311
msgid ""
"During normal operation, :program:`mongod` and :program:`mongos` instances "
"report a live account of all server activity and operations to either "
"standard output or a log file. The following runtime settings control these "
"options."
msgstr ""

#: ../source/administration/monitoring.txt:317
msgid ""
":setting:`~systemLog.quiet`. Limits the amount of information written to the"
" log or output."
msgstr ""

#: ../source/administration/monitoring.txt:320
msgid ""
":setting:`~systemLog.verbosity`. Increases the amount of information written"
" to the log or output. You can also modify the logging verbosity during "
"runtime with the :parameter:`logLevel` parameter or the "
":method:`db.setLogLevel()` method in the shell."
msgstr ""

#: ../source/administration/monitoring.txt:325
msgid ""
":setting:`~systemLog.path`. Enables logging to a file, rather than the "
"standard output. You must specify the full path to the log file when "
"adjusting this setting."
msgstr ""

#: ../source/administration/monitoring.txt:329
msgid ""
":setting:`~systemLog.logAppend`. Adds information to a log file instead of "
"overwriting the file."
msgstr ""

#: ../source/administration/monitoring.txt:334
msgid ""
"You can specify these configuration operations as the command line arguments"
" to :doc:`mongod </reference/program/mongod>` or :doc:`mongos "
"</reference/program/mongos>`"
msgstr ""

#: ../source/administration/monitoring.txt:338
msgid "For example:"
msgstr ""

#: ../source/administration/monitoring.txt:344
msgid ""
"Starts a :program:`mongod` instance in :setting:`verbose "
"<systemLog.verbosity>` mode, appending data to the log file at "
"``/var/log/mongodb/server1.log/``."
msgstr ""

#: ../source/administration/monitoring.txt:348
msgid ""
"The following :term:`database commands <database command>` also affect "
"logging:"
msgstr ""

#: ../source/administration/monitoring.txt:351
msgid ""
":dbcommand:`getLog`. Displays recent messages from the :program:`mongod` "
"process log."
msgstr ""

#: ../source/administration/monitoring.txt:354
msgid ""
":dbcommand:`logRotate`. Rotates the log files for :program:`mongod` "
"processes only. See :doc:`/tutorial/rotate-log-files`."
msgstr ""

#: ../source/administration/monitoring.txt:358
msgid "Diagnosing Performance Issues"
msgstr ""

#: ../source/includes/intro-performance.rst:1
msgid ""
"As you develop and operate applications with MongoDB, you may want to "
"analyze the performance of the database as the application. "
":doc:`/administration/analyzing-mongodb-performance` discusses some of the "
"operational factors that can influence performance."
msgstr ""

#: ../source/administration/monitoring.txt:365
msgid "Replication and Monitoring"
msgstr ""

#: ../source/administration/monitoring.txt:367
msgid ""
"Beyond the basic monitoring requirements for any MongoDB instance, for "
"replica sets, administrators must monitor *replication lag*. \"Replication "
"lag\" refers to the amount of time that it takes to copy (i.e. replicate) a "
"write operation on the :term:`primary` to a :term:`secondary`. Some small "
"delay period may be acceptable, but two significant problems emerge as "
"replication lag grows:"
msgstr ""

#: ../source/administration/monitoring.txt:374
msgid ""
"First, operations that occurred during the period of lag are not replicated "
"to one or more secondaries. If you're using replication to ensure data "
"persistence, exceptionally long delays may impact the integrity of your data"
" set."
msgstr ""

#: ../source/administration/monitoring.txt:379
msgid ""
"Second, if the replication lag exceeds the length of the operation log "
"(:term:`oplog`) then MongoDB will have to perform an initial sync on the "
"secondary, copying all data from the :term:`primary` and rebuilding all "
"indexes. This is uncommon under normal circumstances, but if you configure "
"the oplog to be smaller than the default, the issue can arise."
msgstr ""

#: ../source/administration/monitoring.txt:388
msgid ""
"The size of the oplog is only configurable during the first run using the "
":option:`--oplogSize <mongod --oplogSize>` argument to the :program:`mongod`"
" command, or preferably, the :setting:`~replication.oplogSizeMB` setting in "
"the MongoDB configuration file. If you do not specify this on the command "
"line before running with the :option:`--replSet <mongod --replSet>` option, "
":program:`mongod` will create a default sized oplog."
msgstr ""

#: ../source/administration/monitoring.txt:396
msgid ""
"By default, the oplog is 5 percent of total available disk space on 64-bit "
"systems. For more information about changing the oplog size, see the "
":doc:`/tutorial/change-oplog-size`"
msgstr ""

#: ../source/administration/monitoring.txt:400
msgid ""
"For causes of replication lag, see :ref:`Replication Lag <replica-set-"
"replication-lag>`."
msgstr ""

#: ../source/administration/monitoring.txt:403
msgid ""
"Replication issues are most often the result of network connectivity issues "
"between members, or the result of a :term:`primary` that does not have the "
"resources to support application and replication traffic. To check the "
"status of a replica, use the :dbcommand:`replSetGetStatus` or the following "
"helper in the shell:"
msgstr ""

#: ../source/administration/monitoring.txt:413
msgid ""
"The :dbcommand:`replSetGetStatus` reference provides a more in-depth "
"overview view of this output. In general, watch the value of "
":data:`~replSetGetStatus.members.optimeDate`, and pay particular attention "
"to the time difference between the :term:`primary` and the :term:`secondary`"
" members."
msgstr ""

#: ../source/administration/monitoring.txt:420
msgid "Sharding and Monitoring"
msgstr ""

#: ../source/administration/monitoring.txt:422
msgid ""
"In most cases, the components of :term:`sharded clusters <sharded cluster>` "
"benefit from the same monitoring and analysis as all other MongoDB "
"instances. In addition, clusters require further monitoring to ensure that "
"data is effectively distributed among nodes and that sharding operations are"
" functioning appropriately."
msgstr ""

#: ../source/administration/monitoring.txt:428
msgid "See the :doc:`/core/sharding` documentation for more information."
msgstr ""

#: ../source/administration/monitoring.txt:432
msgid "Config Servers"
msgstr ""

#: ../source/administration/monitoring.txt:434
msgid ""
"The :term:`config database` maintains a map identifying which documents are "
"on which shards. The cluster updates this map as :term:`chunks <chunk>` move"
" between shards. When a configuration server becomes inaccessible, certain "
"sharding operations become unavailable, such as moving chunks and starting "
":program:`mongos` instances. However, clusters remain accessible from "
"already-running :program:`mongos` instances."
msgstr ""

#: ../source/administration/monitoring.txt:442
msgid ""
"Because inaccessible configuration servers can seriously impact the "
"availability of a sharded cluster, you should monitor your configuration "
"servers to ensure that the cluster remains well balanced and that "
":program:`mongos` instances can restart."
msgstr ""

#: ../source/administration/monitoring.txt:447
msgid ""
"|mms-home| and :products:`Ops Manager </mongodb-enterprise-"
"advanced?jmp=docs>` monitor config servers and can create notifications if a"
" config server becomes inaccessible. See the |mms-docs| and :opsmgr:`Ops "
"Manager documentation </application>` for more information."
msgstr ""

#: ../source/administration/monitoring.txt:454
msgid "Balancing and Chunk Distribution"
msgstr ""

#: ../source/administration/monitoring.txt:456
msgid ""
"The most effective :term:`sharded cluster` deployments evenly balance "
":term:`chunks <chunk>` among the shards. To facilitate this, MongoDB has a "
"background :term:`balancer` process that distributes data to ensure that "
"chunks are always optimally distributed among the :term:`shards <shard>`."
msgstr ""

#: ../source/administration/monitoring.txt:461
msgid ""
"Issue the :method:`db.printShardingStatus()` or :method:`sh.status()` "
"command to the :program:`mongos` by way of the :program:`mongo` shell. This "
"returns an overview of the entire cluster including the database name, and a"
" list of the chunks."
msgstr ""

#: ../source/administration/monitoring.txt:467
msgid "Stale Locks"
msgstr ""

#: ../source/administration/monitoring.txt:469
msgid ""
"In nearly every case, all locks used by the balancer are automatically "
"released when they become stale. However, because any long lasting lock can "
"block future balancing, it's important to ensure that all locks are "
"legitimate. To check the lock status of the database, connect to a "
":program:`mongos` instance using the :program:`mongo` shell. Issue the "
"following command sequence to switch to the ``config`` database and display "
"all outstanding locks on the shard database:"
msgstr ""

#: ../source/administration/monitoring.txt:482
msgid ""
"For active deployments, the above query can provide insights. The balancing "
"process, which originates on a randomly selected :program:`mongos`, takes a "
"special \"balancer\" lock that prevents other balancing activity from "
"transpiring. Use the following command, also to the ``config`` database, to "
"check the status of the \"balancer\" lock."
msgstr ""

#: ../source/administration/monitoring.txt:493
msgid ""
"If this lock exists, make sure that the balancer process is actively using "
"this lock."
msgstr ""

#: ../source/includes/extracts/additional-resources-monitoring.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-monitoring.rst:6
msgid ""
"`MongoDB Production Readiness Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

#: ../source/administration/monitoring.txt:0
msgid "On this page"
msgstr ""

#: ../source/includes/fact-deprecated-http-interface.rst:3
msgid "HTTP interface for MongoDB"
msgstr ""

#: ../source/administration/monitoring.txt:292
msgid "`New Relic <http://newrelic.com/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:294
msgid ""
"New Relic offers full support for application performance management. In "
"addition, New Relic Plugins and Insights enable you to view monitoring "
"metrics from Cloud Manager in New Relic."
msgstr ""

#: ../source/administration/monitoring.txt:298
msgid "`Datadog <https://www.datadoghq.com/>`_"
msgstr ""

#: ../source/administration/monitoring.txt:300
msgid ""
"`Infrastructure monitoring "
"<http://docs.datadoghq.com/integrations/mongodb/>`_ to visualize the "
"performance of your MongoDB deployments."
msgstr ""
