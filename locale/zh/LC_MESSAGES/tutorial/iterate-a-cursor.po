#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/iterate-a-cursor.txt:5
msgid "Iterate a Cursor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:26
msgid "Manually Iterate the Cursor"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:28
msgid ""
"In the :program:`mongo` shell, when you assign the cursor returned from the "
":method:`find() <db.collection.find()>` method to a variable using the "
"``var`` keyword, the cursor does not automatically iterate."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:32
msgid ""
"You can call the cursor variable in the shell to iterate up to 20 times "
"[#set-shell-batch-size]_ and print the matching documents, as in the "
"following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:42
msgid ""
"You can also use the cursor method :method:`next() <cursor.next()>` to "
"access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:53
msgid ""
"As an alternative print operation, consider the ``printjson()`` helper "
"method to replace ``print(tojson())``:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:64
msgid ""
"You can use the cursor method :method:`forEach() <cursor.forEach()>` to "
"iterate the cursor and access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:74
msgid ""
"See :ref:`JavaScript cursor methods <js-query-cursor-methods>` and your "
":doc:`driver </applications/drivers>` documentation for more information on "
"cursor methods."
msgstr ""

#: ../source/includes/footnote-set-shell-batch-size.rst:1
msgid ""
"You can use the ``DBQuery.shellBatchSize`` to change the number of iteration"
" from the default value ``20``. See :ref:`mongo-shell-executing-queries` for"
" more information."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:81
msgid "Iterator Index"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:83
msgid ""
"In the :program:`mongo` shell, you can use the :method:`~cursor.toArray()` "
"method to iterate the cursor and return the documents in an array, as in the"
" following:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:93
msgid ""
"The :method:`~cursor.toArray()` method loads into RAM all documents returned"
" by the cursor; the :method:`~cursor.toArray()` method exhausts the cursor."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:97
msgid ""
"Additionally, some :doc:`drivers </applications/drivers>` provide access to "
"the documents by using an index on the cursor (i.e. ``cursor[index]``). This"
" is a shortcut for first calling the :method:`~cursor.toArray()` method and "
"then using an index on the resulting array."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:103
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:0
msgid "On this page"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:15
msgid ""
"The :method:`db.collection.find()` method returns a cursor. To access the "
"documents, you need to iterate the cursor. However, in the :program:`mongo` "
"shell, if the returned cursor is not assigned to a variable using the "
"``var`` keyword, then the cursor is automatically iterated up to 20 times "
"[#set-shell-batch-size]_ to print up to the first 20 documents in the "
"results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:22
msgid ""
"The following examples describe ways to manually iterate the cursor to "
"access the documents or to use the iterator index."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:110
msgid "The ``myCursor[1]`` is equivalent to the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:119
msgid "Cursor Behaviors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:122
msgid "Closure of Inactive Cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:124
msgid ""
"By default, the server will automatically close the cursor after 10 minutes "
"of inactivity, or if client has exhausted the cursor. To override this "
"behavior in the :program:`mongo` shell, you can use the "
":method:`cursor.noCursorTimeout()` method:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:133
msgid ""
"After setting the ``noCursorTimeout`` option, you must either close the "
"cursor manually with :method:`cursor.close()` or by exhausting the cursor's "
"results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:136
msgid ""
"See your :doc:`driver </applications/drivers>` documentation for information"
" on setting the ``noCursorTimeout`` option."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:142
msgid "Cursor Isolation"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:144
msgid ""
"As a cursor returns documents, other operations may interleave with the "
"query. For the :doc:`MMAPv1 </core/mmapv1>` storage engine, intervening "
"write operations on a document may result in a cursor that returns a "
"document more than once if that document has changed. To handle this "
"situation, see the information on :ref:`snapshot mode <faq-developers-"
"isolate-cursors>`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:154
msgid "Cursor Batches"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:156
msgid ""
"The MongoDB server returns the query results in batches. Batch size will not"
" exceed the :ref:`maximum BSON document size <limit-bson-document-size>`. "
"For most queries, the *first* batch returns 101 documents or just enough "
"documents to exceed 1 megabyte. Subsequent batch size is 4 megabytes. To "
"override the default size of the batch, see :method:`~cursor.batchSize()` "
"and :method:`~cursor.limit()`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:164
msgid ""
"For queries that include a sort operation *without* an index, the server "
"must load all the documents in memory to perform the sort before returning "
"any results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:168
msgid ""
"As you iterate through the cursor and reach the end of the returned batch, "
"if there are more results, :method:`cursor.next()` will perform a "
":data:`getmore operation <currentOp.op>` to retrieve the next batch. To see "
"how many documents remain in the batch as you iterate the cursor, you can "
"use the :method:`~cursor.objsLeftInBatch()` method, as in the following "
"example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:184
msgid "Cursor Information"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:186
msgid ""
"The :method:`db.serverStatus()` method returns a document that includes a "
":serverstatus:`metrics` field. The :serverstatus:`metrics` field contains a "
":serverstatus:`metrics.cursor` field with the following information:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:192
msgid "number of timed out cursors since the last server restart"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:194
msgid ""
"number of open cursors with the option :data:`DBQuery.Option.noTimeout` set "
"to prevent timeout after a period of inactivity"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:198
msgid "number of \"pinned\" open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:200
msgid "total number of open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:202
msgid ""
"Consider the following example which calls the :method:`db.serverStatus()` "
"method and accesses the ``metrics`` field from the results and then the "
"``cursor`` field from the ``metrics`` field:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:211
msgid "The result is the following document:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:224
msgid ":method:`db.serverStatus()`"
msgstr ""

#~ msgid ""
#~ "The :method:`db.collection.find()` method returns a cursor. To access the "
#~ "documents, you need to iterate the cursor. However, in the :program:`mongo` "
#~ "shell, if the returned cursor is not assigned to a variable using the "
#~ "``var`` keyword, then the cursor is automatically iterated up to 20 times to"
#~ " print up to the first 20 documents in the results. The following describes "
#~ "ways to manually iterate the cursor to access the documents or to use the "
#~ "iterator index."
#~ msgstr ""

#~ msgid "The ``myCursor[3]`` is equivalent to the following example:"
#~ msgstr ""
