#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:02-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.repairDatabase.txt:3
msgid "db.repairDatabase()"
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:15
msgid ""
":method:`db.repairDatabase()` provides a wrapper around the database "
"command :dbcommand:`repairDatabase`. See :dbcommand:`repairDatabase` for "
"full documentation."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:20
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:24
msgid ""
"Before using :method:`db.repairDatabase()`, make a backup copy of the "
"files in the dbpath directory."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:27
msgid ""
"If you are running with :term:`journaling <journal>` enabled, there is "
"almost never any need to run :method:`db.repairDatabase()` after an "
"unclean shutdown since the server can use the journal files to restore "
"the data files to a clean state automatically. However, you may need to "
"run :method:`db.repairDatabase()` in cases where you need to recover from"
" a disk-level data corruption."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:35
msgid ""
"Avoid running :method:`db.repairDatabase()` against a replica set. If you"
" are trying to repair a :term:`replica set` member, and you have access "
"to an intact copy of your data (e.g. a recent backup or an intact member "
"of the :term:`replica set`), you should restore from that intact copy "
"(see :doc:`/tutorial/resync-replica-set-member`), and **not** use "
":method:`db.repairDatabase()`."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:43
msgid ""
"You should only use the :method:`db.repairDatabase()` method (and related"
" :dbcommand:`repairDatabase` command and the :option:`--repair <mongod "
"--repair>` command-line option) if you have no other options. These "
"operations remove and do not save any corrupt data during the repair "
"process."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:52
msgid ""
"The :method:`db.repairDatabase()` is now available for secondary as well "
"as primary members of replica sets."
msgstr ""

#~ msgid ""
#~ ":method:`db.repairDatabase()` provides a wrapper "
#~ "around the database command "
#~ ":dbcommand:`repairDatabase`, and has the same"
#~ " effect as the run-time option "
#~ ":option:`mongod --repair` option, limited to"
#~ " *only* the current database. See "
#~ ":dbcommand:`repairDatabase` for full documentation."
#~ msgstr ""

#~ msgid ""
#~ "During normal operations, only use the"
#~ " :dbcommand:`repairDatabase` command and wrappers"
#~ " including :method:`db.repairDatabase()` in the"
#~ " :program:`mongo` shell and :option:`mongod "
#~ "--repair`, to compact database files "
#~ "and/or reclaim disk space. Be aware "
#~ "that these operations remove and do "
#~ "not save any corrupt data during "
#~ "the repair process."
#~ msgstr ""

#~ msgid ""
#~ "If you are trying to repair a "
#~ ":term:`replica set` member, and you have"
#~ " access to an intact copy of "
#~ "your data (e.g. a recent backup or"
#~ " an intact member of the "
#~ ":term:`replica set`), you should restore "
#~ "from that intact copy, and **not** "
#~ "use :dbcommand:`repairDatabase`."
#~ msgstr ""

#~ msgid ""
#~ "When using :term:`journaling <journal>`, there"
#~ " is almost never any need to "
#~ "run :dbcommand:`repairDatabase`. In the event"
#~ " of an unclean shutdown, the server"
#~ " will be able to restore the "
#~ "data files to a pristine state "
#~ "automatically."
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

