# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.find.txt:3
msgid "db.collection.find()"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:12
msgid ""
"Selects documents in a collection and returns a :term:`cursor` to the "
"selected documents. [#formal-query-structure]_"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:18
msgid ""
"A :term:`cursor` to the documents that match the ``query`` criteria. When "
"the :method:`find() <db.collection.find()>` method \"returns documents,\" "
"the method is actually returning a cursor to the documents.  If "
":method:`~db.collection.find()` includes a ``projection`` argument, the "
"matching documents contain only the ``projection`` fields and the ``_id`` "
"field. You can optionally exclude the ``_id`` field.  Executing "
":method:`find() <db.collection.find()>` directly in the :program:`mongo` "
"shell automatically iterates the cursor to display up to the first 20 "
"documents. Type ``it`` to continue iteration.  To access the returned "
"documents with a driver, use the appropriate cursor handling mechanism for "
"the :doc:`driver language </applications/drivers>`."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:20
msgid ""
"A :term:`cursor` to the documents that match the ``query`` criteria. When "
"the :method:`find() <db.collection.find()>` method \"returns documents,\" "
"the method is actually returning a cursor to the documents."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:25
msgid ""
"If :method:`~db.collection.find()` includes a ``projection`` argument, the "
"matching documents contain only the ``projection`` fields and the ``_id`` "
"field. You can optionally exclude the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:30
msgid ""
"Executing :method:`find() <db.collection.find()>` directly in the "
":program:`mongo` shell automatically iterates the cursor to display up to "
"the first 20 documents. Type ``it`` to continue iteration."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:35
msgid ""
"To access the returned documents with a driver, use the appropriate cursor "
"handling mechanism for the :doc:`driver language </applications/drivers>`."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:39
msgid "The ``projection`` parameter takes a document of the following form:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:45
msgid "The ``<boolean>`` value can be any of the following:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:47
msgid ""
"``1`` or ``true`` to include the field. The :method:`find() "
"<db.collection.find()>` method always includes the :term:`_id` field even if"
" the field is not explicitly stated to return in the :term:`projection` "
"parameter."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:52
msgid "``0`` or ``false`` to exclude the field."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:54
msgid ""
"A ``projection`` *cannot* contain *both* include and exclude specifications,"
" except for the exclusion of the ``_id`` field. In projections that "
"*explicitly include* fields, the ``_id`` field is the only field that you "
"can *explicitly exclude*."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:59
msgid ""
":method:`db.collection.find()` is a wrapper for the more formal query "
"structure that uses the :operator:`$query` operator. This operator is "
"necessary to work with documents containing a field name ``query`` "
"containing an embedded document."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:65
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:68
msgid "Find All Documents in a Collection"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:70
msgid ""
"The :method:`find() <db.collection.find()>` method with no parameters "
"returns all documents from a collection and returns all fields for the "
"documents. For example, the following operation returns all documents in the"
" :doc:`bios collection </reference/bios-example-collection>`:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:80
msgid "Find Documents that Match Query Criteria"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:82
msgid ""
"To find documents that match a set of selection criteria, call :method:`~ "
"db.collection.find()` with the ``<criteria>`` parameter. The following "
"operation returns all the documents from the collection ``products`` where "
"``qty`` is greater than ``25``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:92
msgid "Query for Equality"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:94
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where ``_id`` equals ``5``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:102
msgid "Query Using Operators"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:104
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where ``_id`` equals either ``5`` or "
"``ObjectId(\"507c35dd8fada716c89d0013\")``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:117
msgid "Query for Ranges"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:119
msgid ""
"Combine comparison operators to specify ranges. The following operation "
"returns documents with ``field`` between ``value1`` and ``value2``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:127
msgid "Query a Field that Contains an Array"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:129
msgid ""
"If a field contains an array and your query has multiple conditional "
"operators, the field as a whole will match if either a single array element "
"meets the conditions or a combination of array elements meet the conditions."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:134
msgid "Given a collection ``students`` that contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:142
msgid "The following query:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:148
msgid "Matches the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:155
msgid ""
"In the document with ``_id`` equal to ``1``, the ``score: [ -1, 3 ]`` meets "
"the conditions because the element ``-1`` meets the ``$lt: 2`` condition and"
" the element ``3`` meets the ``$gt: 0`` condition."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:159
msgid ""
"In the document with ``_id`` equal to ``2``, the ``score: [ 1, 5 ]`` meets "
"the conditions because the element ``1`` meets both the ``$lt: 2`` condition"
" and the ``$gt: 0`` condition."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:164
msgid "Query Arrays"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:167
msgid "Query for an Array Element"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:169
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where the array field ``contribs`` "
"contains the element ``\"UNIX\"``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:178
msgid "Query an Array of Documents"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:180
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where ``awards`` array contains an "
"embedded document element that contains the ``award`` field equal to "
"``\"Turing Award\"`` and the ``year`` field greater than 1980:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:202
msgid "Query Embedded Documents"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:205
msgid "Query Exact Matches on Embedded Documents"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:207
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where the embedded document ``name`` "
"is *exactly* ``{ first: \"Yukihiro\", last: \"Matsumoto\" }``, including the"
" order:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:223
msgid ""
"The ``name`` field must match the embedded document exactly. The query does "
"**not** match documents with the following ``name`` fields:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:240
msgid "Query Fields of an Embedded Document"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:242
msgid ""
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` where the embedded document ``name`` "
"contains a field ``first`` with the value ``\"Yukihiro\"`` and a field "
"``last`` with the value ``\"Matsumoto\"``. The query uses :term:`dot "
"notation` to access fields in an embedded document:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:257
msgid ""
"The query matches the document where the ``name`` field contains an embedded"
" document with the field ``first`` with the value ``\"Yukihiro\"`` and a "
"field ``last`` with the value ``\"Matsumoto\"``. For instance, the query "
"would match documents with ``name`` fields that held either of the following"
" values:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:277
msgid "Projections"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:279
msgid ""
"The ``projection`` parameter specifies which fields to return. The parameter"
" contains either include or exclude specifications, not both, unless the "
"exclude is for the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:284
msgid "Specify the Fields to Return"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:286
msgid ""
"The following operation returns all the documents from the ``products`` "
"collection where ``qty`` is greater than ``25`` and returns only the "
"``_id``, ``item`` and ``qty`` fields:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:294
msgid "The operation returns the following:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:302
msgid ""
"The following operation finds all documents in the :doc:`bios collection "
"</reference/bios-example-collection>` and returns only the ``name`` field, "
"``contribs`` field and ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:311
msgid "Explicitly Excluded Fields"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:313
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` and returns all fields *except* the ``first`` field in "
"the ``name`` embedded document and the ``birth`` field:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:326
msgid "Explicitly Exclude the ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:328
msgid ""
"The following operation excludes the ``_id`` and ``qty`` fields from the "
"result set:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:335
msgid ""
"The documents in the result set contain all fields *except* the ``_id`` and "
"``qty`` fields:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:344
msgid ""
"The following operation finds documents in the :doc:`bios collection "
"</reference/bios-example-collection>` and returns only the ``name`` field "
"and the ``contribs`` field:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:356
msgid "On Arrays and Embedded Documents"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:358
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` and returns the ``last`` field in the ``name`` embedded"
" document and the first two elements in the ``contribs`` array:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:377
msgid "Iterate the Returned Cursor"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:379
msgid ""
"The :method:`~db.collection.find()` method returns a :term:`cursor` to the "
"results. In the :program:`mongo` shell, if the returned cursor is not "
"assigned to a variable using the ``var`` keyword, the cursor is "
"automatically iterated up to 20 times to access up to the first 20 documents"
" that match the query. You can use the ``DBQuery.shellBatchSize`` to change "
"the number of iterations. See :ref:`cursor-flags` and :ref:`cursor-"
"behaviors`. To iterate manually, assign the returned cursor to a variable "
"using the ``var`` keyword."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:389
msgid "With Variable Name"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:391
msgid ""
"The following example uses the variable ``myCursor`` to iterate over the "
"cursor and print the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:401
msgid "With ``next()`` Method"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:403
msgid ""
"The following example uses the cursor method :method:`~cursor.next()` to "
"access the documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:417
msgid ""
"To print, you can also use the ``printjson()`` method instead of "
"``print(tojson())``:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:428
msgid "With ``forEach()`` Method"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:430
msgid ""
"The following example uses the cursor method :method:`~cursor.forEach()` to "
"iterate the cursor and access the documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:440
msgid "Modify the Cursor Behavior"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:442
msgid ""
"The :program:`mongo` shell and the :doc:`drivers </applications/drivers>` "
"provide several cursor methods that call on the *cursor* returned by the "
":method:`~db.collection.find()` method to modify its behavior."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:448
msgid "Order Documents in the Result Set"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:450
msgid ""
"The :method:`~cursor.sort()` method orders the documents in the result set. "
"The following operation returns documents in the :doc:`bios collection "
"</reference/bios-example-collection>` sorted in ascending order by the "
"``name`` field:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:459
msgid ""
":method:`~cursor.sort()` corresponds to the ``ORDER BY`` statement in SQL."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:463
msgid "Limit the Number of Documents to Return"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:465
msgid ""
"The :method:`~cursor.limit()` method limits the number of documents in the "
"result set. The following operation returns at most ``5`` documents in the "
":doc:`bios collection </reference/bios-example-collection>`:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:473
msgid ""
":method:`~cursor.limit()` corresponds to the ``LIMIT`` statement in SQL."
msgstr ""

#: ../source/reference/method/db.collection.find.txt:477
msgid "Set the Starting Point of the Result Set"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:479
msgid ""
"The :method:`~cursor.skip()` method controls the starting point of the "
"results set. The following operation skips the first ``5`` documents in the "
":doc:`bios collection </reference/bios-example-collection>` and returns all "
"remaining documents:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:489
msgid "Combine Cursor Methods"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:491
msgid ""
"The following statements chain cursor methods :method:`~cursor.limit()` and "
":method:`~cursor.sort()`:"
msgstr ""

#: ../source/reference/method/db.collection.find.txt:499
msgid ""
"The two statements are equivalent; i.e. the order in which you chain the "
":method:`~cursor.limit()` and the :method:`~cursor.sort()` methods is not "
"significant. Both statements return the first five documents, as determined "
"by the ascending sort order on 'name'."
msgstr ""
