# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:9
msgid ""
"The :term:`oplog` (operations log) is a special :term:`capped collection` "
"that keeps a rolling record of all operations that modify the data stored in"
" your databases. MongoDB applies database operations on the :term:`primary` "
"and then records the operations on the primary's oplog. The "
":term:`secondary` members then copy and apply these operations in an "
"asynchronous process. All replica set members contain a copy of the oplog, "
"in the :data:`local.oplog.rs` collection, which allows them to maintain the "
"current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:18
msgid ""
"To facilitate replication, all replica set members send heartbeats (pings) "
"to all other members. Any member can import oplog entries from any other "
"member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:22
msgid ""
"Whether applied once or multiple times to the target dataset, each operation"
" in the oplog produces the same results, i.e. each operation in the oplog is"
" :term:`idempotent`. For proper replication operations, entries in the oplog"
" must be idempotent:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:27
msgid "initial sync"
msgstr ""

#: ../source/core/replica-set-oplog.txt:28
msgid "post-rollback catch-up"
msgstr ""

#: ../source/core/replica-set-oplog.txt:29
msgid "sharding chunk migrations"
msgstr ""

#: ../source/core/replica-set-oplog.txt:34
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:36
msgid ""
"When you start a replica set member for the first time, MongoDB creates an "
"oplog of a default size. The size depends on the architectural details of "
"your operating system."
msgstr ""

#: ../source/core/replica-set-oplog.txt:40
msgid ""
"In most cases, the default oplog size is sufficient. For example, if an "
"oplog is 5% of free disk space and fills up in 24 hours of operations, then "
"secondaries can stop copying entries from the oplog for up to 24 hours "
"without becoming too stale to continue replicating. However, most replica "
"sets have much lower operation volumes, and their oplogs can hold much "
"higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:47
msgid ""
"Before :program:`mongod` creates an oplog, you can specify its size with the"
" :setting:`~replication.oplogSizeMB` option. However, after you have started"
" a replica set member for the first time, you can only change the size of "
"the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
msgid "By default, the size of the oplog is as follows:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
msgid ""
"For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates "
"5% of the available free disk space, but will always allocate at least 1 "
"gigabyte and never more than 50 gigabytes."
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
msgid ""
"For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the "
"oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:66
msgid ""
"For 32-bit systems, MongoDB allocates about 48 megabytes of space to the "
"oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:72
msgid ""
"If you can predict your replica set's workload to resemble one of the "
"following patterns, then you might want to create an oplog that is larger "
"than the default. Conversely, if your application predominantly performs "
"reads with a minimal amount of write operations, a smaller oplog may be "
"sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:78
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:81
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:83
msgid ""
"The oplog must translate multi-updates into individual operations in order "
"to maintain :term:`idempotency <idempotent>`. This can use a great deal of "
"oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:89
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:91
msgid ""
"If you delete roughly the same amount of data as you insert, the database "
"will not grow significantly in disk use, but the size of the operation log "
"can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:96
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:98
msgid ""
"If a significant portion of the workload is updates that do not increase the"
" size of the documents, the database records a large number of operations "
"but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:103
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:105
msgid ""
"To view oplog status, including the size and the time range of operations, "
"issue the :method:`rs.printReplicationInfo()` method. For more information "
"on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:110
msgid ""
"Under various exceptional situations, updates to a :term:`secondary's "
"<secondary>` oplog might lag behind the desired performance time.  Use "
":method:`db.getReplicationInfo()` from a secondary member and the "
":doc:`replication status </reference/method/db.getReplicationInfo>` output "
"to assess the current state of replication and determine if there is any "
"unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:117
msgid ""
"See :ref:`Replication Lag <replica-set-replication-lag>` for more "
"information."
msgstr ""
