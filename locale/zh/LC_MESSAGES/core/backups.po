# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:7
msgid ""
"When deploying MongoDB in production, you should have a strategy for "
"capturing and restoring backups in the case of data loss events. There are "
"several ways to back up MongoDB clusters:"
msgstr ""

#: ../source/core/backups.txt:11
msgid ":ref:`backup-with-file-copies`"
msgstr ""

#: ../source/core/backups.txt:12
msgid ":ref:`backup-and-restore-tools`"
msgstr ""

#: ../source/core/backups.txt:13
msgid ":ref:`backup-with-mms`"
msgstr ""

#: ../source/core/backups.txt:14
msgid ":ref:`backup-with-mms-onprem`"
msgstr ""

#: ../source/core/backups.txt:19
msgid "Backup by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:21
msgid "You can create a backup by copying MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:24
msgid ""
"If the volume where MongoDB stores data files supports point in time "
"snapshots, you can use these snapshots to create backups of a MongoDB system"
" at an exact moment in time."
msgstr ""

#: ../source/core/backups.txt:28
msgid ""
"File systems snapshots are an operating system volume manager feature, and "
"are not specific to MongoDB. The mechanics of snapshots depend on the "
"underlying storage system. For example, if you use Amazonâ€™s EBS storage "
"system for EC2 supports snapshots. On Linux the LVM manager can create a "
"snapshot."
msgstr ""

#: ../source/core/backups.txt:34
msgid ""
"To get a correct snapshot of a running :program:`mongod` process, you must "
"have journaling enabled and the journal must reside on the same logical "
"volume as the other MongoDB data files. Without journaling enabled, there is"
" no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:40
msgid ""
"To get a consistent snapshot of a sharded system, you must disable the "
"balancer and capture a snapshot from every shard and a config server at "
"approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:44
msgid ""
"If your storage system does not support snapshots, you can copy the files "
"directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple "
"files is not an atomic operation, you must stop all writes to the "
":program:`mongod` before copying the files. Otherwise, you will copy the "
"files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:50
msgid ""
"Backups produced by copying the underlying data do not support point in time"
" recovery for replica sets and are difficult to manage for larger sharded "
"clusters. Additionally, these backups are larger because they include the "
"indexes and duplicate underlying storage padding and fragmentation. "
":program:`mongodump`, by contrast, creates smaller backups."
msgstr ""

#: ../source/core/backups.txt:57
msgid ""
"For more information, see the :doc:`/tutorial/backup-with-filesystem-"
"snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-"
"snapshots` for complete instructions on using LVM to create snapshots. Also "
"see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 "
"</tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:67
msgid "Backup with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:69
msgid ""
"The :program:`mongodump` tool reads data from a MongoDB database and creates"
" high fidelity BSON files. The :program:`mongorestore` tool can populate a "
"MongoDB database with the data from these BSON files. These tools are simple"
" and efficient for backing up small MongoDB deployments, but are not ideal "
"for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:76
msgid ""
":program:`mongodump` and :program:`mongorestore` can operate against a "
"running :program:`mongod` process, and can manipulate the underlying data "
"files directly. By default, :program:`mongodump` does not capture the "
"contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:81
msgid ""
":program:`mongodump` only captures the documents in the database. The "
"resulting backup is space efficient, but :program:`mongorestore` or "
":program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:85
msgid ""
"When connected to a MongoDB instance, :program:`mongodump` can adversely "
"affect :program:`mongod` performance. If your data is larger than system "
"memory, the queries will push the working set out of memory."
msgstr ""

#: ../source/core/backups.txt:90
msgid ""
"To mitigate the impact of :program:`mongodump` on the performance of the "
"replica set, use :program:`mongodump` to capture backups from a "
":doc:`secondary </core/replica-set-secondary>` member of a replica set. "
"Alternatively, you can shut down a secondary and use :program:`mongodump` "
"with the data files directly. If you shut down a secondary to capture data "
"with :program:`mongodump` ensure that the operation can complete before its "
"oplog becomes too stale to continue replicating."
msgstr ""

#: ../source/core/backups.txt:99
msgid ""
"For replica sets, :program:`mongodump` also supports a point in time feature"
" with the :option:`--oplog <mongodump --oplog>` option. Applications may "
"continue modifying data while :program:`mongodump` captures the output. To "
"restore a point in time backup created with :option:`--oplog <mongodump "
"--oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay "
"<mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:107
msgid ""
"If applications modify data while :program:`mongodump` is creating a backup,"
" :program:`mongodump` will compete for resources with those applications."
msgstr ""

#: ../source/core/backups.txt:111
msgid ""
"See :doc:`/tutorial/backup-and-restore-tools`, :doc:`/tutorial/backup-small-"
"sharded-cluster-with-mongodump`, and :doc:`/tutorial/backup-sharded-cluster-"
"with-database-dumps` for more information."
msgstr ""

#: ../source/core/backups.txt:119
msgid "|MMS| Backup"
msgstr ""

#: ../source/core/backups.txt:121
msgid ""
"The |mms-home| supports the backing up and restoring of MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:124
msgid ""
"|MMS| continually backs up MongoDB replica sets and sharded clusters by "
"reading the oplog data from your MongoDB deployment."
msgstr ""

#: ../source/core/backups.txt:127
msgid ""
"|MMS| Backup offers point in time recovery of MongoDB replica sets and a "
"consistent snapshot of sharded clusters."
msgstr ""

#: ../source/core/backups.txt:130
msgid ""
"|MMS| achieves point in time recovery by storing oplog data so that it can "
"create a restore for any moment in time in the last 24 hours for a "
"particular replica set or sharded cluster. Sharded cluster snapshots are "
"difficult to achieve with other MongoDB backup methods."
msgstr ""

#: ../source/core/backups.txt:136
msgid ""
"To restore a MongoDB deployment from an |MMS| Backup snapshot, you download "
"a compressed archive of your MongoDB data files and distribute those files "
"before restarting the :program:`mongod` processes."
msgstr ""

#: ../source/core/backups.txt:140
msgid ""
"To get started with |MMS| Backup, sign up for |mms-home|. For documentation "
"on |MMS|, see the |mms-docs|."
msgstr ""

#: ../source/core/backups.txt:148
msgid "Ops Manager Backup Software"
msgstr ""

#: ../source/core/backups.txt:150
msgid ""
"MongoDB Subscribers can install and run the same core software that powers "
":ref:`backup-with-mms` on their own infrastructure. Ops Manager, an on-"
"premise solution, has similar functionality to the cloud version and is "
"available with Enterprise Advanced subscriptions."
msgstr ""

#: ../source/core/backups.txt:156
msgid ""
"For more information about Ops Manager, see the `MongoDB Enterprise Advanced"
" <https://www.mongodb.com/products/mongodb-enterprise-advanced?jmp=docs>`_ "
"page and the :opsmgr:`Ops Manager Manual </>`."
msgstr ""

#: ../source/core/backups.txt:162
msgid "Further Reading"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:6
msgid ":doc:`/tutorial/backup-with-filesystem-snapshots`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:4
msgid ""
"An outline of procedures for creating MongoDB data set backups using system-"
"level file snapshot tool, such as :term:`LVM` or native storage appliance "
"tools."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:10
msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:9
msgid ""
"Describes procedure for restoring a replica set from an archived backup such"
" as a :program:`mongodump` or |mms-home| Backup file."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:15
msgid ":doc:`/tutorial/backup-and-restore-tools`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:13
msgid ""
"Describes a procedure for exporting the contents of a database to either a "
"binary dump or a textual exchange format, and for importing these files into"
" a database."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:19
msgid ":doc:`/administration/backup-sharded-clusters`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:18
msgid ""
"Detailed procedures and considerations for backing up sharded clusters and "
"single shards."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:22
msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:22
msgid ""
"Recover data from MongoDB data files that were not properly closed or have "
"an invalid state."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:6
msgid ""
"`Backup and it's Role in Disaster Recovery White Paper "
"<https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:7
msgid ""
"`Backup vs. Replication: Why Do You Need Both? "
"<http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-"
"both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:8
msgid ""
"`MongoDB Production Readiness Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""
