# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-elections.txt:9
msgid "Replica Set Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:13
msgid ""
":term:`Replica sets <replica set>` use elections to determine which set "
"member will become :term:`primary`. Elections occur after initiating a "
"replica set, and also any time the primary becomes unavailable. The primary "
"is the only member in the set that can accept write operations. If a primary"
" becomes unavailable, elections allow the set to recover normal operations "
"without manual intervention. Elections are part of the :ref:`failover "
"process <replica-set-failover-administration>`."
msgstr ""

#: ../source/core/replica-set-elections.txt:22
msgid ""
"In the following three-member replica set, the primary is unavailable. The "
"remaining secondaries hold an election to choose a new primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:29
msgid "Behavior"
msgstr ""

#: ../source/core/replica-set-elections.txt:31
msgid ""
"Elections are essential for independent operation of a replica set; however,"
" elections take time to complete. While an election is in process, the "
"replica set has no primary and cannot accept writes and all remaining "
"members become read-only. MongoDB avoids elections unless necessary."
msgstr ""

#: ../source/core/replica-set-elections.txt:37
msgid ""
"If a majority of the replica set is inaccessible or unavailable, the replica"
" set cannot accept writes and all remaining members become read-only."
msgstr ""

#: ../source/core/replica-set-elections.txt:42
msgid "Factors and Conditions that Affect Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:45
msgid "Heartbeats"
msgstr ""

#: ../source/core/replica-set-elections.txt:47
msgid ""
"Replica set members send heartbeats (pings) to each other every two seconds."
" If a heartbeat does not return within 10 seconds, the other members mark "
"the delinquent member as inaccessible."
msgstr ""

#: ../source/core/replica-set-elections.txt:52
msgid "Priority Comparisons"
msgstr ""

#: ../source/core/replica-set-elections.txt:54
msgid ""
"The :data:`~replSetGetConfig.members[n].priority` setting affects elections."
" Members will prefer to vote for members with the highest priority value."
msgstr ""

#: ../source/core/replica-set-elections.txt:58
msgid ""
"Members with a priority value of ``0`` cannot become primary and do not seek"
" election. For details, see :doc:`/core/replica-set-priority-0-member`."
msgstr ""

#: ../source/core/replica-set-elections.txt:62
msgid ""
"A replica set does *not* hold an election as long as the current primary has"
" the highest priority value or no secondary with higher priority is within "
"10 seconds of the latest :term:`oplog` entry in the set."
msgstr ""

#: ../source/core/replica-set-elections.txt:67
msgid ""
"If a higher-priority member catches up to within 10 seconds of the latest "
"oplog entry of the current primary, the set holds an election in order to "
"provide the higher-priority node a chance to become  primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:72
msgid "Optime"
msgstr ""

#: ../source/core/replica-set-elections.txt:74
msgid ""
"The :data:`optime <replSetGetStatus.members.optime>` is the timestamp of the"
" last operation that a member applied from the oplog. A replica set member "
"cannot become primary unless it has the highest (i.e. most recent) "
":data:`~replSetGetStatus.members.optime` of any visible member in the set."
msgstr ""

#: ../source/core/replica-set-elections.txt:81
msgid "Connections"
msgstr ""

#: ../source/core/replica-set-elections.txt:83
msgid ""
"A replica set member cannot become primary unless it can connect to a "
"majority of the members in the replica set. For the purposes of elections, a"
" majority refers to the total number of *votes*, rather than the total "
"number of members."
msgstr ""

#: ../source/core/replica-set-elections.txt:88
msgid ""
"If you have a three-member replica set, where every member has one vote, the"
" set can elect a primary as long as two members can connect to each other. "
"If two members are unavailable, the remaining member remains a "
":term:`secondary` because it cannot connect to a majority of the set's "
"members. If the remaining member is a :term:`primary` and two members become"
" unavailable, the primary steps down and becomes a secondary."
msgstr ""

#: ../source/core/replica-set-elections.txt:97
msgid "Network Partitions"
msgstr ""

#: ../source/core/replica-set-elections.txt:99
msgid ""
"Network partitions affect the formation of a majority for an election. If a "
"primary steps down and neither portion of the replica set has a majority the"
" set will **not** elect a new primary. The replica set becomes read-only."
msgstr ""

#: ../source/core/replica-set-elections.txt:104
msgid ""
"To avoid this situation, place a majority of instances in one data center "
"and a minority of instances in any other data centers combined."
msgstr ""

#: ../source/core/replica-set-elections.txt:108
msgid "Election Mechanics"
msgstr ""

#: ../source/core/replica-set-elections.txt:111
msgid "Election Triggering Events"
msgstr ""

#: ../source/core/replica-set-elections.txt:113
msgid ""
"Replica sets hold an election any time there is no primary. Specifically, "
"the following:"
msgstr ""

#: ../source/core/replica-set-elections.txt:116
msgid "the initiation of a new replica set."
msgstr ""

#: ../source/core/replica-set-elections.txt:118
msgid ""
"a secondary loses contact with a primary. Secondaries call for elections "
"when they cannot see a primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:121
msgid "a primary steps down."
msgstr ""

#: ../source/core/replica-set-elections.txt:125
msgid ""
":doc:`Priority 0 members </core/replica-set-priority-0-member>`, do not "
"trigger elections, even when they cannot connect to the primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:129
msgid "A primary will step down:"
msgstr ""

#: ../source/core/replica-set-elections.txt:131
msgid "after receiving the :dbcommand:`replSetStepDown` command."
msgstr ""

#: ../source/core/replica-set-elections.txt:134
msgid ""
"if one of the current secondaries is eligible for election *and* has a "
"higher priority."
msgstr ""

#: ../source/core/replica-set-elections.txt:137
msgid ""
"if primary cannot contact a majority of the members of the replica set."
msgstr ""

#: ../source/core/replica-set-elections.txt:140
msgid ""
"In some cases, modifying a replica set's configuration will trigger an "
"election by modifying the set so that the primary must step down."
msgstr ""

#: ../source/core/replica-set-elections.txt:143
msgid ""
"When a primary steps down, it closes all open client connections, so that "
"clients don't attempt to write data to a secondary. This helps clients "
"maintain an accurate view of the replica set and helps prevent "
":term:`rollbacks <rollback>`."
msgstr ""

#: ../source/core/replica-set-elections.txt:149
msgid "Participation in Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:151
msgid ""
"Every replica set member has a *priority* that helps determine its "
"eligibility to become a :term:`primary`. In an election, the replica set "
"elects an eligible member with the highest "
":data:`~replSetGetConfig.members[n].priority` value as primary. By default, "
"all members have a priority of ``1`` and have an equal chance of becoming "
"primary. In the default, all members also can trigger an election."
msgstr ""

#: ../source/core/replica-set-elections.txt:159
msgid ""
"You can set the :data:`~replSetGetConfig.members[n].priority` value to "
"weight the election in favor of a particular member or group of members. For"
" example, if you have a :doc:`geographically distributed replica set </core"
"/replica-set-architecture-geographically-distributed>`, you can adjust "
"priorities so that only members in a specific data center can become "
"primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:167
msgid ""
"The first member to receive the majority of votes becomes primary. By "
"default, all members have a single vote, unless you modify the "
":data:`~replSetGetConfig.members[n].votes` setting. :doc:`Non-voting members"
" </tutorial/configure-a-non-voting-replica-set-member>` have "
":data:`~replSetGetConfig.members[n].votes` value of ``0``. All other members"
" have ``1`` vote."
msgstr ""

#: ../source/includes/members-used-to-allow-multiple-votes.rst:3
msgid ""
"Members cannot have :data:`~replSetGetConfig.members[n].votes` greater than "
"``1``. For details, see :ref:`3.0-compatibility-repl-set-config`."
msgstr ""

#: ../source/core/replica-set-elections.txt:176
msgid ""
"The :data:`~replSetGetStatus.members.state` of a member also affects its "
"eligibility to vote. Only members in the following states can vote: "
"``PRIMARY``, ``SECONDARY``, ``RECOVERING``, ``ARBITER``, and ``ROLLBACK``."
msgstr ""

#: ../source/core/replica-set-elections.txt:181
msgid ""
"Do not alter the number of votes in a replica set to control the outcome of "
"an election. Instead, modify the "
":data:`~replSetGetConfig.members[n].priority` value."
msgstr ""

#: ../source/core/replica-set-elections.txt:188
msgid "Vetoes in Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:190
msgid ""
"All members of a replica set can veto an election, including :ref:`non-"
"voting members <replica-set-non-voting-members>`. A member will veto an "
"election:"
msgstr ""

#: ../source/core/replica-set-elections.txt:194
msgid "If the member seeking an election is not a member of the voter's set."
msgstr ""

#: ../source/core/replica-set-elections.txt:196
msgid ""
"If the member seeking an election is not up-to-date with the most recent "
"operation accessible in the replica set."
msgstr ""

#: ../source/core/replica-set-elections.txt:199
msgid ""
"If the member seeking an election has a lower priority than another member "
"in the set that is also eligible for election."
msgstr ""

#: ../source/core/replica-set-elections.txt:202
msgid ""
"If a :ref:`priority 0 member <replica-set-secondary-only-members>` [#imply-"
"secondary-only]_ is the most current member at the time of the election. In "
"this case, another eligible member of the set will catch up to the state of "
"this secondary member and then attempt to become primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:208
msgid ""
"If the current primary has more recent operations (i.e. a higher "
":data:`optime <replSetGetStatus.members.optime>`) than the member seeking "
"election, from the perspective of the voting member."
msgstr ""

#: ../source/core/replica-set-elections.txt:213
msgid ""
"If the current primary has the same or more recent operations (i.e. a higher"
" or equal :data:`optime <replSetGetStatus.members.optime>`) than the member "
"seeking election."
msgstr ""

#: ../source/core/replica-set-elections.txt:218
msgid ""
"Remember that :ref:`hidden <replica-set-hidden-members>` and :ref:`delayed "
"<replica-set-delayed-members>` imply :ref:`priority 0 <replica-set-"
"secondary-only-members>` configuration."
msgstr ""

#: ../source/core/replica-set-elections.txt:228
msgid "Non-Voting Members"
msgstr ""

#: ../source/core/replica-set-elections.txt:232
msgid ""
"Non-voting members hold copies of the replica set's data and can accept read"
" operations from client applications. Non-voting members do not vote in "
"elections, but **can** :ref:`veto <replica-set-vetos>` an election and "
"become primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:237
msgid ""
"Because a replica set can have up to :limit:`50 members <Number of Members "
"of a Replica Set>`, but only :limit:`7 voting members <Number of Voting "
"Members of a Replica Set>`, non-voting members allow a replica set to have "
"more than seven members."
msgstr ""

#: ../source/core/replica-set-elections.txt:242
msgid ""
"For instance, the following nine-member replica set has seven voting members"
" and two non-voting members."
msgstr ""

#: ../source/core/replica-set-elections.txt:247
msgid ""
"A non-voting member has a :data:`~replSetGetConfig.members[n].votes` setting"
" equal to ``0`` in its member configuration:"
msgstr ""

#: ../source/core/replica-set-elections.txt:259
msgid ""
"Do **not** alter the number of votes to control which members will become "
"primary. Instead, modify the :data:`~replSetGetConfig.members[n].priority` "
"option. *Only* alter the number of votes in exceptional cases. For example, "
"to permit more than seven members."
msgstr ""

#: ../source/core/replica-set-elections.txt:265
msgid ""
"When possible, all members should have one vote. Changing the number of "
"votes can cause the wrong members to become primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:268
msgid ""
"To configure a non-voting member, see :doc:`/tutorial/configure-a-non-"
"voting-replica-set-member`."
msgstr ""

#: ../source/core/replica-set-elections.txt:1
#: ../source/core/replica-set-elections.txt:2
#: ../source/core/replica-set-elections.txt:3
msgid "replica set"
msgstr ""

#: ../source/core/replica-set-elections.txt:1
msgid "network partitions"
msgstr ""

#: ../source/core/replica-set-elections.txt:2
msgid "elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:3
msgid "failover"
msgstr ""

#: ../source/core/replica-set-elections.txt:223
msgid "replica set members"
msgstr ""

#: ../source/core/replica-set-elections.txt:223
msgid "non-voting"
msgstr ""
