############ path and build-meta configuration ##############
# The paths generated in makefile.meta will override the follwoing
# values, but we need to set the values once here to properly
# bootstrap the build system.

output = build
build-tools = bin
tools = $(output)/docs-tools

# Importing and generating the build system from the docs-tools repo
noop:
bootstrap fabfile build/docs-tools:
	@$(PYTHONBIN) bootstrap.py
	@echo "[bootstrap]: configured build environment."
help:
	@echo "Use 'make <target>', where <target> is a Sphinx target (e.g. 'html', 'latex')"
	@echo "See 'http://docs.mongodb.org/manual/meta' for more information."

include $(tools)/makefiles/makefile.compatibility
.PHONY:$(output)/makefile.meta
-include $(output)/makefile.meta
build/makefile.meta:$(output)/docs-tools/makecloth/meta.py
	@mkdir -p $(output)
	@$(PYTHONBIN) $< $@

############## generation steps for exceptional makefiles ##############

# The build targets and generation of images, are defined in a
# metadata.yaml file, which is the sole source of metadata for image
# generation.

-include $(output)/makefile.images

$(output)/makefile.images:$(tools)/makecloth/images.py source/images/metadata.yaml
	@$(PYTHONBIN) $< $@ source/images metadata.yaml

# To download interpshinx inventories these's the dependencies are a
# bit different becasue it uses Sphinx's config rather than it's own
# config file.

-include $(output)/makefile.intersphinx

conf.py:meta.yaml pdfs.yaml
$(tools)/makecloth/intersphinx.py:conf.py
$(output)/makefile.intersphinx:$(tools)/makecloth/intersphinx.py $(tools)/makecloth/__init__.py
	@$(PYTHONBIN) $< $@
