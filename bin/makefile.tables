## Eventually we can write a script to autogenerate these builder
## rules, for the mean time, it'll look like the following:

# each table will build from a '.yaml' table file the includes
# directory, into a '.rst' file in the includes directory, using the
# 'table_builder.py' script. The build rules for these files will
# resemble each of the following.

output-tables += source/includes/table-sql-to-agg-examples.rst
source/includes/table-sql-to-agg-terms.rst:source/includes/table-sql-to-agg-terms.yaml
	@$(PYTHONBIN) bin/table_builder.py $< $@
	@echo [table-builder]: \(re\)generate $@ table for inclusion in build

output-tables += source/includes/table-sql-to-agg-terms.rst
source/includes/table-sql-to-agg-examples.rst:source/includes/table-sql-to-agg-examples.yaml
	@$(PYTHONBIN) bin/table_builder.py $< $@
	@echo [table-builder]: \(re\)generate $@ table for inclusion in build

## meta-targets for testing and integration with the rest of the build
## process.  these must be at the end of the file.

.PHONY: tables clean-tables
tables:$(output-tables)
	@git update-index --assume-unchanged #
	@echo [build]: clensing git index of $(output-tables)
clean-tables:
	rm -rf $(output-tables)
