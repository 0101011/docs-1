:orphan:

===================
Server Status Index
===================

.. default-domain:: mongodb

This document provides a quick overview and example of the the
:dbcommand:`serverStatus` command. The helper :func:`db.serverStatus()`
in the :program:`mongo` shell provides access to this output. For full
documentation of the content of this output, see
:doc:`/reference/server-status`.

.. .. When adding status fields to this document, make sure that the
   ``docs/source/reference/server-status.txt`` document also reflects
   those changes.

.. note::

   The fields included in this output vary slightly depending on the
   version of MongoDB, underlaying operating system platform, and the
   kind of node, including :program:`mongos`, :program:`mongod` or
   :term:`replica set` member.


The ":ref:`server-status-instance-information`" section displays
information regarding the specific :program:`mongod` and
:program:`mongos` and its state.

.. code-block:: javascript

   {
           "host" : "<hostname>",
           "version" : "<version>",
           "process" : "<mongod|mongos>",
           "pid" : <num>,
           "uptime" : <num>,
           "uptimeMillis" : <num>,
           "uptimeEstimate" : <num>,
           "localTime" : ISODate(""),

The ":ref:`server-status-locks`" section reports data that reflect the
state and use of both global (i.e. ``.``) and database specific locks:

.. code-block:: javascript

           "locks" : {
                   "." : {
                           "timeLockedMicros" : {
                                   "R" : <num>,
                                   "W" : <num>
                           },
                           "timeAcquiringMicros" : {
                                   "R" : <num>,
                                   "W" : <num>
                           }
                   },
                   "admin" : {
                           "timeLockedMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           },
                           "timeAcquiringMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           }
                   },
                   "local" : {
                           "timeLockedMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           },
                           "timeAcquiringMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           }
                   },
                   "<database>" : {
                           "timeLockedMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           },
                           "timeAcquiringMicros" : {
                                   "r" : <num>,
                                   "w" : <num>
                           }
                   }
           },

The ":ref:`server-status-globallock`" field reports on MongoDB's
global system lock. In most cases the :ref:`locks <locks>` document
provides more fine grained data that reflects lock use:

.. code-block:: javascript

           "globalLock" : {
                   "totalTime" : <num>,
                   "lockTime" : <num>,
                   "currentQueue" : {
                           "total" : <num>,
                           "readers" : <num>,
                           "writers" : <num>
                   },
                   "activeClients" : {
                           "total" : <num>,
                           "readers" : <num>,
                           "writers" : <num>
                   }
           },


The ":ref:`server-status-memory`" field reports on MongoDB's
current memory use:

.. code-block:: javascript

           "mem" : {
                   "bits" : <num>,
                   "resident" : <num>,
                   "virtual" : <num>,
                   "supported" : <boolean>,
                   "mapped" : <num>,
                   "mappedWithJournal" : <num>
           },

The ":ref:`server-status-connections`" field reports on MongoDB's
current memory use by the MongoDB process:

.. code-block:: javascript

           "connections" : {
                   "current" : <num>,
                   "available" : <num>
           },

The fields in the ":ref:`server-status-extra-info`" document provide
platform specific information. The following example block is from a
Linux-based system:

.. code-block:: javascript

           "extra_info" : {
                   "note" : "fields vary by platform",
                   "heap_usage_bytes" : <num>,
                   "page_faults" : <num>
           },


The ":ref:`server-status-indexcounters`" document reports on index
use:

.. code-block:: javascript

           "indexCounters" : {
                   "btree" : {
                           "accesses" : <num>,
                           "hits" : <num>,
                           "misses" : <num>,
                           "resets" : <num>,
                           "missRatio" : <num>
                   }
           },

The ":ref:`server-status-backgroundflushing`" document reports on the
process MongoDB uses to write data to disk:

.. code-block:: javascript

           "backgroundFlushing" : {
                   "flushes" : <num>,
                   "total_ms" : <num>,
                   "average_ms" : <num>,
                   "last_ms" : <num>,
                   "last_finished" : ISODate("")
           },


The ":ref:`server-status-cursors`" document reports on current cursor
use and state:

.. code-block:: javascript

           "cursors" : {
                   "totalOpen" : <num>,
                   "clientCursors_size" : <num>,
                   "timedOut" : <num>
           },

The ":ref:`server-status-network`" document reports on network use and
state:

.. code-block:: javascript

           "network" : {
                   "bytesIn" : <num>,
                   "bytesOut" : <num>,
                   "numRequests" : <num>
           },

The ":ref:`server-status-repl`" document reports on the state of
replication and the :term:`replica set`. This document only appears
for replica sets.

.. code-block:: javascript

           "repl" : {
                   "setName" : "<string>",
                   "ismaster" : <boolean>,
                   "secondary" : <boolean>,
                   "hosts" : [
                           <hostname>,
                           <hostname>,
                           <hostname>
                   ],
                   "primary" : <hostname>,
                   "me" : <hostname>
           },

The ":ref:`server-status-opcounters-repl`" document reports the number
of replicated operations:

.. code-block:: javascript

           "opcountersRepl" : {
                   "insert" : <num>,
                   "query" : <num>,
                   "update" : <num>,
                   "delete" : <num>,
                   "getmore" : <num>,
                   "command" : <num>
           },

The ":ref:`server-status-repl-network-queue`" document holds
information regarding the queue that :term:`secondaries <secondary>`
use to poll data from other members of their set:

.. code-block:: javascript

           "replNetworkQueue" : {
                   "waitTimeMs" : <num>,
                   "numElems" : <num>,
                   "numBytes" : <num>
           },

The ":ref:`server-status-opcounters`" document reports the number of
operations this MongoDB instance has processed:

.. code-block:: javascript

           "opcounters" : {
                   "insert" : <num>,
                   "query" : <num>,
                   "update" : <num>,
                   "delete" : <num>,
                   "getmore" : <num>,
                   "command" : <num>
           },

The ":ref:`server-status-asserts`" document reports the number of
assertions or errors produced by the server:

.. code-block:: javascript

           "asserts" : {
                   "regular" : <num>,
                   "warning" : <num>,
                   "msg" : <num>,
                   "user" : <num>,
                   "rollovers" : <num>
           },

The ":ref:`server-status-writebacks`" document reports the number of
:term:`writebacks`:

.. code-block:: javascript

           "writeBacksQueued" : <num>,

The ":ref:`server-status-journaling`" document reports data that
reflect this :program:`mongod` journaling related operations and
performance:

.. code-block:: javascript

           "dur" : {
                   "commits" : <num>,
                   "journaledMB" : <num>,
                   "writeToDataFilesMB" : <num>,
                   "compression" : <num>,
                   "commitsInWriteLock" : <num>,
                   "earlyCommits" : <num>,
                   "timeMs" : {
                           "dt" : <num>,
                           "prepLogBuffer" : <num>,
                           "writeToJournal" : <num>,
                           "writeToDataFiles" : <num>,
                           "remapPrivateView" : <num>
                   }
           },

The ":ref:`server-status-recordstats`" document reports data on
MongoDB's ability to predict page faults and yield write operations
when required data isn't in memory:

.. code-block:: javascript

           "recordStats" : {
                   "accessesNotInMemory" : <num>,
                   "pageFaultExceptionsThrown" : <num>,
                   "local" : {
                           "accessesNotInMemory" : <num>,
                           "pageFaultExceptionsThrown" : <num>
                   },
                   "<database>" : {
                           "accessesNotInMemory" : <num>,
                           "pageFaultExceptionsThrown" : <num>
                   }
           },

The final ``ok`` field holds the return status for the
:dbcommand:`serverStatus` command:

.. code-block:: javascript

           "ok" : 1
   }
