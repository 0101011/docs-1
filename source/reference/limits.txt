=============================
MongoDB Limits and Thresholds
=============================

.. default-domain:: mongodb

Synopsis
--------

This document provides a collection of hard and soft limitations of
the MongoDB system.

Limits
------

.. _limit-bson-document-size:

.. describe:: BSON Object Size

   The maximum BSON object size is 16 megabytes.

.. _limit-index-size:

.. describe:: Index Size

   Indexed items, including their namespace/database, can be *no
   larger* than 1024 bytes. This value is the indexed content
   (i.e. the field value.)

.. _limit-number-of-indexes-per-collection:

.. describe:: Number of Indexes per Collection

   A single collection can have *no more* than 64 indexes.

.. _limit-namespace-length:

.. describe:: Namespace Length

   Each namespace, including database and collection name, must be
   shorter than 628 bytes.

   .. fix when we know what the actual limit is.

.. _limit-index-name-length:

.. describe:: Index Name Length

   The names of indexes, including their namespace (i.e database and
   collection name) cannot be longer than 128 characters.

   .. note: the default name is the concantiation of the fields and
      directions.

   .. ensureIndex/createIndex: supports giving an explicit name.

.. _limit-number-of-namespaces:

.. describe:: Number of Namespaces

   The limitation on the number of namespaces is a function of the
   size of the namespace file.

   .. ( size of namespace file / 628 ) rounded down.

   By default namespace files are 16 megabytes; however, with the
   :setting:`nssize` setting, ns files can be no larger than 2
   gigabytes.

   .. TODO rephrase above

   A 16 megabyte namespace file can support 24,000 namespaces.

.. _limit-size-of-namespace-file:

.. describe:: Size of Namespace File

   Namespace files can be no larger than 2 gigabytes.

   By default namespace files are 16 megabytes. You can configure the
   size using the :setting:`nssize`.

.. _limit-sort:

.. describe:: Sorted Documents

   MongoDB will only return sorted results on fields without an index
   *if* the sort operation uses less than 32 megabytes of memory.

.. _limit-nested-depth:

.. describe:: Nested Depth for BSON Objects

   .. versionchanged:: 2.2

   MongoDB only supports 100 levels of nesting for :term:`BSON
   documents <document>`.

.. _limit-sharding-limitations:

.. describe:: Operations Unavailable in Sharded Environments

   The :dbcommand:`group` does not work with sharding. Use
   :dbcommand:`mapreduce` or :dbcommand:`aggregate` instead.

   :method:`db.eval()` is incompatible with sharded collections. You may
   use :method:`db.eval()` with un-sharded collections in a shard
   cluster.

   :operator:`$where` does not permit references to the ``db`` object
   from the :operator:`$where` function. This is uncommon in
   un-sharded collections.

.. _limit-sharding-unique-indexes:

.. describe:: Unique Indexes in Sharded Collections

   MongoDB does not support unique indexes across shards, except when
   the unique index contains the full shard key as a prefix of the
   index. In these situations MongoDB will enforce uniqueness across
   the full key, not a single field.

   .. see:: :doc:`/tutorial/enforce-unique-keys-for-sharded-collections`
      for an alternate approach.
