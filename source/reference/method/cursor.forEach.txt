================
cursor.forEach()
================

.. default-domain:: mongodb

.. method:: cursor.forEach(function)

   The :method:`~cursor.forEach()` method iterates the cursor
   to apply function to each document from the cursor.

   The :method:`~cursor.forEach()` method accepts the following
   argument:

   :param function:

          JavaScript function to apply to each document from the
          cursor. The function signature includes a single argument
          which is passed the current document to process, as in the
          following prototype:

          .. code-block:: javascript

             function(doc) {
                ...
             }

          However, if the signature is missing the argument, you can
          access the document using the reserved
          ``arguments`` [#arguments]_ variable within the function,
          specifically ``arguments[0]``, as in the following prototype:

          .. code-block:: javascript

             function() {
                doc = arguments[0];
                ...
             }

          .. [#arguments] The ``arguments`` variable is an array
             and thus, you can access ``arguments.length`` attribute to
             determine the number of arguments.

   Consider the following example which appends the
   :method:`~cursor.forEach()` method to a
   :method:`~db.collection.find()` query to iterate through the cursor
   returned from the :method:`~db.collection.find()` and apply the
   function to each document:

   .. code-block:: javascript

      db.users.find().forEach( function(myDoc) { print( "user: " + myDoc.name ); } );

   The example finds all documents in the ``users`` collection and
   applies function to each document in order to print the name from each
   document.

   .. seealso:: :method:`cursor.map()` for similar functionality.
