=======================
cloneCollectionAsCapped
=======================

.. default-domain:: mongodb

.. dbcommand:: cloneCollectionAsCapped

   The :dbcommand:`cloneCollectionAsCapped` command creates a new
   :term:`capped collection` from an existing, non-capped collection
   within the same database. The original non-capped collection
   remains after the operation.

   The command has the following syntax:

   .. code-block:: javascript

      { cloneCollectionAsCapped: <existing collection>, toCollection: <capped collection>, size: <capped size> }

   The command copies an ``existing collection`` and creates a new
   ``capped collection`` with a maximum size specified by the ``capped
   size`` in bytes. The name of the new capped collection must be
   distinct and cannot be the same as that of the original existing
   collection. To replace the original non-capped collection with a
   capped collection, use the :dbcommand:`convertToCapped` command.

   During the cloning, the :dbcommand:`cloneCollectionAsCapped` command
   exhibit the following behavior:

   - The documents in the original collection will be traversed in
     :term:`$natural order <natural order>` and loaded into a new
     capped collection.

   - If the ``capped size`` specified for the capped collection is
     smaller than the size of the original uncapped collection, then
     the documents will be aged out of the collection based on
     insertion order(First In, First Out).

