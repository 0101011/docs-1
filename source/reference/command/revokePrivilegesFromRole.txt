========================
revokePrivilegesFromRole
========================

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: revokePrivilegesFromRole

   Removes the specified privileges from the :ref:`user-defined
   <user-defined-roles>` role defined on the database where the
   command is run. The :dbcommand:`revokePrivilegesFromRole` command
   has the following syntax:

   .. code-block:: javascript

      { revokePrivilegesFromRole: "<role>",
        privileges: [
          { resource: { <resource> }, actions: [ "<action>", ... ] },
          ...
        ],
        writeConcern: <write concern document>
      }

   The :dbcommand:`revokePrivilegesFromRole` command has the following fields:

   .. include:: /reference/command/revokePrivilegesFromRole-field.rst

Required Access
---------------

To revoke a privilege, a user must have :authaction:`revokeAnyRole` access
on the database the privilege targets. If the privilege targets multiple
databases or the ``cluster`` resource, a user must have
:authaction:`revokeAnyRole` access on the ``admin`` database.

Examples
--------

Match ``resource`` Patterns
~~~~~~~~~~~~~~~~~~~~~~~~~~~

To revoke a privilege, you must match the :doc:`resource document
</reference/resource-document>` pattern exactly. Consider a role
``myRole`` with the following privilege that applies to the
``products`` database:

.. code-block:: javascript

   { resource: { db: "products", collection: "" },
     actions: [ "find",  "update" ] }

You cannot revoke ``find`` from just one collection in the
``products`` database. Trying to remove the following would result in
no change:

.. code-block:: javascript

   db.runCommand ( { revokePrivilegesFromRole: "myRole",
                     privileges: [
                                  { resource: { db: "products", collection: "gadgets" },
                                    actions: [ "find" ] }
                                 ],
                 } )

To revoke ``find`` from the role ``myRole``, you must match the
:doc:`resource document </reference/resource-document>` pattern exactly:

.. code-block:: javascript

   db.runCommand ( { revokePrivilegesFromRole: "myRole",
                     privileges: [
                                   { resource: { db: "products", collection: "" },
                                     actions: [ "find" ] }
                                 ]
                 } )

Remove Multiple Privileges
~~~~~~~~~~~~~~~~~~~~~~~~~~

The following :dbcommand:`revokePrivilegesFromRole` operation
removes ``find`` from the ``products`` database as well as from
the ``system.indexes`` collections in all databases:

.. code-block:: javascript

   db.runCommand ( { revokePrivilegesFromRole: "associate",
                     privileges: [
                                   { resource: { db: "products", collection: "" },
                                     actions: [ "find" ] },
                                   { resource: { db: "", collection: "system.indexes" },
                                     actions: [ "find" ] }
                                 ],
                     writeConcern: { w: "majority" , wtimeout: 5000 }
                } )
