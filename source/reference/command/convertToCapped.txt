===============
convertToCapped
===============

.. default-domain:: mongodb

.. dbcommand:: convertToCapped

   The :dbcommand:`convertToCapped` command converts an existing,
   non-capped collection to a :term:`capped collection`, using the
   follwoing syntax:

   .. code-block:: javascript

      {convertToCapped: <collection>, size: <capped size> }

   :dbcommand:`convertToCapped` takes an existing collection
   (``<collection>``) and transforms it into a capped collection with
   a maximum size in bytes, specified to the ``size`` argument
   (``<capped size>``).

   During the conversion process, the :dbcommand:`convertToCapped`
   command exhibit the following behavior:

   - MongoDB transverses the documents in the original collection in
     :term:`natural order` and loads the documents into  into a new
     capped collection.

   - If the ``capped size`` specified for the capped collection is
     smaller than the size of the original uncapped collection, then
     MongoDB will overwrite documents from of the collection based on
     insertion order, or  *first in, first out* order.

   .. note::

      The :dbcommand:`convertToCapped` command is not supported in a
      sharded cluster.

   .. warning::

      The :dbcommand:`convertToCapped` will not recreate indexes from
      the original collection on the new collection. If you need
      indexes on this collection you will need to create these indexes
      after the conversion is complete.

   .. seealso:: :dbcommand:`create`
