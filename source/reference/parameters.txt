=====================
``mongod`` Parameters
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionchanged:: 2.4

Synopsis
--------

MongoDB provides a number of configuration options that are accessible
via the :option:`--setParameter <mongod --setParameter>` option to
:binary:`~bin.mongod`. This document documents all of these options.

For additional run time configuration options, see
:doc:`/reference/configuration-options` and :doc:`Manual Page for
mongod </reference/program/mongod>`.

Parameters
----------

.. parameter:: enableLocalhostAuthBypass

   .. versionadded:: 2.4

   Specify ``0`` to disable localhost authentication bypass.  Enabled
   by default.

   :parameter:`enableLocalhostAuthBypass` is not available using
   :dbcommand:`setParameter` database command. Use the
   :setting:`setParameter` option in the configuration file or the
   :option:`--setParameter <mongod --setParameter>` option on the
   command line.

.. parameter:: journalCommitInterval

   Specify an integer between ``1`` and ``500`` signifying the number
   of milliseconds (ms) between journal commits.

   Consider the following example which sets the
   :parameter:`journalCommitInterval` to ``200`` ms:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, journalCommitInterval: 200 } )

   .. seealso:: :setting:`journalCommitInterval`.

.. parameter:: logUserIds

   .. versionadded:: 2.4

   Specify ``1`` to enable logging of userids.

   Disabled by default.

.. parameter:: logLevel

   Specify an integer between ``0`` and ``5`` signifying the verbosity
   of the logging, where ``5`` is the most verbose.

   Consider the following example which sets the
   :parameter:`logLevel` to ``2``:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, logLevel: 2 } )

   .. seealso::

      :setting:`verbose`.

.. parameter:: notablescan

   Specify whether queries must use indexes. If ``1``, queries that
   perform a table scan instead of using an index will fail.

   Consider the following example which sets :parameter:`notablescan` to
   true:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, notablescan: 1 } )

   .. seealso:: :setting:`notablescan`

.. parameter:: replIndexPrefetch

   .. versionadded:: 2.2

   Use :parameter:`replIndexPrefetch` in conjunction with
   :setting:`replSet`. The default value is ``all`` and available
   options are:

   - ``none``
   - ``all``
   - ``_id_only``

   By default :term:`secondary` members of a :term:`replica set` will
   load all indexes related to an operation into memory before
   applying operations from the oplog. You can modify this behavior so
   that the secondaries will only load the ``_id`` index. Specify
   ``_id_only`` or ``none`` to prevent the :binary:`~bin.mongod` from
   loading *any* index into memory.

.. parameter:: replApplyBatchSize

   .. versionadded:: 2.4

   Specify the number of oplog entries to apply as a single batch.
   :parameter:`replApplyBatchSize` must be an integer between 1 and 1024.
   This option only applies to replica set members when they are in the :term:`secondary` state.

   Batch sizes must be ``1`` for members with :setting:`slaveDelay`
   configured.

.. parameter:: saslHostName

   .. versionadded:: 2.4

   :parameter:`saslHostName` overrides MongoDB's default hostname
   detection for the purpose of configuring SASL and Kerberos
   authentication.

   :parameter:`saslHostName` does not affect the hostname of the
   :binary:`~bin.mongod` or :binary:`~bin.mongos` instance for any purpose
   beyond the configuration of SASL and Kerberos.

   You can only set :parameter:`saslHostName` during start-up, and
   cannot change this setting using the :dbcommand:`setParameter`
   database command.

   .. note::

      :parameter:`saslHostName` supports Kerberos authentication and
      is only included in MongoDB Enterprise. See
      :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication`
      for more information.

.. parameter:: supportCompatibilityFormPrivilegeDocuments

   .. versionadded:: 2.4

   :parameter:`supportCompatibilityFormPrivilegeDocuments` is not
   available using :dbcommand:`setParameter` database command. Use the
   :setting:`setParameter` option in the configuration file or the
   :option:`--setParameter <mongod --setParameter>` option on the
   command line.

.. parameter:: syncdelay

   Specify the interval in seconds between :term:`fsync` operations
   where :binary:`~bin.mongod` flushes its working memory to disk. By
   default, :binary:`~bin.mongod` flushes memory to disk every 60
   seconds. In almost every situation you should not set this value
   and use the default setting.

   Consider the following example which sets the ``syncdelay`` to
   ``60`` seconds:

   .. code-block:: javascript

      db = db.getSiblingDB("admin")
      db.runCommand( { setParameter: 1, syncdelay: 60 } )

.. parameter:: traceExceptions

   .. versionadded:: 2.2

   Configures :binary:`~bin.mongod` log full stack traces on assertions or
   errors. If ``1``, :binary:`~bin.mongod` will log full stack
   traces on assertions or errors.

   Consider the following example which sets the
   ``traceExceptions`` to ``true``:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, traceExceptions: true } )

   .. seealso:: :setting:`traceExceptions`

.. parameter:: quiet

   Sets quiet logging mode. If
   ``1``, :binary:`~bin.mongod` will go into a quiet logging
   mode which will not log the following events/activities:

      - connection events;

      - the :dbcommand:`drop` command, the
        :dbcommand:`dropIndexes` command, the
        :dbcommand:`diagLogging` command, the
        :dbcommand:`validate` command, and the
        :dbcommand:`clean` command; and

      - replication synchronization activities.

   Consider the following example which sets the
   ``quiet`` to ``1``:

   .. code-block:: javascript

      db = db.getSiblingDB("admin")
      db.runCommand( { setParameter: 1, quiet: 1 } )

   .. seealso:: :setting:`quiet`

.. parameter:: textSearchEnabled

   .. versionadded:: 2.4

   .. include:: /includes/warning-text-search-not-for-production.rst

   Enables the :ref:`text search <text-search-text-command>` feature.
   You must enable the feature before creating or accessing a text
   index.

   .. code-block:: sh

      mongod --setParameter textSearchEnabled=true

   If the flag is not enabled, you cannot create *new* ``text``
   indexes, and you cannot perform text searches. However, MongoDB
   will continue to maintain existing ``text`` indexes.

.. parameter:: releaseConnectionsAfterResponse

   .. versionadded:: 2.2.4 and 2.4.2

   Changes the behavior of the connection pool that :binary:`~bin.mongos` uses
   to connect to the shards. As a result, each :binary:`~bin.mongos`
   should need to maintain fewer connections to each shard. When
   enabled, the :binary:`~bin.mongos` will release a connection into the
   thread pool *after* each read operation or command.

   .. warning:: For applications that do not use the :ref:`default
      <write-concern-acknowledged>`, :ref:`journaled
      <write-concern-replica-journaled>`, or :ref:`replica
      acknowledged <write-concern-replica-acknowledged>` write concern
      modes of the driver, :parameter:`releaseConnectionsAfterResponse`
      will affect the meaning of :dbcommand:`getLastError`.

      If an application allows read operations in between
      write operations and :dbcommand:`getLastError` calls,
      the resulting :dbcommand:`getLastError` will **not** report on
      the success of the proceeding write operation.

      Use with caution.

   To enable, use the following command while connected to a
   :binary:`~bin.mongos`:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, releaseConnectionsAfterResponse: true } )

   Alternately, you may start the :binary:`~bin.mongos` instance with the
   following run-time option:

   .. code-block:: sh

      mongos --setParameter releaseConnectionsAfterResponse=true

   To change this policy for the entire cluster, you must set
   :parameter:`releaseConnectionsAfterResponse` on each
   :binary:`~bin.mongos` instance in the cluster.

.. parameter:: ttlMonitorEnabled

   .. versionadded:: 2.4.6

   To support :doc:`TTL Indexes </core/index-ttl>`, :binary:`~bin.mongod`
   instances have a background thread that is responsible for deleting
   documents from collections with TTL indexes.

   To disable this worker thread for a :binary:`~bin.mongod`, set
   :parameter:`ttlMonitorEnabled` to ``false``, as in the following
   operations:

   .. code-block:: javascript

      use admin
      db.runCommand( { setParameter: 1, ttlMonitorEnabled: false } )

   Alternately, you may disable the thread at run-time by starting the
   :binary:`~bin.mongod` instance with the following option:

   .. code-block:: sh

      mongos --setParameter ttlMonitorEnabled=false
