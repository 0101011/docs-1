=======
$exists
=======

.. default-domain:: mongodb

.. operator:: $exists

   *Syntax*: ``{ field: { $exists: boolean } }`` 

   :operator:`$exists` selects the documents that contain
   the field. 

   MongoDB `$exists` does **not** correspond to SQL operator
   ``exists``. For SQL ``exists``, refer to the :operator:`$in`.
    
   **Example**: Select all documents in ``inventory`` where ``sale``
   exists.

   .. code-block:: javascript

      db.inventory.find( { sale: { $exists: true } } )

   **Example**: Select all documents in ``inventory`` where ``qty``
   exists *and* is not in the array ``[5, 15]``.
   
   .. code-block:: javascript

      db.inventory.find( { $and: [ { qty: { $nin: [ 5, 15 ] } } , { qty: { $exists: true } } ] }, { qty:1 } )
      
   You **must** use the :operator:`$and` construct rather than the
   implicit ``AND`` operation provided by comma-separated list.
         
   **Example**: Update a single document in ``inventory`` where
   ``sale`` does *not* exist.
   
   .. code-block:: javascript

      db.inventory.update( { sale: { $exists: false } }, { $set: { sale: false } } )

   See also :method:`find() <db.collection.find()>`, :method:`update()
   <db.collection.update()>`, :operator:`$set`, :operator:`$and`.
