=====================
$sample (aggregation)
=====================

.. default-domain:: mongodb

Definition
----------

.. pipeline:: $sample

   .. versionadded:: 3.2

   Randomly selects the specified number of documents from its input.

   The :pipeline:`$sample` stage has the following syntax: 

   .. code-block:: javascript

      { $sample: { size: <positive integer> } }

Behavior
--------

In order to get N random documents, :pipeline:`$sample` stage
performs a collection scan, performs a sort, and then select the top
N documents. As such, the :pipeline:`$sample` stage is subject to
the :ref:`sort memory restrictions <sort-memory-limit>`.

.. warning::

  - :pipeline:`$sample` may output the same document more than once
    in its result set. For more information, see
    :ref:`cursor-isolation`.

  - :pipeline:`$sample` as the first stage requires a collection
    scan.

Example
--------

Given a collection named ``users`` with the following documents:

.. code-block:: javascript

   { "_id" : 1, "name" : "dave123", "q1" : true, "q2" : true }
   { "_id" : 2, "name" : "dave2", "q1" : false, "q2" : false  }
   { "_id" : 3, "name" : "ahn", "q1" : true, "q2" : true  }
   { "_id" : 4, "name" : "li", "q1" : true, "q2" : false  }
   { "_id" : 5, "name" : "annT", "q1" : false, "q2" : true  }
   { "_id" : 6, "name" : "li", "q1" : true, "q2" : true  }
   { "_id" : 7, "name" : "ty", "q1" : false, "q2" : true  }

The following aggregation operation randomly selects ``3`` documents from the
collection:

.. code-block:: javascript

   db.users.aggregate(
      [ { $sample: { size: 3 } } ]
   )

The operation returns three random documents.
