==================
$pow (aggregation)
==================

.. default-domain:: mongodb

Definition
----------

.. expression:: $pow 

   .. versionadded:: 3.2

   Raises a number to the specified exponent and returns the result.
   :expression:`$pow` has the following syntax:

   .. code-block:: javascript

      { $pow: [ <number>, <exponent> ] }

   The ``<number>`` expression can be any valid :ref:`expression
   <aggregation-expressions>` as long as it resolves to a non-negative
   number.

   The ``<exponent>`` expression can be any valid :ref:`expression
   <aggregation-expressions>` as long as it resolves to a number.

   You cannot raise ``0`` to a negative exponent.

Behavior
--------

The result will have the same type as the input except when it
cannot be represented accurately in that type. In these cases:

- A 32-bit integer will be converted to a 64-bit integer if the
  result is representable as a 64-bit integer.

- A 32-bit integer will be converted to a double if the result is
  not representable as a 64-bit integer.

- A 64-bit integer will be converted to double if the result is not
  representable as a 64-bit integer.

.. include:: /includes/extracts/agg-expression-null-operand-pow.rst

.. list-table::
   :header-rows: 1
   :widths: 85 15

   * - Example
     - Results

   * - ``{ $pow: [ 5, 0 ] }``
     - ``1``

   * - ``{ $pow: [ 5, 2 ] }``
     - ``25``

   * - ``{ $pow: [ 5, -2 ] }``
     - ``0.04``

Example
-------


The following operation calculates the square of the number ``5``; i.e. raises
``5`` to the power of ``2``.

.. code-block:: javascript

   db.datasets.aggregate( [ { $project: { raisedTo2: { $pow: [ 5, 2 ] } } } ] )
