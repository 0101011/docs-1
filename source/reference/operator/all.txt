====
$all
====

.. default-domain:: mongodb

.. operator:: $all

   *Syntax*: ``{ field: { $all: array }``
   
   :operator:`$all` selects the documents where:
      - the ``field`` is *not* an array and its value matches the specified ``array``'s single element **or**
      - the ``field`` is an array that contains all the elements in the specified ``array``.
  
   **Example**: Select all documents in ``inventory`` where ``qty``
   matches the element of the specified array ``[5]``.
   
   .. code-block:: javascript

      db.inventory.find( { qty: { $all: [ 5 ] } } )

   **Example**: Select all documents in ``inventory`` where ``tags``
   contains all the elements in the array ``["appliances", "school"]``.
   	
   .. code-block:: javascript
   		
      db.inventory.find( { tags: { $all: [ "appliances", "school" ] } } )

   **Example**: Update a single document in ``inventory`` where
   ``tags`` contain all the elements in the array ``["appliances",
   "school"]``.

   .. code-block:: javascript

      db.inventory.update( { tags: { $all: [ "appliances", "school" ] } }, { $set: { sale: false } } )
			
   .. note::

      In most cases, MongoDB does not treat arrays as sets. This
      operator provides a notable exception to this general approach.
      
   See also :method:`find() <db.collection.find()>`, :method:`update()
   <db.collection.update()>`, :operator:`$set`.
