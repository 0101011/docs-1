========
$orderby
========

.. default-domain:: mongodb

.. operator:: $orderby

   The :operator:`$orderby` operator sorts the results of a query in
   ascending or descending order. Consider the following operations:

   .. code-block:: javascript

      db.collection.find()._addSpecial( "$orderby", { age : -1 } )
      db.collection.find( { $query: {}, $orderby: { age : -1 } } )

   These are equivalent to the following :method:`cursor.sort()` method that
   may be more familiar to you:

   .. code-block:: javascript

      db.collection.find().sort( { age: -1 } )

   These examples return all documents in the collection named
   ``collection`` sorted by the ``age`` field in descending order.
   Specify a value to :operator:`$orderby` of negative one (e.g.
   ``-1``, as above) to sort in descending order or a positive value
   (e.g. ``1``) to sort in ascending order.

   Unless you have a index for the specified key pattern, use
   :operator:`$orderby` in conjunction with :operator:`$maxScan` and/or
   :method:`cursor.limit()` to avoid requiring MongoDB to perform a large
   in-memory sort. :method:`cursor.limit()` increases the speed and reduce
   the amount of memory required to return this query by way of an
   optimized algorithm.
   
   .. seealso:: :operator:`$query` operator
