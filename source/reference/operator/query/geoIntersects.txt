==============
$geoIntersects
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. query:: $geoIntersects

   .. versionadded:: 2.4

   Selects documents whose geospatial data intersects with a specified
   :ref:`GeoJSON <geospatial-indexes-store-geojson>` object; i.e. where
   the intersection of the data and the specified object is non-empty.
   This includes cases where the data and the specified object share an
   edge. :query:`$geoIntersects` uses spherical geometry.

   :query:`$geoIntersects` does not require a geospatial index.
   However, a geospatial index will improve query performance.
   Only the :doc:`2dsphere </core/2dsphere>` geospatial index supports
   :query:`$geoIntersects`.

   The :query:`$geoIntersects` operator uses the :query:`$geometry`
   operator to specify the :ref:`GeoJSON
   <geospatial-indexes-store-geojson>` object and has the
   following form:

   .. code-block:: javascript

      {
         <location field>: {
           $geoIntersects: {
              $geometry: {
                type: "<GeoJSON object type>" ,
                coordinates: [ <coordinates> ]
              }
           }
         }
      }

   .. important::
      If you use longitude and latitude, specify coordinates in order
      of: **longitude, latitude.**

Behavior
--------

.. |geo-operator-method| replace:: :query:`$geoIntersects`
.. include:: /includes/fact-geometry-hemisphere-limitation.rst

Example
-------

The following example uses :query:`$geoIntersects` to select all
``loc`` data that intersect with the :ref:`geojson-polygon` defined by
the ``coordinates`` array.

.. code-block:: javascript

   db.places.find(
      {
        loc: {
          $geoIntersects: {
             $geometry: {
                type: "Polygon" ,
                coordinates: [
                  [ [ 0, 0 ], [ 3, 6 ], [ 6, 1 ], [ 0, 0 ] ]
                ]
             }
          }
        }
      }
   )
