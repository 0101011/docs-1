====
$mod
====

.. default-domain:: mongodb

.. operator:: $mod

   *Syntax*: ``{ field: { $mod: [ divisor, remainder ]} }``
   
   :operator:`$mod` selects the documents where the ``field`` divided
   by the ``divisor`` has the specified ``remainder``.
   
   For example, the query:
   
   .. code-block:: javascript
   
      db.inventory.find( { qty: { $mod: [ 4, 0 ] } } )
   
   selects all documents in ``inventory`` where the ``qty`` modulo
   ``4`` equals 3, such as documents with ``qty`` equal to ``0`` or
   ``12``.
   
   In some cases, you can query using :operator:`$mod` rather than the
   more expensive :operator:`$where` operator.  So, you can query:
   
   .. code-block:: javascript
   
      db.inventory.find( { qty: { $mod: [ 4, 3 ] } } )
   
   rather than using the more expensive `$where`:
     
   .. code-block:: javascript
   
      db.inventory.find( { $where: "this.qty % 4 == 3" } )
      
   .. seealso::
   
      method:`find() <db.collection.find()>`, :method:`update()
      <db.collection.update()>`, :operator:`$set`.
