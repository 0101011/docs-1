==========================================
Evaluate Performance of Current Operations
==========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The following sections describe techniques for evaluating operational
performance.

Use the Database Profiler to Evaluate Operations Against the Database
---------------------------------------------------------------------

.. todo Add link below: :doc:`database profiler </tutorial/manage-the-database-profiler>`

MongoDB provides a database profiler that shows performance
characteristics of each operation against the database. Use the profiler
to locate any queries or write operations that are running slow. You can
use this information, for example, to determine what indexes to create.

.. todo Add below: , see :doc:`/tutorial/manage-the-database-profiler` and ...

For more information, see :ref:`database-profiling`.

Use ``db.currentOp()`` to Evaluate ``mongod`` Operations
--------------------------------------------------------

The :method:`db.currentOp()` method reports on current operations
running on a :binary:`~bin.mongod` instance.

Use ``$explain`` to Evaluate Query Performance
----------------------------------------------

The :method:`~cursor.explain()` method returns statistics
on a query, and reports the index MongoDB selected to fulfill the
query, as well as information about the internal operation of the
query.

.. example:: To use :method:`~cursor.explain()` on a query
   for documents matching the expression ``{ a: 1 }``, in the
   collection named ``records``, use an operation that resembles the
   following in the :binary:`~bin.mongo` shell:

   .. code-block:: javascript

      db.records.find( { a: 1 } ).explain()

.. todo Link to Kay's new explain doc

See :doc:`/tutorial/analyze-query-plan` for more details.

