=========================
Install MongoDB on Ubuntu
=========================

.. default-domain:: mongodb

This tutorial outlines the basic installation process for installing
:term:`MongoDB` on Ubuntu Linux systems. This tutorial uses ``.deb``
packages as the basis of the installation. MongoDB releases are
available as ``.deb`` packages for easy installation and management
for users of Ubuntu.  Although Ubuntu does include MongoDB packages,
the official packages are generally more up to date.

.. note::

   If you use an older Ubuntu that does **not** use Upstart, (i.e. any
   version before 9.10 "Karmic") please follow the instructions on the
   :doc:`install-mongodb-on-debian` tutorial.

Package Options
---------------

The MongoDB downloads repository provides the ``mongodb-10gen`` package,
which contains the latest **stable** release. Additionally you can 
:ref:`install previous releases <install-ubuntu-version-pinning>` of MongoDB.

You cannot install this package concurrently with the ``mongodb``,
``mongodb-server``, or ``mongodb-clients`` packages provided by Ubuntu.

Install MongoDB
---------------

Configure Package Management System (APT)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Ubuntu package management tool (i.e. ``dpkg`` and ``apt``)
ensure package consistency and authenticity by requiring that
distributors sign packages with GPG keys. Issue the following command
to import the `MongoDB public GPG Key <http://docs.mongodb.org/10gen-gpg-key.asc>`_:

.. code-block:: sh

   sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10

Create a ``/etc/apt/sources.list.d/mongodb.list`` file using the
following command.

.. code-block:: sh

   echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list

Now issue the following command to reload your repository:

.. code-block:: sh

   sudo apt-get update

.. _install-ubuntu-version-pinning:

Install Packages
~~~~~~~~~~~~~~~~

Issue the following command to install the latest stable version of
MongoDB:

.. code-block:: sh

   sudo apt-get install mongodb-10gen

When this command completes, you have successfully installed MongoDB!
Continue for configuration and start-up suggestions.

Manage Installed Versions
~~~~~~~~~~~~~~~~~~~~~~~~~

You can use the ``mongodb-10gen`` package to install previous versions
of MongoDB. To install a specific release, append the version number
to the package name, as in the following example:

.. code-block:: sh

   apt-get install mongodb-10gen=2.2.3

This will install the ``2.2.3`` release of MongoDB. You can specify
any available version of MongoDB; however ``apt-get`` **will** upgrade
the ``mongodb-10gen`` package when a newer version becomes
available. Use the following *pinning* procedure to prevent unintended
upgrades.

To pin a package, issue the following command at the system prompt to
*pin* the version of MongoDB at the currently installed version:

.. code-block:: sh

   echo "mongodb-10gen hold" | sudo dpkg --set-selections

Configure MongoDB
-----------------

These packages configure MongoDB using the ``/etc/mongodb.conf`` file
in conjunction with the :term:`control script`.  You will find the
control script is at ``/etc/init.d/mongodb``.

This MongoDB instance will store its data files in the
``/var/lib/mongodb`` and its log files in ``/var/log/mongodb``, and
run using the ``mongodb`` user account.

.. note::

   If you change the user that runs the MongoDB process, you will need
   to modify the access control rights to the ``/var/lib/mongodb`` and
   ``/var/log/mongodb`` directories.

Control :program:`mongos`
~~~~~~~~~~~~~~~~~~~~~~~~~

As of the current release, there are no :term:`control scripts
<control script>` for :program:`mongos`. :program:`mongos` is only
used in sharding deployments and typically do not run on the same
systems where :program:`mongod` runs. You can use the ``mongodb``
script referenced above to derive your own :program:`mongos` control
script.

Run MongoDB
-----------

Start MongoDB
~~~~~~~~~~~~~

You can start the :program:`mongod` process by issuing the following
command:

.. code-block:: sh

   sudo service mongodb start

You can verify that :program:`mongod` has started successfully by checking the
contents of the log file at ``/var/log/mongodb/mongodb.log``.

Stop MongoDB
~~~~~~~~~~~~

As needed, you may stop the :program:`mongod` process by issuing the
following command:

.. code-block:: sh

   sudo service mongodb stop

Restart MongoDB
~~~~~~~~~~~~~~~

You may restart the :program:`mongod` process by issuing the
following command:

.. code-block:: sh

   sudo service mongodb restart

Use MongoDB
-----------

Among the tools included with the MongoDB package, is the
:program:`mongo` shell. You can connect to your MongoDB instance by
issuing the following command at the system prompt:

.. code-block:: sh

   mongo

This will connect to the database running on the localhost interface
by default. At the :program:`mongo` prompt, issue the following two
commands to insert a record in the "test" :term:`collection` of the
(default) "test" database.

.. code-block:: javascript

   db.test.save( { a: 1 } )
   db.test.find()

.. seealso:: :program:`mongo` and :doc:`/reference/method`
