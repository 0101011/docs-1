======
Delete
======

.. default-domain:: mongodb

*Delete* operations are those that remove :term:`documents <document>`
from a :term:`collection`. A document is the equivalent of an
:term:`RDBMS` record, and a collection is the equivalent of an RDBMS
table. *Delete* operations are one of the three categories of
:doc:`/core/write-operations`, along with :doc:`/core/create` and
:doc:`/core/update` operations.

You can delete documents using the :method:`~db.collection.remove()`
method in the :program:`mongo` shell or corresponding methods in the
:doc:`drivers </applications/drivers>`.

.. note::

   .. include:: /includes/fact-write-concern.rst

The :method:`~db.collection.remove()` method has the following syntax:

.. code-block:: javascript

   db.collection.remove( <query>, <justOne> )

.. admonition:: Corresponding operation in SQL

   The :method:`~db.collection.remove()` method is analogous to the
   ``DELETE`` statement. The ``<query>`` argument corresponds to the
   ``WHERE`` statement, and the ``<justOne>`` argument takes a Boolean
   and has the same effect as ``LIMIT 1``.

:method:`~db.collection.remove()` deletes documents from the
collection. If you do not specify a query,
:method:`~db.collection.remove()` removes all documents from a
collection, but does not remove the indexes. [#drop]_

.. note:: 

   For large deletion operations, it may be more efficient to copy the
   documents that you want to keep to a new collection and then use
   :method:`~db.collection.drop()` on the original collection.

.. [#drop] To remove all documents from a collection, it may be more
   efficient to use the :method:`~db.collection.drop()` method
   to drop the entire collection, including the indexes, and then
   recreate the collection and rebuild the indexes.
