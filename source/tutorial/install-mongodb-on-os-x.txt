=======================
Install MongoDB on OS X
=======================

.. default-domain:: mongodb

.. admonition:: Platform Support

   Starting in version 2.4, MongoDB only supports OS X versions 10.6
   (Snow Leopard) on Intel x86-64 and later.

MongoDB is available through the popular OS X package manager `Homebrew
<http://mxcl.github.com/homebrew/>`_ or through the MongoDB Download
site.

Install MongoDB with Homebrew
-----------------------------

`Homebrew <http://mxcl.github.com/homebrew/>`_ [#homebrew-setup]_
installs binary packages based on published "formulae". The following
commands will update ``brew`` to the latest packages and install
MongoDB.

In a terminal shell, update ``brew`` to the latest packages and install
MongoDB:

.. code-block:: sh

   brew update
   brew install mongodb

Later, if you need to upgrade MongoDB, you can issue the following
sequence of commands to update the MongoDB installation on your system:

.. code-block:: sh

   brew update
   brew upgrade mongodb

.. [#homebrew-setup] Homebrew requires some initial
   setup and configuration. This configuration is beyond the scope of
   this document.

.. _install-manual-osx:

Install MongoDB From Archive
----------------------------

Download from MongoDB Site
~~~~~~~~~~~~~~~~~~~~~~~~~~

#. In a terminal shell, download the latest release.

   .. include:: /includes/install-curl-release-osx-x86_64.rst

#. Extract the files from the downloaded archive.

   .. include:: /includes/install-untar-release-osx-x86_64.rst

#. Optional. Copy the extracted folder into another location, such
   as :file:`mongodb`.

   .. include:: /includes/install-copy-release-osx-x86_64.rst

#. Optional. To ensure that the downloaded binaries are in your
   ``PATH``, you can modify your ``PATH`` and/or create symbolic links
   to the MongoDB binaries in your :file:`/usr/local/bin` directory
   (:file:`/usr/local/bin` is already in your ``PATH``). You can find
   the MongoDB binaries in the ``bin/`` directory within the archive.

Run MongoDB
-----------

Set Up the Data Directory
~~~~~~~~~~~~~~~~~~~~~~~~~

Before you start :program:`mongod` for the first time, you will need to
create the data directory. By default, :program:`mongod` writes data to
the :file:`/data/db/` directory. 

#. Create the :file:`/data/db/` directory

   .. code-block:: sh

      sudo mkdir -p /data/db

#. Ensure that the user who runs the :program:`mongod`
   process has read and write permissions to this directory. For example,
   if you will run the :program:`mongod` process, change the owner
   of the :file:`/data/db/` directory:

   .. code-block:: sh

      sudo chown `id -u` /data/db

You can specify an alternate path for data files using the
:option:`--dbpath <mongod --dbpath>` option to :program:`mongod`. If
you use an alternate location for your data directory, ensure that the
alternate directory has the appropriate permissions.

Start MongoDB
~~~~~~~~~~~~~

To start :program:`mongod`, run the executable :program:`mongod` at the
system prompt.

For example, if your ``PATH`` includes the location of the
:program:`mongod` binary, enter ``mongod`` at the system prompt.

.. code-block:: sh

   mongod

If your ``PATH`` does not include the location of the :program:`mongod`
binary, enter the full path to the :program:`mongod` binary.

The previous command starts a :program:`mongod` instance that writes
data to the ``/data/db/`` directory. To specify an alternate data
directory, start :program:`mongod` with the :option:`--dbpath <mongod
--dbpath>` option:

.. code-block:: sh

   mongod --dbpath <some alternate directory>

Whether using the default :file:`/data/db/` or an alternate directory,
ensure that the user account running :program:`mongod` has read and
write permissions to the directory.

Stop MongoDB
~~~~~~~~~~~~

To stop the :program:`mongod` instance, press ``Control+C`` in the
terminal where the :program:`mongod` instance is running.
