==========================
Manage Chained Replication
==========================

.. default-domain:: mongodb

.. versionadded:: 2.4

MongoDB enables :ref:`chained replication
<replica-set-chained-replication>` by default. This procedure
describes how to disable it and how to re-enable it.

To disable chained replication, set the
:data:`~local.system.replset.settings.chainingAllowed`
field in :doc:`/reference/replica-configuration` to ``false``.

You can use the following sequence of commands to set
:data:`~local.system.replset.settings.chainingAllowed` to
``false``:

1. Copy the configuration settings into the ``cfg`` object:

   .. code-block:: javascript

      cfg = rs.config()

#. Take note of whether the current configuration settings contain the
   ``settings`` sub-document. If they do, skip this step.

   .. warning:: To avoid data loss, skip this step if the configuration
      settings contain the ``settings`` sub-document.

   If the current configuration settings **do not** contain the
   ``settings`` sub-document, create the sub-document by issuing the
   following command:

   .. code-block:: javascript

      cfg.settings = { }

#. Issue the following sequence of commands to set
   :data:`~local.system.replset.settings.chainingAllowed` to
   ``false``:

   .. code-block:: javascript

      cfg.settings.chainingAllowed = false
      rs.reconfig(cfg)

To re-enable chained replication, set
:data:`~local.system.replset.settings.chainingAllowed` to ``true``.
You can use the following sequence of commands:

.. code-block:: javascript

   cfg = rs.config()
   cfg.settings.chainingAllowed = true
   rs.reconfig(cfg)

.. note::

   If chained replication is disabled, you still can use
   :dbcommand:`replSetSyncFrom` to specify that a secondary replicates
   from another secondary. But that configuration will last only until the
   secondary recalculates which member to sync from.
