============
FAQ: Indexes
============

.. default-domain:: mongodb

This document addresses common questions regarding MongoDB indexes.

If you don't find the answer you're looking for, check the
:doc:`complete list of FAQs </faq>` or post your question to the
`MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_.
See also :doc:`/applications/indexes`.

.. contents:: Frequently Asked Questions:
   :backlinks: none
   :local:

Should you run ``ensureIndex()`` after every insert?
----------------------------------------------------

No. An index needs to be created only once for a collection. After
initial creation, MongoDB automatically updates the index as data
changes.

While running :method:`ensureIndex() <db.collection.ensureIndex()>` is
usually ok, if an index doesn't exist because of ongoing administrative
work, a call to :method:`ensureIndex() <db.collection.ensureIndex()>`
may disrupt database avalability. Runnning :method:`ensureIndex() <db.collection.ensureIndex()>`
can render a replica set inaccessible as the index
creation is happening. See :ref:`index-building-replica-sets`.

Will building a large index affect database performance?
--------------------------------------------------------

Building an index can be an IO-intensive operation, especially if you
have a large collection. This is true on any database system that
supports secondary indexes, including MySQL. If you need to build an
index on a large collection, consider building the index in the
background. See :ref:`index-creation-operations`.

If you build a large index without the background option, and if doing
so causes the database to stop responding, you have two options:

- Wait for the index to finish building

- Kill the current operation (see :method:`db.killOP()`). The partial
  index will be deleted.

Using ``$ne`` and ``$nin`` in a query is slow. Why?
---------------------------------------------------

The :operator:`$ne` and :operator:`$nin` operators are not selective.
See :ref:`index-selectivity`. If you need to use these,
it is often best to make sure that an additional, more selective
criterion is part of the query.
