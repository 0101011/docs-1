.. _2.8-replica-sets:

Replica Sets
------------

Replica Set Step Down Behavior Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The process that a :term:`primary` member of a :term:`replica set`
uses to step down has the following changes:

- Before stepping down, :dbcommand:`replSetStepDown` will attempt to
  terminate long running user operations that would block the primary
  from stepping down, such as an index build, a write operation or a
  map-reduce job.

- The :dbcommand:`replSetStepDown` will wait for an electable
  secondary to catch up to the state of the primary before stepping
  down. Previously a primary would wait 10 seconds for a secondary to
  catch up before stepping down. This change will help prevent
  rollbacks.

- :dbcommand:`replSetStepDown` now allows users to specify a
  ``secondaryCatchUpPeriodSecs`` parameter to specify how long the
  primary should wait for a secondary to catch up before stepping
  down.

Other Replica Set Operational Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Initial sync builds indexes more efficiently for each collection and
  applies oplog entries in batches using threads.

- Definition of :ref:`w: "majority" <wc-w>` write concern changed to
  mean majority of *voting* nodes.

- Stronger restrictions on :doc:`/reference/replica-configuration`. For
  details, see :ref:`2.8-compatibility-repl-set-config`.

- For pre-existing collections on secondary members, no longer build
  missing ``_id`` indexes automatically.

.. _2.8-sharded-clusters:

Sharded Clusters
----------------

Enhancement to Tag Management
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a new :method:`sh.removeTagRange()` helper to improve
management of sharded collections with tags. The new
:method:`sh.removeTagRange()` method acts as a complement to
:method:`sh.addTagRange()`.

More Predictable Read Preference Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:program:`mongos` instances no longer pin connections to members of
replica sets when performing read operations. Instead,
:program:`mongos` reevaluates :doc:`read preferences
</core/read-preference>` for every operation to provide a more
predictable read preference behavior when read preferences change.

Configurable Write Concern for Chunk Migration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a new ``writeConcern`` setting to configure the
:doc:`write concern </core/write-concern>` of chunk migration
operations. You can configure the ``writeConcern`` setting for the
:ref:`balancer <sharded-cluster-config-secondary-throttle>` as well as
for :dbcommand:`moveChunk` and :dbcommand:`cleanupOrphaned` commands.

Improved Visibility of Balancer Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:method:`sh.status()` includes information about the state of the
balancer. See :method:`sh.status()` for details.

Improvements
------------

.. _2.8-logging-improvements:

Enhanced Logging
~~~~~~~~~~~~~~~~

To improve usability of the log messages for diagnosis, MongoDB
categorizes some log messages under specific components, or operations,
and provides the ability to set the verbosity level for these
components. For information, see :doc:`/reference/log-messages`.

.. _2.8-tools-enhancements:

MongoDB Tools Enhancements
~~~~~~~~~~~~~~~~~~~~~~~~~~

All MongoDB tools are now written in go and maintained as a separate
project.

- Smaller binaries.

- New options for parallelized :program:`mongodump` and
  :program:`mongorestore`. You can control the number of collections
  that :program:`mongorestore` will restore at a time with the
  ``--numParallelCollections`` option.

- New options ``-excludeCollection`` and
  ``--excludeCollectionsWithPrefix`` for :program:`mongodump` to
  exclude collections

- :program:`mongorestore` can now accept BSON data input from standard
  input in addition to reading BSON data from file.

- :program:`mongostat` and :program:`mongotop` can now return output
  in JSON format with the ``--json`` option.

- Added configurable :term:`write concern` to :program:`mongoimport`,
  :program:`mongorestore`, and :program:`mongofiles`. Use the
  ``--writeConcern`` option.

- :program:`mongofiles` now allows you to configure the GridFS prefix
  with the ``--prefix`` option so that you can use custom namespaces
  and store multiple GridFS namespaces in a single database.

Covered Queries
~~~~~~~~~~~~~~~

For sharded collections, indexes can now :ref:`cover queries
<read-operations-covered-query>` that execute against the
:program:`mongos` if the index includes the shard key.

Geospatial Enhancement
~~~~~~~~~~~~~~~~~~~~~~

Add support for "big" polygons for :query:`$geoIntersects` and
:query:`$geoWithin` queries. "Big" polygons are single-ringed GeoJSON
polygons with areas greater than that of a single hemisphere. See
:query:`$geometry`, :query:`$geoIntersects`, and :query:`$geoWithin`
for details.

.. seealso:: :ref:`2.8-geo-near-compatibility`

Aggregation Enhancement
~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a new :expression:`$dateToString` operator to
facilitate converting a date to a formatted string.

``$eq`` Query Operator
~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a :query:`$eq` operator to query for equality
conditions.

Operational Changes
-------------------

Background Indexes
~~~~~~~~~~~~~~~~~~

Background index builds will no longer automatically interrupt if
:dbcommand:`dropDatabase`, :dbcommand:`dropIndexes`, :dbcommand:`drop`
occur. The :dbcommand:`dropDatabase`, :dbcommand:`dropIndexes`,
:dbcommand:`drop` commands will still fail with ``background job in
progress``, as in 2.6

Parallel index builds with createIndexes cmd
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _2.8-mmapv1-padding:

``mmapv1`` Record Allocation Behavior Changed
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The default allocation strategy for collections in instances that use
``mmapv1`` is :collflag:`powerOf2Sizes`. To remove all record padding
set :collflag:`noPadding` or specify the ``noPadding`` option to
:method:`db.createCollection()`.

Windows Performance Improvements
--------------------------------

Security Improvements
---------------------

SSL Certificate Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, MongoDB instances will *only* start if its certificate
(i.e. :setting:`net.ssl.PemKeyFile`) is valid. For details, see
:ref:`2.8-compatibility-certificate-validation`.

SSL Certificate Hostname Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a new ``--sslAllowInvalidHostnames`` option to disable
the validation of the hostname specified in the SSL certificate. For
details, see :ref:`2.8-compatibility-certificate-hostname-validation`.

MongoDB Enterprise Features
---------------------------

Audit Enhancements
~~~~~~~~~~~~~~~~~~

:doc:`/core/auditing` in MongoDB Enterprise can filter on CRUD
operations. For information, see :ref:`audit-filter`.

