Removed Commands
----------------

In 2.8, the following internal commands are no longer available:

- ``closeAllDatabases``

- ``getoptime``

``db.addUser()`` Removed
------------------------

2.8 removes the legacy ``db.addUser()`` method. Use
:method:`db.createUser()` and :method:`db.updateUser()` instead..

Security: Localhost Exception Changed
-------------------------------------

In 2.8, the localhost exception changed so that these connections *only*
have access to create the first user on the ``admin``
database. In previous versions, connections that gained access using
the localhost exception had unrestricted access to the MongoDB
instance.

See :ref:`local-host-exception` for more information.

Storage Engine Configuration File Options
-----------------------------------------

With the introduction of additional storage engines in 2.8, some
options moved in the configuration file schema. Consider the following
changes:

- ``storagejournal.commitIntervalMs`` becomes :setting:`storage.mmapv1.journal.commitIntervalMs`
- ``storagejournal.debugFlags`` becomes :setting:`storage.mmapv1.journal.debugFlags`
- ``storagensSize`` becomes :setting:`storage.mmapv1.nsSize`
- ``storagepreallocDataFiles`` becomes :setting:`storage.mmapv1.preallocDataFiles`
- ``storagequota.enforced`` becomes :setting:`storage.mmapv1.quota.enforced`
- ``storagequota.maxFilesPerDB`` becomes :setting:`storage.mmapv1.quota.maxFilesPerDB`
- ``storagesmallFiles`` becomes :setting:`storage.mmapv1.smallFiles`
- ``storagesyncPeriodSecs`` becomes :setting:`storage.mmapv1.syncPeriodSecs`

2.8 :program:`mongod` instances are backwards compatible with existing
configuration files, but will issue warnings when if you attempt to
use the old settings.

Data Files Must Correspond to Configured Storage Engine
-------------------------------------------------------

The files in the :setting:`~storage.dbPath` directory must correspond
to the configured storage engine (i.e. ``--storageEngine``). MongoDB
will not support if you attempt to start :program:`mongod` with data
files in :setting:`~storage.dbPath` produced by a different
``--storageEngine``.

``touch`` command returns an error for unsupported Storage Engines
------------------------------------------------------------------

If a storage engine does not support the :dbcommand:`touch`, then
the :dbcommand:`touch` command will return an error.

The ``wiredTiger`` storage engine *does not* support the
:dbcommand:`touch`. ``mmapv1`` supports :dbcommand:`touch`.

SSL Configuration Option Changes
--------------------------------

MongoDB 2.8 introduced new :setting:`net.ssl.allowConnectionsWithoutCertificates`
configuration file and ``--sslAllowConnectionsWithoutCertificates``
command line option for :program:`mongod` and :program:`mongos`. These
options replace previous :setting:`net.ssl.weakCertificateValidation` and
``--sslWeakCertificateValidation`` options, which became
aliases. Update your configuration to ensure future compatibility.

SSL Certificates Must be Valid
------------------------------

By default, MongoDB instances will *only* start if is certificate
(i.e. :setting:`net.ssl.PemKeyFile`) is valid. You can disable this
behavior with the :setting:`net.ssl.allowInvalidCertificates` setting.

Replica Set State Change
------------------------

The ``FATAL`` replica set state does not exist as of 2.8.0.

Replica Set Oplog Format Change
-------------------------------

.. TODO: link this section to the upgrade instructions.

MongoDB 2.8 is not compatible with oplog entries generated by versions
of MongoDB before 2.2.1. If you upgrade from one of these versions,
you must wait for new oplog entries to overwrite *all* old oplog
entries generated by one of these versions before upgrading to 2.8.0
or earlier.

Replica Set Configuration Validation
------------------------------------

MongoDB now provides more strict validation of :doc:`replica set
configuration objects </reference/replica-configuration>`. Of
particular note are the following alterations:

- Arbiters may only have ``1`` vote. Previously arbiters could have
  ``0`` votes, which is not supported.

Shell: Authentication Compatibility
-----------------------------------

Versions of the :program:`mongo` shell before 2.8, are *not*
compatible with 2.8 deployments of MongoDB that enforce access
control. If you have a 2.8 MongoDB deployment that requires
authentication you must use 2.8 versions of the :program:`mongo`
shell.

Shell: Collection and Index Listing with ``wiredTiger`` and Older Shells
------------------------------------------------------------------------

With the ``wiredTiger`` storage engine, and versions of
the :program:`mongo` shell before ``2.8.0``, the
:method:`db.getCollectionNames()` (along with ``show collections`` and
``show tables``) and as well as :method:`db.collection.getIndexes()`
return no output.

Use the :program:`mongo` shell from a 2.8 distribution when connecting
to :program:`mongod` instances that use ``wiredTiger``.

Changes to Restart Behavior during Background Indexing
------------------------------------------------------

For 2.8 :program:`mongod` instances, if a background index build is in
progress when the :program:`mongod` process terminates, when the
instance restarts the index build will restart as foreground index
build. If the index build encounters any errors, such as a duplicate
key error, the :program:`mongod` will exit with an error.

To start the :program:`mongod` after a failed index build, use the
:setting:`storage.indexBuildRetry` or :option:`--noIndexBuildRetry
<mongod --noIndexBuildRetry>` to skip the index build on start up.

Tools: All Tools Must Connect to a Running MongoDB Instance
-----------------------------------------------------------

The 2.8 versions of MongoDB tools, :program:`mongodump`,
:program:`mongorestore`, :program:`mongoexport`,
:program:`mongoimport`, :program:`mongofiles`, and
:program:`mongooplog`, must connect to running MongoDB instances and
*cannot* modify MongoDB data files as in previous versions.

.. _2.8-geo-near-compatibility:

``2d`` Indexes and Geospatial Near Queries
------------------------------------------

For :query:`$near` queries that use a :doc:`2d </core/2d>` index:

- MongoDB no longer uses a default limit of 100 documents.

- Specifying a :method:`~cursor.batchSize()` is no longer analogous to
  specifying a :method:`~cursor.limit()`.

For :query:`$nearSphere` queries that use a :doc:`2d </core/2d>` index,
MongoDB no longer uses a default limit of 100 documents.
