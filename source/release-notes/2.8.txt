:orphan:

==============================================================
Development Release Notes for MongoDB 2.8.0 Release Candidates
==============================================================

.. default-domain:: mongodb

MongoDB 2.8 is currently in development. While 2.8 release candidates
are currently available, these versions of MongoDB are for **testing
only and not for production use**.

Major Changes
-------------

Storage Engines: Pluggable API, Improved Concurrency, Document-Level Locking with Compression
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. RF: added the storage engine API first; makes it easier to introduce new
.. storage engines

MongoDB 2.8 includes a pluggable storage engine API that allows third
parties to develop storage engines with MongoDB.

MongoDB 2.8 includes support for two storage engines: MMAPv1, the
storage engine available in previous versions of MongoDB, and
`WiredTiger <http://wiredtiger.com>`_. By
default, in 2.8 MongoDB uses the MMAPv1 engine.

The 2.8 MMAPv1 storage engine adds support for collection-level locking by
default. The 2.8 WiredTiger storage engine provides document-level locking
and compression. WiredTiger supports all MongoDB features and can
interoperate with MMAPv1 in the same replica set or sharded cluster, but
requires a change to the on-disk storage format. To convert an existing
data set to WiredTiger, you can either:

- upgrade replica sets in a rolling manner. See
  :ref:`2.8-upgrade-replica-set` or :ref:`2.8-upgrade-cluster`, or

- use :program:`mongodump` and :program:`mongorestore` to import
  data.

To enable WiredTiger, start MongoDB with the following option:

.. code-block:: sh

   mongod --storageEngine wiredTiger

If you attempt to start a :program:`mongod` with a
:setting:`storage.dbPath` that contains data files produced by a
storage engine other than the one specified by ``--storageEngine``,
:program:`mongod` will refuse to start.

Start :program:`mongod` with the ``--wiredTigerDirectoryForIndexes``
option to store indexes and collections in separate directories. Use
this capability to store indexes and data on separate storage
devices. For example:

.. code-block:: sh

   mongod --storageEngine wiredTiger --wiredTigerDirectoryForIndexes

WiredTiger has additional options that you can configure
at start up time. To configure the storage engine
for a :program:`mongod` instance, use the following option:

.. code-block:: sh

   --wiredTigerEngineConfig "<option>=<setting>,<option>=<setting>"

Specify a comma-separated list of options in quotes on the command
line. See the `WiredTiger storage engine options
<http://source.wiredtiger.com/2.4.1/group__wt.html#ga9e6adae3fc6964ef837a62795c7840ed>`_.

You can modify the WiredTiger storage engine
configuration options of a running :program:`mongod` instance with the
:parameter:`wiredTigerEngineRuntimeConfig` parameter, as in the
following:

.. code-block:: javascript

   db.adminCommand( { "setParameter": 1,
                      "wiredTigerEngineRuntimeConfig": "<option>=<setting>,<option>=<setting>" })

To change WiredTiger settings for all new collections, use the following option:

.. code-block:: sh

   --wiredTigerCollectionConfig "<option>=<setting>,<option>=<setting>"

To change WiredTiger settings for all new indexes:

.. code-block:: sh

   --wiredTigerIndexConfig "<option>=<setting>,<option>=<setting>"

Specify a comma-separated list of options in quotes on the command
line. See the `wired tiger index and collection-level options
<http://source.wiredtiger.com/2.4.1/struct_w_t___s_e_s_s_i_o_n.html#a358ca4141d59c345f401c58501276bbb>`_.

You can also configure WiredTiger on a per-collection basis using
:method:`db.createCollection()`:

.. code-block:: javascript

   db.createCollection("<collectionName>", {storageEngine: {
                                               wiredTiger: {configString: "<option>=<setting>,<option>=<setting>"}}});

All existing server, database, and collection reporting exposes
statistics from WiredTiger, including: :method:`db.serverStatus()`,
:method:`db.stats()`, :method:`db.collection.stats()`, and
:method:`db.collection.validate()`.

WiredTiger supports compression by default on all collections using
the *Snappy* library.

Increased Number of Replica Set Members
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB replica sets now support larger maximum replica set sizes up
to 50 members. As in earlier releases, replica sets may only have a
maximum of 7 voting members.

Use the following drivers with larger replica sets:

- C# (.NET) Driver 1.10
- Java Driver 2.13
- Python Driver (PyMongo) 3.0+
- Ruby Driver 2.0+
- Node.JS Driver 2.0+

Because the C, C++, Perl, PHP, and earlier versions of the Ruby,
Python, and Node.JS drivers discover and monitor replica set members
serially, these drivers are not suitable for use with large replica
sets.

Pymongo 3.0, the Ruby Driver 2.0, and the Node.JS Driver 2.0 are currently
in development.

New Query Introspection System
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 includes a new query introspection system that provides a
finer-grained introspection into query optimization and query execution
for :method:`db.collection.count()`, :method:`db.collection.group()`,
:method:`db.collection.remove()`, :method:`db.collection.update()` and
:method:`db.collection.find()`. For more information, see
:method:`db.collection.explain()` method and :dbcommand:`explain`
command. For information on the format of the new output from explain
operations, see :doc:`/reference/explain-results`.

Security Improvements
---------------------

New ``SCRAM-SHA-1`` Password Authentication Mechanism
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 2.8 adds a new ``SCRAM-SHA-1`` password authentication mechanism.

Changes to the Localhost Exception
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When using :ref:`localhost-exception` to access MongoDB, you have limited
access and can only create a user in the ``admin`` database.

Query Engine Improvements
-------------------------

Covered Queries
~~~~~~~~~~~~~~~

For sharded collections, indexes can now cover queries that execute against the
primary.

Additional Changes
----------------------

.. class:: hidden

   .. toctree::

      /release-notes/2.8-general-improvements

Changes Affecting Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. class:: hidden

   .. toctree::

      /release-notes/2.8-compatibility

Some changes in 2.8 can affect :doc:`compatibility
</release-notes/2.8-compatibility>` and may require user actions. For a
detailed list of compatibility changes, see
:doc:`/release-notes/2.8-compatibility`.

Upgrade Process
---------------

.. class:: hidden

   .. toctree::

      /release-notes/2.8-upgrade
      /release-notes/2.8-downgrade

See :doc:`/release-notes/2.8-upgrade` for full upgrade instructions.

Download
--------

To download MongoDB 2.8 release candidates, go to the `downloads page`_.

.. _`downloads page`: http://www.mongodb.org/downloads

Additional Resources
~~~~~~~~~~~~~~~~~~~~

- `All Third Party License Notices <https://github.com/mongodb/mongo/blob/v2.8/distsrc/THIRD-PARTY-NOTICES>`_.
