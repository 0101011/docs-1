arg_name: field
description: |
  The :term:`namespace` of the :term:`collection` where the
  :term:`chunk` exists. Specify the collection's full namespace,
  including the database name.
interface: command
name: moveChunk
operation: moveChunk
optional: false
position: 1
type: string
---
arg_name: field
description: |
  An equality match on the shard key that specifies the shard-key value
  of the chunk to move. Specify either the ``bounds`` field or the
  ``find`` field but not both.
interface: command
name: find
operation: moveChunk
optional: false
position: 2
type: document
---
arg_name: field
description: |
  The bounds of a specific chunk to move. The array must consist of two
  documents that specify the lower and upper shard key values of a chunk
  to move. Specify either the ``bounds`` field or the ``find`` field but
  not both. Use ``bounds`` to move chunks in collections partitioned
  using a :term:`hashed shard key`.
interface: command
name: bounds
operation: moveChunk
optional: false
position: 3
type: array
---
arg_name: field
description: |
  The name of the destination shard for the chunk.
interface: command
name: to
operation: moveChunk
optional: false
position: 4
type: string
---
arg_name: field
description: |
  Defaults to ``true``. When ``true``, the balancer waits
  for replication to :term:`secondaries <secondary>` when it copies
  and deletes data during chunk migrations. For details, see
  :ref:`sharded-cluster-config-secondary-throttle`.
interface: command
name: _secondaryThrottle
operation: moveChunk
optional: true
position: 5
type: Boolean
---
arg_name: field
description: |
  Internal option for testing purposes. The default is ``false``. If set
  to ``true``, the delete phase of a :dbcommand:`moveChunk` operation
  blocks.
interface: command
name: _waitForDelete
operation: moveChunk
optional: true
position: 6
type: Boolean
...
