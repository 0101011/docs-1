collection: "inventory"
pre: |
  To create an index that stores the index entries in ascending order,
  specify ``1`` for the type. To create an index that stores the entries
  in descending order, specify ``-1`` for the type.
---
title: Create a Single-Field Index
ref: 1
pre: |
  Create an ascending index on the ``item`` field of the
  ``inventory`` collection.
operation:
  language: javascript
  code: |
    db.inventory.ensureIndex( { item: 1 } )
post: |
  The method returns a document with the status of the operation.

  The ``createdCollectionAutomatically`` indicates if the operation
  created a collection. If a collection does not exist, MongoDB
  creates the collection as part of the indexing
  operation.

  The ``numIndexesBefore`` indicates the number of indexes existing
  before the method call. In the example, the ``1`` existing index
  refers to the ``_id`` index which MongoDB automatically creates upon
  the creation of the collection.

  The ``numIndexesAfter`` indicates the number of indexes existing
  after the method call. If the index has been successfully created,
  this number should be one greater than ``numIndexesBefore``.

  The ``ok`` indicates that the method did not encounter any errors.
results: |
      {
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
      }
---
title: Create a compound index.
ref: 2
pre: |
  MongoDB supports :ref:`compound indexes <index-type-compound>` which
  are indexes on multiple fields. Each field in the index can have its
  own order.

  The order in which the field appears in the index specification as
  well as the sort order of the field matter for compound indexes.
operation:
  - pre: |
      The following example creates an index on the ``category`` field
      and the ``details.manufacturer`` field. The index specifies an
      ascending order for the ``category`` field and descending order
      for the ``details.manufacturer`` field.
    language: javascript
    code: |
      db.inventory.ensureIndex( { category: 1, "details.manufacturer": -1 } )
post: |
  The method returns a document with the status of the operation. The
  ``numIndexesAfter`` of ``3`` versus the ``numIndexesBefore`` of ``2``
  indicates that the method created a new index.
results: |
  {
     "createdCollectionAutomatically" : false,
     "numIndexesBefore" : 2,
     "numIndexesAfter" : 3,
     "ok" : 1
  }
...
