collection: "inventory"
options:
  show_title: False
  show_collection: False
content:
  - '{ "item" : "ABC1", "details" : { "model" : "14Q3", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "S", "qty" : 25 }, { "size" : "M", "qty" : 50 } ], "category" : "clothing" }'
  - '{ "item" : "ABC2", "details" : { "model" : "14Q3", "manufacturer" : "M1 Corporation" }, "stock" : [ { "size" : "M", "qty" : 50 } ], "category" : "clothing" }'
  - '{ "item" : "MNO2", "details" : { "model" : "14Q3", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "clothing" }'
  - '{ "item" : "IJK2", "details" : { "model" : "14Q2", "manufacturer" : "M5 Corporation" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "houseware" }'
  - '{ "item" : "BE10", "details" : { "model" : "14Q2", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "L", "qty" : 5 } ], "category" : "clothing" }'
  - '{ "item" : "ZYT1", "details" : { "model" : "14Q1", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 } ], "category" : "houseware" }'
---
title:
  text: "Specify ``upsert: true`` for replacement operation."
  level: 4
ref: 1
pre: |
  When you specify ``upsert: true`` for an update operation to replace
  a document and no matching documents are found, MongoDB creates a new
  document using the equality conditions in the conditions
  document, and replaces this document, except for the ``_id`` field if
  specified, with the update document.
operation:
  pre: |
    The following operation either updates a matching
    document by replacing it with a new document or inserts a new
    document if no matching document exists.
  language: javascript
  code: |
     db.inventory.update( 
         { item: "TBD1" },
         {
           item: "TBD1",
           details: { "model" : "14Q4", "manufacturer" : "ABC Company" },
           stock: [ { "size" : "S", "qty" : 25 } ], 
           category: "houseware"
         },
         { upsert: true }
     )
post: |
   The update operation returns a :method:`WriteResult` object which
   contains the status of the operation.

   The :data:`~WriteResult.nMatched` field shows that the operation
   matched ``0`` documents.

   The :data:`~WriteResult.nUpserted` of ``1`` shows that the operation
   added a document through an ``upsert``.

   The :data:`~WriteResult.nModified` of ``0`` specifies that no
   existing documents were updated.

   The ``_id`` field shows the generated ``_id`` field for the new
   document.

results: |
  WriteResult({
      "nMatched" : 0,
      "nUpserted" : 1,
      "nModified" : 0,
      "_id" : ObjectId("53dbd684babeaec6342ed6c7")
  })
---
title:
  text: "Specify ``upsert: true`` to update specific fields operation."
  level: 4
ref: 2
pre: |
  When you specify ``upsert: true`` for an update operation that modifies
  specific fields and no matching documents are found, MongoDB creates
  a new document using the equality conditions in the conditions
  document, and applies the modification as specified in the
  update document.
operation:
  pre: |
      The following update operation either updates specific
      fields of a matching document or adds a new document if no
      matching document exists.
  language: javascript
  code: |
    db.inventory.update( 
       { item: "TBD2" },
       {
         $set: {
            details: { "model" : "14Q3", "manufacturer" : "IJK Co." },
            category: "houseware"
         }
       },
       { upsert: true }
    )
post: |

  The update operation returns a :method:`WriteResult` object which
  contains the status of the operation. The
  :data:`~WriteResult.nMatched` field shows that the operation matched
  ``0`` documents.

  The :data:`~WriteResult.nUpserted` of ``1`` shows that the operation
  added a document through an ``upsert``.

  The :data:`~WriteResult.nModified` of ``0`` specifies that no
  existing documents were updated.

  The ``_id`` field shows the generated ``_id`` field for the new
  document.

results: |
       WriteResult({
           "nMatched" : 0,
           "nUpserted" : 1,
           "nModified" : 0,
           "_id" : ObjectId("53dbd7c8babeaec6342ed6c8")
       })
...