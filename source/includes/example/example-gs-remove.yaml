collection: "inventory"
options:
  show_title: False
  show_collection: False
content:
  - '{ "item" : "ABC1", "details" : { "model" : "14Q3", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "S", "qty" : 25 }, { "size" : "M", "qty" : 50 } ], "category" : "clothing" }'
  - '{ "item" : "ABC2", "details" : { "model" : "14Q3", "manufacturer" : "M1 Corporation" }, "stock" : [ { "size" : "M", "qty" : 50 } ], "category" : "clothing" }'
  - '{ "item" : "MNO2", "details" : { "model" : "14Q3", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "clothing" }'
  - '{ "item" : "IJK2", "details" : { "model" : "14Q2", "manufacturer" : "M5 Corporation" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "houseware" }'
  - '{ "item" : "BE10", "details" : { "model" : "14Q2", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "L", "qty" : 5 } ], "category" : "clothing" }'
  - '{ "item" : "ZYT1", "details" : { "model" : "14Q1", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 } ], "category" : "houseware" }'
---
title: "Remove All Documents That Match a Condition"
ref: 1
pre : |
  To remove all documents with ``"category"`` field equal to
  ``"houseware"`` from the ``inventory`` collection, pass ``{
  "category" : "houseware" }`` to the :method:`~db.collection.remove()`
  method.
operation:
  language: javascript
  code: |
    db.inventory.remove( { "category" : "houseware" } )
post: |
  The remove operation returns a :method:`WriteResult` object which
  contains the status of the operation.

  Successful operation should return the following document where
  :data:`~WriteResult.nRemoved` field specifies the number of documents
  removed, in this case ``2``.
results:
   - 'WriteResult({ "nRemoved" : 2 })'
---
title: Use the ``justOne`` Option
ref: 2
pre: |
  By default, the :method:`~db.collection.remove()` method removes all
  documents that match the remove condition. Use the ``justOne`` option
  to limit the remove operation to only one of the matching documents.
operation:
  - pre: |
      For example, multiple documents have ``category`` field equal to
      ``"clothing"``. The following operation only removes a single
      document even though multiple documents match.
    language: javascript
    code: |
      db.inventory.remove( { "category": "clothing" },  { justOne: true } )
post: |
  Successful operation should return the following document where
  :data:`~WriteResult.nRemoved` field specifies the number of documents
  removed, in this case ``1``.
results:
  - 'WriteResult({ "nRemoved" : 1 })'
# post: |
#    A query of the ``inventory`` collection shows that three documents
#    with ``category`` equal to ``"clothing"`` still remain.
---
title: "Remove All Documents"
ref: 3
pre: |
  To remove all documents from a collection, pass an empty
  conditions document ``{}`` to the
  :method:`~db.collection.remove()` method.
operation:
  language: javascript
  code: |
    db.inventory.remove( { } )
post: |
  Successful operation should return the following document where
  :data:`~WriteResult.nRemoved` field specifies the number of documents
  removed, in this case ``3``.
results:
  - 'WriteResult({ "nRemoved" : 3 })'
---
title: "Drop a Collection"
ref: 4
pre: |  
  The remove all operation only removes the documents from the
  collection. The collection itself, as well as any indexes for the
  collection, remain.
 
  To remove all documents from a collection, it may be more efficient
  to drop the entire collection, including the indexes, and then
  recreate the collection and rebuild the indexes.
operation:
  pre: |
    Use the :method:`~db.collection.drop()` method to drop a collection,
    including any indexes. For example, the following drops the
    ``inventory`` collection. 
  language: javascript
  code: |
     db.inventory.drop()
post: |
   Upon successful drop of the collection, the operation returns
   ``true``. If the collection to drop does not exist, the operation
   will return ``false``.
results:
  - 'true'
...