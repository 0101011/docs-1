arg_name: field
description: |
  Enables a :term:`capped collection`. To create a capped collection,
  specify ``true``. If you specify ``true``, you must also set a maximum
  size in the ``size`` field.
interface: method
name: capped
operation: db.createCollection
optional: true
position: 1
type: Boolean
---
arg_name: field
description: |
  Specify ``false`` to disable the automatic creation of an index on the
  ``_id`` field. Before 2.2, the default value for ``autoIndexId`` was
  ``false``. See :ref:`2.2-id-indexes-capped-collections` for more
  information.

  Do **not** set ``autoIndexId`` to ``true`` for replicated
  collections.
interface: method
name: autoIndexId
operation: db.createCollection
optional: true
position: 2
type: Boolean
---
arg_name: field
description: |
  Specifies a maximum size in bytes for a capped collection. The
  ``size`` field is required for capped collections, and ignored for
  other collections.
interface: method
name: size
operation: db.createCollection
optional: true
position: 3
type: number
---
arg_name: field
description: |
  The maximum number of documents allowed in the capped collection. The
  ``size`` limit takes precedence over this limit. If a capped
  collection reaches its maximum ``size`` before it reaches the maximum
  number of documents, MongoDB removes old documents. If you prefer to
  use this limit, ensure that the ``size`` limit, which is required, is
  sufficient to contain the documents limit.
interface: method
name: max
operation: db.createCollection
optional: true
position: 4
type: number
---
arg_name: field
description: |
  Set to ``false`` to disable the :collflag:`usePowerOf2Sizes` allocation
  strategy for this collection. Defaults to ``true`` unless the
  :parameter:`newCollectionsUsePowerOf2Sizes` parameter is set to
  ``false``.
  
  .. versionadded:: 2.6
     :collflag:`usePowerOf2Sizes` became an option to
     :method:`db.createCollection()` when :collflag:`usePowerOf2Sizes`
     became the default allocation strategy for all new collections.
interface: method
name: usePowerOf2Sizes
operation: db.createCollection
optional: true
position: 5
type: boolean
...
