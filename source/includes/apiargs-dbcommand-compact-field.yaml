arg_name: field
description: |-
  The name of the collection.
interface: dbcommand
name: compact
operation: compact
optional: false
position: 1
type: string
---
arg_name: field
description: |
  If ``true``, :dbcommand:`compact` can run on the
  :term:`primary` in a :term:`replica set`. If ``false``,
  :dbcommand:`compact` returns an error when run on a
  primary, because the command blocks all other activity.
  Beginning with version 2.2, :dbcommand:`compact` blocks
  activity only for the database it is compacting.
interface: dbcommand
name: force
operation: compact
optional: true
position: 2
type: boolean
---
arg_name: field
description: |
  Describes the :term:`record size` allocated for each
  document as a factor of the document size for all records
  compacted during the :dbcommand:`compact` operation. The
  ``paddingFactor`` does not affect the padding of subsequent
  record allocations after :dbcommand:`compact` completes.
  For more information, see :ref:`compact-paddingFactor`.
interface: dbcommand
name: paddingFactor
operation: compact
optional: true
position: 3
type: number
---
arg_name: field
description: |
  Sets the padding as an absolute number of bytes for all
  records compacted during the :dbcommand:`compact`
  operation. After :dbcommand:`compact` completes,
  ``paddingBytes`` does not affect the padding of subsequent
  record allocations. For more information, see
  :ref:`compact-paddingBytes`.
interface: dbcommand
name: paddingBytes
operation: compact
optional: true
position: 4
type: integer
...
