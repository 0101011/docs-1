.. index:: read operations; query
.. _read-operations-query-operations:
.. _read-operations-queries:

=======
Queries
=======

.. default-domain:: mongodb

Read operations, or *queries*, retrieve :term:`documents <document>`
from a :term:`collection` in MongoDB. A document is the equivalent of
an :term:`RDBMS` record, and a collection is the equivalent of an RDBMS
table. Read operations in MongoDB is analogous to the SQL ``SELECT``
statement.

Query Methods
-------------

In MongoDB, the :method:`db.collection.find()` method, which returns a
cursor, and the :method:`db.collection.findOne()` method, which returns
a single document, perform read operations.

The :method:`~db.collection.find()` method has the following syntax:

.. code-block:: javascript

   db.collection.find( <query>, <projection> )

The :method:`~db.collection.findOne()` method has the following
syntax:

.. code-block:: javascript

   db.collection.findOne( <query>, <projection>)

The first argument to the methods defines the selection criteria. See
:ref:`query-statement` for details.

The second argument to the methods limits the fields to return. See
:doc:`/core/projection` for details.

.. _query-statement:

Query Document
--------------

The *first* argument to the :method:`~db.collection.find()` and
:method:`~db.collection.findOne()` methods is the query document. The
query documents are :term:`BSON` objects that use a set of :doc:`query
operators </reference/operator>` to specify a condition, such as
equality or less than. For example:

.. code-block:: javascript

   db.records.find( { "user_id": { $lt: 42} } )

This query selects the documents in the ``records`` collection that
match the condition ``user_id`` less than ``42``.

For more examples of queries, see :doc:`/tutorial/query-documents`.

Query Behavior
--------------

- All queries in MongoDB address a *single* collection.

- The order of documents returned by a query is not defined and is not
  necessarily consistent unless you specify a :method:`~cursor.sort()`.
