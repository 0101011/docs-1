=====================================
Data Manipulation (CRUD) Introduction
=====================================

.. default-domain:: mongodb

CRUD stands for Create, Read, Update, and Delete. These operations are
the four core operations used to access data in a database.

Data Structure in MongoDB
-------------------------

MongoDB stores data records as :term:`documents <document>` in
:term:`collections <collection>`. Collections are analogous to RDBMS
tables, and documents are analogous to RDBMS records or rows.

Documents in MongoDB are JSON-style data structures composed of field
and value pairs. In addition to being the structure for the data
records, the JSON-style document is the structure for query selectors,
update actions, and index specificiations, among others. For more
information, see :doc:`/core/document`.

Access Data in MongoDB
----------------------

**Create** operations, or *inserts*, in MongoDB add new documents to a
collection. MongoDB provides various methods, in the :program:`mongo`
shell and the various :ecosystem:`driver apis <>`, to perform inserts.
The primary method in the :program:`mongo` shell is the
:method:`db.collection.insert()` method. For a more detailed overview
on this and other create methods, see :doc:`/core/create`.

**Read** operations, or *queries*, in MongoDB read documents from a
collection. MongoDB provides various methods, in the :program:`mongo`
shell and the various :ecosystem:`driver apis <>`, to perform reads.
The primary method in the :program:`mongo` shell is the
:method:`db.collection.find()` method, which returns a cursor to the
documents. For a more detailed overview on this and other read methods,
see :doc:`/core/read`. To read more on handling cursors, see
:doc:`/core/cursors`.

**Update** operations in MongoDB update existing documents in a
collection. MongoDB provides various methods, in the :program:`mongo`
shell and the various :ecosystem:`driver apis <>`, to perform updates.
The primary method in the :program:`mongo` shell is the
:method:`db.collection.update()` method, which by default updates a
single document. For a more detailed overview on this and other update
methods, see :doc:`/core/update`.

**Delete** operations, or *remove* operations, in MongoDB remove
existing documents from a collection. MongoDB provides the
:method:`db.collection.remove()` method in the :program:`mongo` shell,
and its corresponding api in the various :ecosystem:`drivers <>`, to
perform deletes. For a more detailed overview on this method, see
:doc:`/core/delete`.

Additional Features
-------------------

For read operations, indexes can improve the efficiency and performance
of read operations. Indexes can even cover a query such that the read
operations only needs to access an index to fulfill the read
operations. For more information, see
:doc:`/core/read-operations-indexes`.

For write operations, MongoDB allows applications to specify whether
the write operations should wait for a response from the database
regarding the status of the operation. See :doc:`/core/write-concern`
for more information.
