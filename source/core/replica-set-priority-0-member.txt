.. _replica-set-secondary-only-members:

==============================
*Priority 0* Replica Set Members
==============================

.. default-domain:: mongodb

*Priority 0* members contain copies of the :term:`primary's <primary>`
data set and can accept read operations from client applications.
*Priority 0* members **cannot** become primary in an election.  For
example, you may consider setting the priority of a member to 0 when
you wish to to prevent :term:`secondaries <secondary>` located outside
of the main data centers from ever becoming primary.

.. example:: 

   In the following three member replica set, the first data center
   contains the primary and a secondary whereas the second data center
   contains a **priority 0** member that cannot become a primary.

   .. include:: /images/replica-set-three-members-geographically-distributed.rst

A *priority 0* member has its
:data:`~local.system.replset.members[n].priority` equal to ``0`` in its
member configuration:

.. code-block:: javascript

   {
      "_id" : <num>,
      "host" : <hostname:port>,
      "priority" : 0
   }

*Priority 0* members also support acting as cold standbys. For some
sets, it may not be possible to initialize a new member in a reasonable
amount of time. In these situations, it may be useful to maintain a
cold standby with an up-to-date copy for the purpose of replacing
another member in the replica set. In most cases, these members can be
ordinary members of the replica set, but in large sets, with varied
hardware availability, or given some patterns of :ref:`geographical
distribution <replica-set-geographical-distribution>`, you may want to
use a *priority 0* or a hidden member.

Cold standbys may be valuable when your primary and "hot standby"
secondary members have a different hardware specification or connect via
a different network than the main set. In these cases, deploy members as
a *priority 0* member or a :ref:`hidden <replica-set-hidden-members>`
member to ensure that they will vote in elections but will never be
eligible to become primary. If your set already has ``7`` voting
members, set the :data:`local.system.replset.members[n].votes` value to
``0`` for the cold standby members, so that they won't vote in
elections.

When configuring *priority 0* members, consider the likely failover
scenarios, such as inter-site network partitions. Always ensure that
there will be members eligible for election as primary *and* a quorum
of voting members in the main facility.

To configure a *priority 0* member, see
:doc:`/tutorial/configure-secondary-only-replica-set-member`.
