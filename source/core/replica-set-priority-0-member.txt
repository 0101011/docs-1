.. _replica-set-secondary-only-members:

==============================
Priority 0 Replica Set Members
==============================

.. default-domain:: mongodb

*Priority 0* members contain copies of the :term:`primary's <primary>`
data set, can accept read operations from client applications, and vote
in :ref:`elections <replica-set-elections>` for primary. However,
*priority 0* members **cannot** become primary in an election, and
*priority 0* members **do not** trigger elections.

For example, you may consider setting the priority of a member to 0
when you wish to to prevent :term:`secondaries <secondary>` located
outside of the main data centers from ever becoming primary.

.. example::

   In the following three member replica set, the first data center
   contains the primary and a secondary whereas the second data center
   contains a *priority 0* member that cannot become a primary.

   .. include:: /images/replica-set-three-members-geographically-distributed.rst

Configuration
-------------

A *priority 0* member has its
:data:`~local.system.replset.members[n].priority` equal to ``0`` in its
member configuration:

.. code-block:: javascript

   {
      "_id" : <num>,
      "host" : <hostname:port>,
      "priority" : 0
   }

Applications
------------

*Priority 0* members can function as cold standbys in a replica
set. In this role, a member of a replica set holds a copy of the data
but cannot become primary without manual intervention. For some sets,
it may not be possible to initialize a new member in a reasonable
amount of time. In these situations, it may be useful to maintain a
cold standby with an up-to-date copy for the purpose of replacing
another member in the replica set. In most cases, these members can be
ordinary members of the replica set, but in larger sets, with varied
hardware availability, or given some patterns of :ref:`geographical
distribution <replica-set-geographical-distribution>`, you may want to
use a *priority 0* or a :doc:`hidden member
</core/replica-set-hidden-member>` to maintain an extra copy of the data.

*Priority 0* members may be valuable when your primary and any hot
standbys have different hardware specification than the other members
of a the set. In these cases, deploy members as a *priority 0* member
or a :ref:`hidden <replica-set-hidden-members>` member to ensure that
they will vote in elections but will never be eligible to become
primary. If your set already has ``7`` voting members, set the
:data:`local.system.replset.members[n].votes` value to ``0`` for the
cold standby members, so that they won't vote in elections.

When configuring *priority 0* members, consider the likely failover
scenarios, such as inter-site network partitions. Always ensure that
there will be members eligible for election as primary *and* a quorum
of voting members in the main facility.

To configure a *priority 0* member, see
:doc:`/tutorial/configure-secondary-only-replica-set-member`.
