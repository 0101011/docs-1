.. index:: fundamentals; sharding
.. _sharding-fundamentals:

============================
Sharded Cluster Introduction
============================

.. default-domain:: mongodb

Sharding is MongoDBâ€™s approach to scaling out. Sharding partitions a
collection and stores the different portions on different
machines. When a database's collections become too large for existing
storage, you need only add a new machine. Sharding automatically
distributes collection data to the new server.

Sharding automatically balances data and load across machines. Sharding
provides additional write capacity by distributing the write load over a
number of :program:`mongod` instances. Sharding allows users to increase
the potential amount of data in the :term:`working set`.

When to Use Sharding
--------------------

While sharding is a powerful and compelling feature, it comes with
significant infrastructure requirements
and some limited complexity costs. As a result, use
sharding only as necessary and when indicated by actual operational
requirements.

Consider deploying a :term:`sharded cluster` if:

- your data set approaches or exceeds the storage capacity of a single
  node in your system.

- the size of your system's active :term:`working set` *will soon*
  exceed the capacity of the *maximum* amount of RAM for your system.

- your system has a large amount of write activity, a single
  MongoDB instance cannot write data fast enough to meet demand, and
  all other approaches have not reduced contention.

If these attributes are not present in your system, sharding will only
add additional complexity to your system without providing much
benefit. When designing your data model, if you will eventually need a
sharded cluster, consider which collections you will want to shard and
the corresponding shard keys.

.. _sharding-capacity-planning:

.. important:: It takes time and resources to deploy sharding, and if
   your system has *already* reached or exceeded its capacity, you
   will have a difficult time deploying sharding without impacting
   your application.

   As a result, if you think you will need to partition your database
   in the future, **do not** wait until your system is overcapacity to
   enable sharding.

For More Information on Sharding Requirements
---------------------------------------------

For information on requirements, see the following:

- :doc:`/core/sharded-cluster-components-overview`

- :ref:`sharding-requirements-data`
