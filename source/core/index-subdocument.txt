.. index:: index; subdocuments
.. _index-subdocuments:
.. _index-sub-documents:
.. _index-subdocument:
.. _index-sub-document:

========================
Indexes on Sub-documents
========================

.. default-domain:: mongodb

You can also create indexes on sub-documents.
Given the following document in the ``factories`` collection:

.. code-block:: javascript

   { "_id": ObjectId(...), 
     metro: { city: "New York", 
              state: "NY" } 
            },
     name: "Giant Factory"
   )

The ``metro`` field is a sub-document, containing the embedded fields
``city`` and ``state``. An index on the ``metro`` field [words].

The following queries would use the index on the ``metro`` field, and
both would return the above document:

.. code-block:: javascript

   db.factories.find( { metro: { city: "New York", state: "NY" } } );

   db.factories.find( { metro: { $gte : { city: "New York" } } } );

The first query returns the document as one would expect: the query
matches the subdocument perfectly.

The second query returns the document because ``{ city: "New York",
state: "NY" }`` is greater than ``{ city: "New York" }``. The order of
comparison is in ascending key order in the order that the keys occur
in the :term:`BSON` document.
