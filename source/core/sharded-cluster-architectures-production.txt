.. _sharding-production-architecture:

===============================
Production Cluster Architecture
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

In a production cluster, you must ensure that data is redundant and that
your systems are highly available. To that end, a production
cluster must have the following components:

Components
----------

Config Servers
~~~~~~~~~~~~~~

Three :ref:`config servers <sharding-config-server>`. Each config
server must be on separate machines. A single :term:`sharded
cluster` must have exclusive use of its :ref:`config servers
<sharding-config-server>`. If you have multiple sharded clusters,
you will need to have a group of config servers for each cluster.

Shards
~~~~~~

Two or more :term:`replica sets <replica set>`. These replica sets
are the :term:`shards <shard>`. For information on replica sets, see
:doc:`/replication`.

.. index:: mongos, load balancer, mongos load balancer

Query Routers (``mongos``)
~~~~~~~~~~~~~~~~~~~~~~~~~~

One or more :binary:`~bin.mongos` instances.  The :binary:`~bin.mongos`
instances are the routers for the cluster. Typically, deployments have
one :binary:`~bin.mongos` instance on each application server.

You may also deploy a group of :binary:`~bin.mongos` instances and use
a proxy/load balancer between the application and the
:binary:`~bin.mongos`. In these deployments, you *must* configure the load
balancer for *client affinity* so that every connection from a single
client reaches the same :binary:`~bin.mongos`.

Because cursors and other resources are specific to an single
:binary:`~bin.mongos` instance, each client must interact with only one
:binary:`~bin.mongos` instance.

Example
-------

.. include:: /images/sharded-cluster-production-architecture.rst
