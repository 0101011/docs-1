.. index:: shard key
   single: sharding; shard key
   
.. _sharding-shard-key:
.. _shard-key:
.. _sharding-internals-shard-keys:

==========
Shard Keys
==========

.. default-domain:: mongodb

.. TODO rework the these paragraphs. Some of these sentences may be
   misleading or inaccurate.

The shard key determines the distribution of the collection's
:term:`documents <document>` among the cluster's :term:`shards
<shard>`. The shard key is a :term:`field` that exists in every
document in the collection. MongoDB distributes documents according to
ranges of values in the shard key. A given shard holds documents for
which the shard key falls within a specific range of values. Shard
keys, like :term:`indexes <index>`, can be either a single field or
multiple fields.

Within a shard, MongoDB further partitions documents into :term:`chunks
<chunk>`. Each chunk represents a smaller range of values within the
shard's range. When a chunk grows beyond the :ref:`chunk size
<sharding-chunk-size>`, MongoDB :term:`splits <split>` the chunk into
smaller chunks, always based on ranges in the shard key.

.. _sharding-hashed-sharding:
.. _sharding-hashed-shard-key-internals:

Hashed Sharding
---------------

.. versionadded:: 2.4

Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a
single field as the :term:`shard key` to partition data across your
sharded cluster.

The field you choose as your hashed shard key should have a good
cardinality, or large number of different values. Hashed keys work
well with fields that increase monotonically like :term:`ObjectId`
values or timestamps.

If you shard an empty collection using a hashed shard key, MongoDB
will automatically create and migrate chunks so that each shard has
two chunks.  You can control how many chunks MongoDB will create with
the ``numInitialChunks`` parameter to :dbcommand:`shardCollection` or
by manually creating chunks on the empty collection using the
:dbcommand:`split` command.

To shard a collection using a hashed shard key, see
:doc:`/tutorial/shard-collection-with-a-hashed-shard-key`.

.. class:: hidden

   .. toctree::
      :maxdepth: 1

      /core/sharding-shard-key-indexes
      /core/sharding-shard-key-considerations
