.. index:: index; sparse
.. _index-type-sparse:

==============
Sparse Indexes
==============

.. default-domain:: mongodb

Sparse indexes only contain entries for documents that have the
indexed field. [#null-values-are-indexed-in-sparse-indexes]_ Any
document that is missing the field is not indexed. The index is
"sparse" because of the missing documents when values are missing.

By contrast, non-sparse indexes contain all documents
in a collection, and store null values for documents that do not
contain the indexed field. Create a sparse index on the ``xmpp_id``
field, of the ``members`` collection, using the following operation in
the :program:`mongo` shell:

.. code-block:: javascript

   db.addresses.ensureIndex( { "xmpp_id": 1 }, { sparse: true } )

By default, ``sparse`` is ``false`` on MongoDB indexes.

.. warning::

   Using these indexes will sometimes result in incomplete results
   when filtering or sorting results, because sparse indexes are not
   complete for all documents in a collection.

.. note::

   Do not confuse sparse indexes in MongoDB with `block-level`_
   indexes in other databases. Think of them as dense indexes with a
   specific filter.

   You can combine the sparse index option with the :ref:`unique
   indexes <index-type-unique>` option so that :program:`mongod` will
   reject documents that have duplicate values for a field, but that
   ignore documents that do not have the key.

   .. _`block-level`: http://en.wikipedia.org/wiki/Database_index#Sparse_index

.. [#null-values-are-indexed-in-sparse-indexes] All documents that
   have the indexed field *are* indexed in a sparse index, even if
   that field stores a null value in some documents.
