.. index:: pair: replica set; failover
.. _replica-set-failover-administration:
.. _replica-set-failover:
.. _failover:

=============================
Replica Set High Availability
=============================

.. default-domain:: mongodb

Replica sets provide automatic failover to support autonomous
operation. If the :ref:`primary <replica-set-primary-member>` of a
replica set either steps down, becomes inaccessible, or becomes
otherwise ineligible to act as the primary, the replica set will
automatically hold an :doc:`election </core/replica-set-elections>` to
:doc:`elect </core/replica-set-elections>` one of the secondaries to
become primary. In some situations, the failover process may also
involve :doc:`rollbacks </core/replica-set-rollbacks>`.

In most cases, failover occurs without administrator intervention. If
your MongoDB deployment does not failover according to expectations,
consider the following operational errors:

- No remaining member is able to form a majority. This can happen as a
  result of network partitions that render some members
  inaccessible. Design your deployment to ensure that a majority of
  set members can elect a primary in the same facility as core
  application systems.

- No member is eligible to become primary. Members must have a
  :data:`~local.system.replset.settings.members[n].priority` setting
  greater than ``0``, have a state that is less than ten seconds behind
  the last operation to the :term:`replica set`, and generally be *more*
  up-to-date than the voting members.

Continue reading for additional information on failover in replica sets:

.. toctree::
   :titlesonly:

   /core/replica-set-elections
   /core/replica-set-rollbacks

.. /core/replica-set-non-voting-members
