.. index:: replica set members; hidden
.. _replica-set-hidden-configuration:
.. _replica-set-hidden-members:

==========================
Hidden Replica Set Members
==========================

.. default-domain:: mongodb

A hidden member contains a copy of the :term:`primary's <primary>` data
set. Hidden members are **invisible** to client applications, and the
:method:`db.isMaster()` method will not display hidden members. A hidden
member is also a :ref:`secondary-only members
<replica-set-secondary-only-members>` and **cannot become primary**.
Hidden members, however, **do vote** in :ref:`elections
<replica-set-elections>`.

For example, in the following 5-member replica set, all four secondary
members have copies of the primary's data set, but one of secondary
members is hidden.

.. include:: /images/replica-set-hidden-member.rst

A hidden member has its
:data:`~local.system.replset.members[n].priority` equal to ``0`` and
its :data:`~local.system.replset.members[n].hidden` equal to ``true``
in its member configuration:

.. code-block:: javascript

   {
     "_id" : <num>
     "host" : <hostname:port>,
     "priority" : 0,
     "hidden" : true
   }

Hidden members are ideal for instances that will have significantly
different usage patterns, such as a dedicated node for reporting or
backups, than the other members and require separation from normal
traffic. Since no secondary reads reach hidden members, hidden members
receive no traffic beyond what replication requires.

For dedicated backup, ensure that the hidden member is close, from a
networking perspective, to the primary or likely primary. Ensure that
the :term:`replication lag` is minimal or non-existent.

To configure a hidden member, see
:doc:`/tutorial/configure-a-hidden-replica-set-member`. For more
information about backing up MongoDB databases, see
:doc:`/core/backups`.
