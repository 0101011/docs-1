.. index:: sharding; shards
.. index:: shards
.. _sharding-shards:

==========================
Sharded Cluster Components
==========================

.. default-domain:: mongodb

Sharding occurs within a :term:`sharded cluster`. A sharded cluster
consists of the following components:

- **Shards**. A shard is a container that holds a subset of a
  collectionâ€™s data. Each shard is either a single :program:`mongod`
  instance or a :term:`replica set`. In production, all shards should
  be replica sets. For more information see :doc:`/core/sharded-cluster-shards`.

- **Config servers**. Each :ref:`config server
  <sharding-config-server>` is a :program:`mongod` instance that holds
  metadata about the cluster. The metadata maps :term:`chunks <chunk>`
  to shards. For more information see :doc:`/core/sharded-cluster-config-servers`.

- **Routing instances**. Each router is a :program:`mongos` instance that
  routes the reads and writes from applications to the shards.
  Applications do not access the shards directly.
  For more information see :doc:`/core/sharded-cluster-query-router`.

.. include:: /images/sharded-cluster.rst

Within a sharded cluster, you enable sharding on a per-database basis.
When you enable sharding on a database, MongoDB distributes the collections
across the shards. MongoDB does not yet distribute data within a collection.

After enabling sharding for a database, you choose which collections to
shard. For each sharded collection, you specify a :term:`shard key`.

.. only:: website

   Further Reading
   ---------------

   .. class:: toc

      .. include:: /includes/dfn-list-sharded-cluster-components.rst

To set up a sharded cluster, see :ref:`sharding-procedure-setup`.

.. class:: hidden

   .. include:: /includes/toc-sharded-cluster-components.rst
