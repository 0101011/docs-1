.. _replica-set-secondary-only-members:

==================================
Secondary-Only Replica Set Members
==================================

.. default-domain:: mongodb

Secondary-only members contain copies of the :term:`primary's <primary>`
dataset and can accept read operations from client applications.
Secondary-only members **cannot** become primary in an election.
Secondary-only mode is useful, for example, if you want to prevent
:term:`secondaries <secondary>` located outside of the main data centers
from ever becoming primary.

Secondary-only members also support acting as cold standbys. For some
sets, it may not be possible to initialize a new member in a reasonable
amount of time. In these situations, it may be useful to maintain a
cold standby with an up-to-date copy for the purpose of replacing
another member in the replica set. In most cases, these members can be
ordinary members of the replica set, but in large sets, with varied
hardware availability, or given some patterns of :ref:`geographical
distribution <replica-set-geographical-distribution>`, you may want to
use a secondary-only or a hidden member.

Cold standbys may be valuable when your primary and "hot standby"
secondary members have a different hardware specification or connect via
a different network than the main set. In these cases, deploy members as
a secondary-only member or a :ref:`hidden <replica-set-hidden-members>`
member to ensure that they will vote in elections but will never be
eligible to become primary. If your set already has ``7`` voting
members, set the :data:`local.system.replset.members[n].votes` value to
``0`` for the cold standby members, so that they won't vote in
elections.

When configuring secondary-only members, consider the likely failover
scenarios, such as inter-site network partitions, and ensure there will
be members eligible for election as primary *and* a quorum of voting
members in the main facility.

To configure a secondary-only member, see
:doc:`/tutorial/configure-secondary-only-replica-set-member`.
