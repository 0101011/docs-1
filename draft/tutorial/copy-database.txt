=============================
How to Copy or Clone Database
=============================

.. default-domain:: mongodb

Sypnosis
--------

One may need to copy a :term:`database` from one server to another,
rename a database, or move a database within the same server, seed a
development server from a production server, or create a test
environment with production data. The :dbcommand:`copydb` and
:dbcommand:`clone` function in MongoDB can help one in these
situations.

This document oulines the procedure to copy MongoDB databases using
the :dbcommand:`copydb` and :dbcommand:`clone` command.

While :program:`mongodump` and :program:`mongorestore` tools are
available, the copy database commands are faster as there are no
intermediate files to be created.

.. note::

   :dbcommand:`copydb` and :dbcommand:`clone` do not produce
   point-in-time snapshots of the source database. Write traffic to
   the source database during the copy process may result in databases
   with different contents.
   
Considerations
--------------

- :dbcommand:`copydb` or :dbcommand:`clone` must be run on the
  destination server.

- :dbcommand:`copydb` or :dbcommand:`clone` do not work with a sharded
  database, such as a database a from :term:`shard cluster`.

- :dbcommand:`copydb` or :dbcommand:`clone` commands may be run
  on a :term:`secondary` member.

- There must be enough free disk storage on the destination server for the
  database from the source server.

Process
-------

Copy a Database to Another Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :dbcommand:`copydb` when you need to transfer a database from
one server, such as a development server, to another, such as a
production server.

To copy the database named ``test`` on server ``db0.example.net`` to
another server ``db1.example.net`` renaming it ``records``.

- Verify name of database, ``test``, you want to copy on the source
  server, ``db0.example.net``.

- Log onto the destination server, ``db1.example.net``.

- Run the following operation from :program:`mongo` shell on the
  destination server, ``db1.example.net``:

   .. code-block:: javascript

      db.copyDatabase( "test", "records", db0.example.net )

Rename a Database
~~~~~~~~~~~~~~~~~

Use the :dbcommand:`copydb` to rename a database within the same
server. This is useful when the contents of the database has changed
from the initial naming of the database and a new name would be more
fitting for the 

To rename a database from ``test`` to ``records`` within the
same server, ``db1.example.net``.

- Log onto the destination server, ``db1.example.net``.

- Run the following command from :program:`mongo shell` on the
  destination server, ``db1.example.net``:

   .. code-block:: javascript

      db.copyDatabase( "test", "records" )

Copy a Database with Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the source server requires ``username`` and ``password``
authentication, you can include these parameters in the
:dbcommand:`copydb` command. This is useful where you need to create
offsite backups.

To copy ``test`` to ``records`` from the source server
``db0.example.net``, which requires ``username`` and ``password``
authentication, to ``db1.example.net`` use the following procedure.

- Log onto the destination server, ``db1.example.net``.

- Run the following command from :program:`mongo` shell on the
  destination server, ``db1.example.net``.

   .. code-block:: javascript

      db.copyDatabase( "test", "records", db0.example.net, username, password)

.. TODO verify that username & password do not have to be in quotes...?

Clone a Database
~~~~~~~~~~~~~~~~

.. ?? use to create a secondary server very quickly?
   

:dbcommand:`clone` copies a database between :program:`mongod`
instances; however, :dbcommand:`clone` preserves the database
name. For many operations :dbcommand:`clone` has a more
straightforward syntax than :dbcommand:`copydb`.

To clone a database from ``db0.example.net`` to ``db1.example.net``, on
``db1.example.net`` follow these procedures.

- Log onto the destination server, ``db1.example.net``.

- Run the following command from :program:`mongo` shell on the
  destination server, ``db1.example.net``:

   .. code-block:: javascript

      db.cloneDatabase( "db0.example.net" )
